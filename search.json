[{"path":"https://bucky2177.github.io/dRiftDM/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Valentin Koob Thomas Richter Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/articles/convert_dmc_parameters.html","id":"the-mathematical-equations","dir":"Articles","previous_headings":"","what":"The Mathematical Equations","title":"How to Convert DMC's parameters","text":"DMC 8 parameters general form: muc drift rate controlled process b (constant) boundary non_dec mean (normally-distributed) non-decision time sd_non_dec standard deviation (normally-distributed) non-decision time tau scale automatic process shape automatic process amplitude automatic process alpha shape parameter starting point distribution (symmetric beta-distribution)","code":""},{"path":"https://bucky2177.github.io/dRiftDM/articles/convert_dmc_parameters.html","id":"scaling-for-the-diffusion-constant","dir":"Articles","previous_headings":"The Mathematical Equations","what":"Scaling for the Diffusion Constant","title":"How to Convert DMC's parameters","text":"consider diffusion constant whenever parameter depends scale evidence space (.e., somehow related scale y-axis evidence accumulation process). case muc, b, DMC. can transform parameters : θnew=θσold⋅σnewσold. \\theta_{new} = \\theta_{\\sigma_{old}} \\cdot \\frac{\\sigma_{new}}{\\sigma_{old}}\\,.  , θσold\\theta_{\\sigma_{old}} parameter (e.g., muc, b, ) scale previous diffusion constant, σold\\sigma_{old}, θσnew\\theta_{\\sigma_{new}} transformed parameter scaling target diffusion constant, σnew\\sigma_{new}. Example: transform muc =0.5= 0.5 diffusion constant σold=4\\sigma_{old} = 4 match DDM diffusion constant σnew=1\\sigma_{new} = 1, compute 0.5⋅14=0.125.0.5\\cdot \\frac{1}{4} = 0.125\\,.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/articles/convert_dmc_parameters.html","id":"scaling-the-time-space","dir":"Articles","previous_headings":"The Mathematical Equations","what":"Scaling the Time Space","title":"How to Convert DMC's parameters","text":"Time scaling bit difficult, consider parameter affected time /evidence-space scale. non_dec, sd_non_dec, tau depend primarily time space. transformation seconds milliseconds, vice versa, straightforward: θs=θms/1000andθms=θs⋅1000.\\theta_{s} = \\theta_{ms} / 1000 \\quad \\text{} \\quad \\theta_{ms} = \\theta_{s} \\cdot 1000\\,. b depend primarily evidence space scale. Yet, still transform slightly.1 parameters can use θs=θms/1000andθms=θs⋅1000.\\theta_{s} = \\theta_{ms} / \\sqrt{1000} \\quad \\text{} \\quad \\theta_{ms} = \\theta_{s} \\cdot \\sqrt{1000}\\,. Finally, drift rate muc describes rate evidence increase per time step. use θs=θms⋅10001000andθms=θs⋅10001000.\\theta_s = \\theta_{ms} \\cdot \\frac{1000}{\\sqrt{1000}} \\quad \\text{} \\quad \\theta_{ms} = \\theta_{s} \\cdot \\frac{\\sqrt{1000}}{1000}\\,. Example: transform muc =0.5= 0.5 milliseconds seconds, calculate 0.5⋅10001000=15.8.0.5\\cdot \\frac{1000}{\\sqrt{1000}} = 15.8\\,.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/articles/convert_dmc_parameters.html","id":"an-r-helper-function","dir":"Articles","previous_headings":"","what":"An R Helper Function","title":"How to Convert DMC's parameters","text":"tedious transformations “hand,” present small helper function implements transformations. function takes named numeric vector parameter values returns transformed values.2 Let’s see conversion works checking model predictions scaling: Note: transformed values unit milliseconds diffusion constant 4 similar size obtained Ulrich et al. (2015).","code":"# Input documentation: # named_values: a named numeric vector # sigma_old, sigma_new: the previous and target diffusion constants # t_from_to: scaling of time (options: ms->s, s->ms, or none) convert_prms <- function(   named_values,   sigma_old = 4,   sigma_new = 1,   t_from_to = \"ms->s\" ) {   # Some rough input checks   stopifnot(is.numeric(named_values), is.character(names(named_values)))   stopifnot(is.numeric(sigma_old), is.numeric(sigma_new))   t_from_to <- match.arg(t_from_to, choices = c(\"ms->s\", \"s->ms\", \"none\"))    # Internal conversion function (takes a name and value pair, and transforms it)   internal <- function(name, value) {     name <- match.arg(       name,       choices = c(\"muc\", \"b\", \"non_dec\", \"sd_non_dec\", \"tau\", \"a\", \"A\", \"alpha\")     )      # 1. scale for the diffusion constant     if (name %in% c(\"muc\", \"b\", \"A\")) {       value <- value * (sigma_new / sigma_old)     }      # 2. scale for the time     # determine the scaling per parameter (assuming s->ms)     scale <- 1     if (name %in% c(\"non_dec\", \"sd_non_dec\", \"tau\")) {       scale <- 1000     }     if (name %in% c(\"b\", \"A\")) {       scale <- sqrt(1000)     }     if (name %in% c(\"muc\")) {       scale <- sqrt(1000) / 1000     }      # adapt, depending on the t_from_to argument     if (t_from_to == \"ms->s\") {       scale <- 1 / scale     }     if (t_from_to == \"none\") {       scale <- 1     }      value <- value * scale   }    # Apply the internal function to each element   converted_values <- mapply(FUN = internal, names(named_values), named_values)    return(converted_values) } dmc_s <- dmc_dm() prms_solve(dmc_s) # current parameter settings for sigma = 1 and seconds #>   sigma   t_max      dt      dx      nt      nx  #> 1.0e+00 3.0e+00 7.5e-03 2.0e-02 4.0e+02 1.0e+02 quants_s <- calc_stats(dmc_s, \"quantiles\") # calculate predicted quantiles print(quants_s) # show quantiles #> Type of Statistic: quantiles #>  #>    Source   Cond Prob Quant_corr Quant_err #> 1    pred   comp  0.1      0.325     0.321 #> 2    pred   comp  0.2      0.346     0.343 #> 3    pred   comp  0.3      0.364     0.362 #> 4    pred   comp  0.4      0.384     0.380 #> 5    pred   comp  0.5      0.406     0.398 #> 6    pred   comp  0.6      0.433     0.419 #> 7    pred   comp  0.7      0.465     0.443 #> 8    pred   comp  0.8      0.507     0.476 #> 9    pred   comp  0.9      0.574     0.531 #> 10   pred incomp  0.1      0.352     0.301 #> ... #>  #> (access the data.frame's columns/rows as usual)  # now the same with new diffusion constant of 4 and time scale in milliseconds dmc_ms <- dmc_dm() prms_solve(dmc_ms)[\"sigma\"] <- 4 # new diffusion constant prms_solve(dmc_ms)[\"t_max\"] <- 3000 # 3000 ms is new max time prms_solve(dmc_ms)[\"dt\"] <- 1 # 1 ms steps coef(dmc_ms) <- convert_prms(   named_values = coef(dmc_ms), # the previous parameters   sigma_old = 1, # diffusion constants   sigma_new = 4,   t_from_to = \"s->ms\" # how shall the time be scaled? ) quants_ms <- calc_stats(dmc_ms, \"quantiles\") # calculate predicted quantiles print(quants_ms) # show quantiles #> Type of Statistic: quantiles #>  #>    Source   Cond Prob Quant_corr Quant_err #> 1    pred   comp  0.1    325.168   321.132 #> 2    pred   comp  0.2    345.277   342.566 #> 3    pred   comp  0.3    363.914   361.111 #> 4    pred   comp  0.4    383.934   378.931 #> 5    pred   comp  0.5    406.706   397.280 #> 6    pred   comp  0.6    433.356   417.546 #> 7    pred   comp  0.7    465.710   441.869 #> 8    pred   comp  0.8    508.140   474.759 #> 9    pred   comp  0.9    575.097   530.647 #> 10   pred incomp  0.1    352.047   300.528 #> ... #>  #> (access the data.frame's columns/rows as usual) coef(dmc_s) #>        muc          b    non_dec sd_non_dec        tau          A      alpha  #>       4.00       0.60       0.30       0.02       0.04       0.10       4.00 coef(dmc_ms) #>         muc           b     non_dec  sd_non_dec         tau           A  #>   0.5059644  75.8946638 300.0000000  20.0000000  40.0000000  12.6491106  #>       alpha  #>   4.0000000"},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/articles/customize_ddms.html","id":"the-model-structure-in-driftdm","dir":"Articles","previous_headings":"","what":"The Model Structure in dRiftDM","title":"How To Customize DDMs","text":"better understand can customize DDM, first need understand models structured within dRiftDM model predictions derived. model dRiftDM essentially list (among things) two important entries: flex_prms_obj containing -called flex_prms object, controls parameters comp_funs list “component” functions represent model’s drift rate, boundary, etc. can see entries addressing labels underlying list: flex_prms object (stored first entry), can specify parameters model also control parameter relates across conditions. example, specify parameter condition incomp negative parameter condition comp. specify parameter muc estimated separately two conditions. functions stored comp_funs (fourth entry), can control drift rate, boundary, starting point, non-decision time. function takes set arguments, including model parameters, returns vector values. example, drift rate function returns drift rate diffusion model time step. deriving model predictions, comp_funs evaluated currently set parameter values controlled flex_prms object. Dedicated numerical algorithms depths dRiftDM derive model’s predicted probability density functions response times, separately possible response choice. important emphasize interaction comp_funs flex_prms object, need ensure two work together smoothly. example, function stored comp_funs might fail given parameter vector expect. model might work expected function stored comp_funs doesn’t consider certain parameter. workflow emphasized following diagram:  Given , two ways customize model, depending problem, may need consider one. 1.) can modify model’s flex_prms object. relevant whenever want change parameters model relate across conditions. 2.) can customize component functions. relevant whenever want different drift rate, boundary, starting point, non-decision time.","code":"a_model <- ratcliff_dm() # some model names(a_model) # the entries of the underlying list #> [1] \"flex_prms_obj\" \"prms_solve\"    \"solver\"        \"comp_funs\"     #> [5] \"cost_function\""},{"path":"https://bucky2177.github.io/dRiftDM/articles/customize_ddms.html","id":"modifying-flex_prms-objects","dir":"Articles","previous_headings":"","what":"Modifying flex_prms objects","title":"How To Customize DDMs","text":"can access underlying flex_prms object model generic flex_prms() accessor method: see two core aspects flex_prms object (see also first print statement vignette(\"dRiftDM\", \"dRiftDM\") information): Parameter Values shows current parameter values conditions. Parameter Settings show parameter behaves across conditions.","code":"# Create a model (here the Diffusion Model for Conflict Tasks, DMC) ddm <- dmc_dm() flex_prms(ddm) #> Parameter Values: #>        muc   b non_dec sd_non_dec  tau a    A alpha #> comp     4 0.6     0.3       0.02 0.04 2  0.1     4 #> incomp   4 0.6     0.3       0.02 0.04 2 -0.1     4 #>  #> Parameter Settings: #>        muc b non_dec sd_non_dec tau a A alpha #> comp   1   2 3       4          5   0 6 7     #> incomp 1   2 3       4          5   0 d 7     #>  #> Special Dependencies: #> A ~ incomp == -(A ~ comp) #>  #> Custom Parameters: #>        peak_l #> comp     0.04 #> incomp   0.04"},{"path":"https://bucky2177.github.io/dRiftDM/articles/customize_ddms.html","id":"modifying-how-each-parameter-behaves-across-conditions","dir":"Articles","previous_headings":"Modifying flex_prms objects","what":"Modifying How Each Parameter Behaves Across Conditions","title":"How To Customize DDMs","text":"Parameter Settings relevant model customization, can change modify_flex_prms() method. function takes model set instructions string. example, want muc vary freely across conditions, can write Since now two numbers muc Parameter Settings, parameter can take different values different conditions. also coef() now provides two (modifiable) values muc per condition: modify_flex_prms() supports following instructions (see documentation syntax instruction): vary instruction: Allows parameters estimated independently across conditions. “restrain” instruction: Forces parameters identical across conditions. “fix” instruction: Keeps parameters constant. don’t vary remaining parameters estimated. “special dependency” instruction: Sometimes want parameter one condition depend another parameter second condition. example already shown flex_prms(ddm) output . parameter condition incomp negative parameter condition comp. “custom parameter” instruction: Sometimes, want calculate linear combination model parameters. example already shown flex_prms(ddm) output . , custom parameter peak_l (“peak latency”), peak_l = (-1)*tau (equation apparent output).","code":"ddm_free_muc <- modify_flex_prms(   ddm, # the model   instr = \"muc ~\" # an instructions in a formula-like format ) flex_prms(ddm_free_muc) #> Parameter Values: #>        muc   b non_dec sd_non_dec  tau a    A alpha #> comp     4 0.6     0.3       0.02 0.04 2  0.1     4 #> incomp   4 0.6     0.3       0.02 0.04 2 -0.1     4 #>  #> Parameter Settings: #>        muc b non_dec sd_non_dec tau a A alpha #> comp   1   3 4       5          6   0 7 8     #> incomp 2   3 4       5          6   0 d 8     #>  #> Special Dependencies: #> A ~ incomp == -(A ~ comp) #>  #> Custom Parameters: #>        peak_l #> comp     0.04 #> incomp   0.04 coef(ddm) # in this model muc is the same for all conditions #>        muc          b    non_dec sd_non_dec        tau          A      alpha  #>       4.00       0.60       0.30       0.02       0.04       0.10       4.00  coef(ddm_free_muc) # here muc can be different for the conditions #>   muc.comp muc.incomp          b    non_dec sd_non_dec        tau          A  #>       4.00       4.00       0.60       0.30       0.02       0.04       0.10  #>      alpha  #>       4.00  coef(ddm_free_muc)[1] <- 5 coef(ddm_free_muc) #>   muc.comp muc.incomp          b    non_dec sd_non_dec        tau          A  #>       5.00       4.00       0.60       0.30       0.02       0.04       0.10  #>      alpha  #>       4.00"},{"path":"https://bucky2177.github.io/dRiftDM/articles/customize_ddms.html","id":"defining-new-conditions","dir":"Articles","previous_headings":"Modifying flex_prms objects","what":"Defining New Conditions","title":"How To Customize DDMs","text":"current conditions model can accessed conds() method: can assign new values change conditions. example, researcher may want introduce neutral condition: receive message reminding us parameter values reset. fact, print underlying flex_prms object, see previous settings gone (e.g., incomp condition longer negative comp condition): may bit annoying cases, actually makes sense way dRiftDM know new conditions relate old ones. Consequently, now modify underlying flex_prms object suit needs. example, restore previous behavior incomp condition, setting zero new neutral condition. might also want keep fixed conditions:","code":"conds(ddm) #> [1] \"comp\"   \"incomp\" conds(ddm) <- c(\"comp\", \"neutral\", \"incomp\") #> resetting parameter specifications flex_prms(ddm) #> Parameter Values: #>         muc   b non_dec sd_non_dec  tau a   A alpha #> comp      4 0.6     0.3       0.02 0.04 2 0.1     4 #> neutral   4 0.6     0.3       0.02 0.04 2 0.1     4 #> incomp    4 0.6     0.3       0.02 0.04 2 0.1     4 #>  #> Parameter Settings: #>         muc b non_dec sd_non_dec tau a A alpha #> comp      1 2       3          4   5 6 7     8 #> neutral   1 2       3          4   5 6 7     8 #> incomp    1 2       3          4   5 6 7     8 instructions <- \" a <!>                      # 'a' is fixed across all conditions A ~ incomp == -(A ~ comp)  # A in incomp is -A in comp A <!> neutral              # A is fixed for the neutral condition A ~ neutral => 0           # A is zero for the neutral condition \"  ddm <- modify_flex_prms(   object = ddm,   instr = instructions ) print(ddm) #> Class(es) dmc_dm, drift_dm #> (model has not been estimated yet) #>  #> Parameter Values: #>         muc   b non_dec sd_non_dec  tau a    A alpha #> comp      4 0.6     0.3       0.02 0.04 2  0.1     4 #> neutral   4 0.6     0.3       0.02 0.04 2  0.0     4 #> incomp    4 0.6     0.3       0.02 0.04 2 -0.1     4 #>  #> Parameter Settings: #>         muc b non_dec sd_non_dec tau a A alpha #> comp    1   2 3       4          5   0 6 7     #> neutral 1   2 3       4          5   0 0 7     #> incomp  1   2 3       4          5   0 d 7     #>  #> Special Dependencies: #> A ~ incomp == -(A ~ comp) #>  #> Deriving PDFS: #>   solver: kfe #>   values: sigma=1, t_max=3, dt=0.0075, dx=0.02, nt=400, nx=100 #>  #> Cost Function: neg_log_like #>  #> Observed Data: NULL"},{"path":"https://bucky2177.github.io/dRiftDM/articles/customize_ddms.html","id":"customizing-component-functions","dir":"Articles","previous_headings":"","what":"Customizing Component Functions","title":"How To Customize DDMs","text":"mentioned , another way customize model change component functions drift rate, boundary, start point, non-decision time. can access component function using comp_funs() method: mu_fun() mu_int_fun() return drift rate integral. integral required entry, evaluated user chooses non-default method “im_zero” derive model predictions. x_fun() returns density initial distribution. b_fun() dt_b_fun() functions returns (upper) boundary derivative, respectively. Finally, nt_fun() returns density non-decision time. number predefined component functions already available via component_shelf() (see documentation description function): structure component functions generally . drift rate, boundary, non-decision time functions (.e., mu_fun, mu_int_fun, b_fun, dt_b_fun, nt_fun) must following declaration: prms_model named numeric vector identical row Parameter Values stored within flex_prms object model (see first part following output). prms_solve named numeric vector, including diffusion constant discretization settings. identical : t_vec numeric vector, representing time space. constructed dt t_max: one_cond label current condition model evaluated (.e., row name Parameter Values). ddm_opts taken directly model. used backdoor inject arbitrary R objects (see final comments example) drift rate, boundary, non-decision time function must return numeric vector length t_vec (see examples). drift rate, returned values represent drift rate (integral) time step. boundary (derivative), values boundary values returned upper boundary time step. lower boundary always assumed negative upper boundary. , bounds symmetric zero. Finally, values returned non-decision time represent density values respective distribution. declaration starting point function, x_fun, similar, one exception. must take argument x_vec: x_vec numeric vector, (standardized) evidence space. constructed dx spans -1 1: starting point function must return numeric vector length x_vec, providing density values starting points evidence space. theory, can simply replace component functions using replacement method comp_funs(). However, runtime, values arguments prms_model one_cond come row model’s parameter matrix (.e., underlying flex_prms object). Thus, must ensure component function can handle values supplied. Consequently, directly swapping functions makes sense model parameters remain . general approach write function assembles model. following sections provide examples custom … … drift rate (Example 1) … starting point (Example 2) … boundary (Example 3) … non-decision time (Example 4)","code":"ddm <- dmc_dm() # some pre-built model names(comp_funs(ddm)) #> [1] \"mu_fun\"     \"mu_int_fun\" \"x_fun\"      \"b_fun\"      \"dt_b_fun\"   #> [6] \"nt_fun\" all_funs <- component_shelf() names(all_funs) #>  [1] \"mu_constant\"         \"mu_dmc\"              \"mu_ssp\"              #>  [4] \"mu_int_constant\"     \"mu_int_dmc\"          \"x_dirac_0\"           #>  [7] \"x_beta\"              \"x_uniform\"           \"b_constant\"          #> [10] \"b_hyperbol\"          \"b_weibull\"           \"dt_b_constant\"       #> [13] \"dt_b_hyperbol\"       \"dt_b_weibull\"        \"nt_constant\"         #> [16] \"nt_uniform\"          \"nt_truncated_normal\" \"dummy_t\" ... <- function(prms_model, prms_solve, t_vec, one_cond, ddm_opts) {   ... } flex_prms(ddm) #> Parameter Values: #>        muc   b non_dec sd_non_dec  tau a    A alpha #> comp     4 0.6     0.3       0.02 0.04 2  0.1     4 #> incomp   4 0.6     0.3       0.02 0.04 2 -0.1     4 #>  #> Parameter Settings: #>        muc b non_dec sd_non_dec tau a A alpha #> comp   1   2 3       4          5   0 6 7     #> incomp 1   2 3       4          5   0 d 7     #>  #> Special Dependencies: #> A ~ incomp == -(A ~ comp) #>  #> Custom Parameters: #>        peak_l #> comp     0.04 #> incomp   0.04 prms_solve(ddm) #>   sigma   t_max      dt      dx      nt      nx  #> 1.0e+00 3.0e+00 7.5e-03 2.0e-02 4.0e+02 1.0e+02 t_max <- prms_solve(ddm)[\"t_max\"] dt <- prms_solve(ddm)[\"dt\"] t_vec <- seq(0, t_max, dt) head(t_vec) #> [1] 0.0000 0.0075 0.0150 0.0225 0.0300 0.0375 tail(t_vec) #> [1] 2.9625 2.9700 2.9775 2.9850 2.9925 3.0000 ... <- function(prms_model, prms_solve, x_vec, one_cond, ddm_opts) {   ... } dx <- prms_solve(ddm)[\"dx\"] x_vec <- seq(-1, 1, dx)"},{"path":"https://bucky2177.github.io/dRiftDM/articles/customize_ddms.html","id":"example-1-custom-drift-rate","dir":"Articles","previous_headings":"Customizing Component Functions","what":"Example 1: Custom Drift Rate","title":"How To Customize DDMs","text":"Assume want model following custom drift rate: $$\\mu(t) = \\left\\{   \\begin{array}{ c l }     \\mu_c + \\mu_a & \\quad \\textrm{compatible conditions} \\\\     \\mu_c - \\mu_a & \\quad \\textrm{incompatible conditions}   \\end{array} \\right.$$ Thus, compatible conditions, drift rate time step sum two drift rates μc\\mu_c μa\\mu_a, incompatible conditions difference. First, write corresponding drift rate function like : Within function, first extract model parameters relevant calculation drift rate. , depending auxiliary parameter sign, sum parameters return vector drift rates time step. next step create function assembles custom model calling dRiftDM’s backbone function drift_dm(). define vectors model parameters conditions. assemble model using custom drift rate function, also pre-built functions boundary, start point, non-decision time.1 Finally, ensure auxiliary sign parameter works intended modifying parameter settings modify_flex_prms(): want use “im_zero” method derive model predictions, also need write function integral drift rate:2 function passed mu_int_fun argument within cust_model() function. Everything else .","code":"cust_mu <- function(prms_model, prms_solve, t_vec, one_cond, ddm_opts) {   # extract all parameters (one row of the parameter matrix)   muc <- prms_model[[\"muc\"]]   mua <- prms_model[[\"mua\"]]   sign <- prms_model[[\"sign\"]]    # and return the drift rate at each time step   mu <- rep(muc + sign * mua, length(t_vec))   return(mu) } cust_model <- function() {   # define all parameters and conditions   prms_model <- c(     muc = 3, # parameters for the custom drift rate function     mua = 1,     sign = 1,      b = .6, # parameter for a time-independent boundary \"b\"     non_dec = .2 # parameter for a non-decision time \"non_dec\"   )   conds <- c(\"comp\", \"incomp\")    # get access to pre-built component functions   comps <- component_shelf()    # call the drift_dm function which is the backbone of dRiftDM   ddm <- drift_dm(     prms_model = prms_model,     conds = conds,     subclass = \"my_custom_model\",     mu_fun = cust_mu, # your custom drift rate function     mu_int_fun = comps$dummy_t, # a dummy function, because no integral     # of the drift rate is required per default     x_fun = comps$x_dirac_0, # pre-built dirac delta on zero for the starting point     b_fun = comps$b_constant, # pre-built time-independent boundary with parameter b     dt_b_fun = comps$dt_b_constant, # pre-built derivative of the boundary     nt_fun = comps$nt_constant # pre-built non-decision time with parameter non_dec   )    # modify the flex_prms object to achieve the desired behavior of 'sign'   # -> don't consider 'sign' a free parameter to estimate and set it to -1   # for incompatible conditions   ddm <- modify_flex_prms(     ddm,     instr = \"sign <!>                                         sign ~ incomp => -1\"   )    return(ddm) }  ddm <- cust_model() cust_mu_int <- function(prms_model, prms_solve, t_vec, one_cond, ddm_opts) {   # extract all parameters (one row of the parameter matrix)   muc <- prms_model[[\"muc\"]]   mua <- prms_model[[\"mua\"]]   sign <- prms_model[[\"sign\"]]    # and return the integral of the drift rate   mu <- (muc + sign * mua) * t_vec   return(mu) }"},{"path":"https://bucky2177.github.io/dRiftDM/articles/customize_ddms.html","id":"example-2-custom-starting-point-distribution","dir":"Articles","previous_headings":"Customizing Component Functions","what":"Example 2: Custom Starting Point (Distribution)","title":"How To Customize DDMs","text":"Suppose want model starting point diffusion process controlled parameter zz. z=0.5z = 0.5, starting point zero. 0.5<z<10.5 < z < 1, starting point closer upper boundary. 0<z<0.50 < z < 0.5, start point closer lower boundary. custom starting point distribution might look like : write function assembles custom model:","code":"cust_x <- function(prms_model, prms_solve, x_vec, one_cond, ddm_opts) {   dx <- prms_solve[[\"dx\"]]   z <- prms_model[[\"z\"]]   stopifnot(z > 0, z < 1)    # create a dirac delta for the starting point   x <- numeric(length = length(x_vec))   index <- round(z * (length(x) - 1)) + 1   x[index] <- 1 / dx # make sure it integrates to 1   return(x) } cust_model <- function() {   # define all parameters and conditions   prms_model <- c(     z = .75, # parameter for the custom starting point     muc = 4, # parameter for a time-independent drift rate \"muc\"     b = .6, # parameter for a time-independent boundary \"b\"     non_dec = .2 # parameter for a non-decision time \"non_dec\"   )    # each model must have a condition (in this example it is not relevant, so we just call it \"foo\")   conds <- c(\"foo\")    # get access to pre-built component functions   comps <- component_shelf()    # call the drift_dm function which is the backbone of dRiftDM   ddm <- drift_dm(     prms_model = prms_model,     conds = conds,     subclass = \"my_custom_model\",     mu_fun = comps$mu_constant, # time-independent drift rate with parameter muc     mu_int_fun = comps$mu_int_constant, # respective integral of the drift rate     x_fun = cust_x, # custom starting point function with parameter z     b_fun = comps$b_constant, # time-independent boundary with parameter b     dt_b_fun = comps$dt_b_constant, # respective derivative of the boundary     nt_fun = comps$nt_constant # non-decision time with parameter non_dec   )   return(ddm) }  ddm <- cust_model()"},{"path":"https://bucky2177.github.io/dRiftDM/articles/customize_ddms.html","id":"example-3-custom-boundary","dir":"Articles","previous_headings":"Customizing Component Functions","what":"Example 3: Custom Boundary","title":"How To Customize DDMs","text":"Remark: example shows reimplementation already pre-built b_hyperbol() dt_b_hyperbol() component functions (see component_shelf()). want model collapsing boundary, just jump cust_model R chunk plug respective pre-built component functions. Suppose want collapsing boundaries. formula upper boundary b(t)=b0(1−κ⋅tt+t0.5),b(t) = b_0 \\left(1-\\kappa\\cdot \\frac{t}{t+t_{0.5}}\\right)\\,, b0b_0 initial value upper boundary, κ\\kappa rate collapse, t0.5t_{0.5} time boundary collapsed half. Since dRiftDM assumes symmetric boundaries, lower bound −b(t)-b(t). corresponding R function : make work dRiftDM, also provide derivative boundary: ddtb(t)=−(b0⋅κ⋅t0.5(t+t0.5)2).\\frac{d}{dt} b(t) = -\\left(\\frac{b_0 \\cdot \\kappa \\cdot t_{0.5}}{(t + t_{0.5})^2}\\right)\\,. corresponding R function : write function assembles custom model;","code":"# the boundary function cust_b <- function(prms_model, prms_solve, t_vec, one_cond, ddm_opts) {   b0 <- prms_model[[\"b0\"]]   kappa <- prms_model[[\"kappa\"]]   t05 <- prms_model[[\"t05\"]]    return(b0 * (1 - kappa * t_vec / (t_vec + t05))) } # the derivative of the boundary function cust_dt_b <- function(prms_model, prms_solve, t_vec, one_cond, ddm_opts) {   b0 <- prms_model[[\"b0\"]]   kappa <- prms_model[[\"kappa\"]]   t05 <- prms_model[[\"t05\"]]    return(-(b0 * kappa * t05) / (t_vec + t05)^2) } cust_model <- function() {   # define all parameters and conditions   prms_model <- c(     b0 = .6, # parameters for the custom boundary     kappa = .5,     t05 = .15,     muc = 4, # parameter for a time-independent drift rate \"muc\"     non_dec = .2 # parameter for a non-decision time \"non_dec\"   )    # each model must have a condition    # (in this example it is not relevant, so we just call it \"foo\")   conds <- c(\"foo\")    # get access to pre-built component functions   comps <- component_shelf()    # call the drift_dm function which is the backbone of dRiftDM   ddm <- drift_dm(     prms_model = prms_model,     conds = conds,     subclass = \"my_custom_model\",     mu_fun = comps$mu_constant, # time-independent drift rate with parameter muc     mu_int_fun = comps$mu_int_constant, # respective integral of the drift rate     x_fun = comps$x_dirac_0, # dirac delta on zero     b_fun = cust_b, # custom time-dependent boundary     dt_b_fun = cust_dt_b, # respective derivative of the boundary     nt_fun = comps$nt_constant # non-decision time with parameter non_dec   )   return(ddm) } ddm <- cust_model()"},{"path":"https://bucky2177.github.io/dRiftDM/articles/customize_ddms.html","id":"example-4-custom-non-decision-time","dir":"Articles","previous_headings":"Customizing Component Functions","what":"Example 4: Custom Non-Decision Time","title":"How To Customize DDMs","text":"Remark: example shows reimplementation already pre-built nt_uniform() component function (see component_shelf(). Suppose want uniform non-decision time distribution parameters non_dec range_non_dec: write function assembles custom model:","code":"cust_nt <- function(prms_model, prms_solve, t_vec, one_cond, ddm_opts) {   # get the relevant parameters   non_dec <- prms_model[[\"non_dec\"]]   range_non_dec <- prms_model[[\"range_non_dec\"]]    # get the settings for the time space discretization   t_max <- prms_solve[[\"t_max\"]]   dt <- prms_solve[[\"dt\"]]    # calculate the density   d_nt <- dunif(x = t_vec, min = non_dec - range_non_dec / 2, max = non_dec + range_non_dec / 2)   d_nt <- d_nt / (sum(d_nt) * dt) # ensure it integrates to 1   return(d_nt) } cust_model <- function() {   # define all parameters and conditions   prms_model <- c(     non_dec = .2, # parameters for the custom non-decision time     range_non_dec = .05,     muc = 4, # parameter for a time-independent drift rate     b = .6 # parameter for a time-independent boundary   )    # each model must have a condition   # (in this example it is not relevant, so we just call it \"foo\")   conds <- c(\"foo\")    # get access to pre-built component functions   comps <- component_shelf()    # call the drift_dm function which is the backbone of dRiftDM   ddm <- drift_dm(     prms_model = prms_model,     conds = conds,     subclass = \"my_custom_model\",     mu_fun = comps$mu_constant, # time-independent drift rate with parameter muc     mu_int_fun = comps$mu_int_constant, # respective integral of the drift rate     x_fun = comps$x_dirac_0, # dirac delta on zero     b_fun = comps$b_constant, # time-independent boundary b     dt_b_fun = comps$dt_b_constant, # respective derivative of the boundary     nt_fun = cust_nt # custom non-decision time   )   return(ddm) } ddm <- cust_model()"},{"path":"https://bucky2177.github.io/dRiftDM/articles/customize_ddms.html","id":"final-comments","dir":"Articles","previous_headings":"Customizing Component Functions","what":"Final Comments","title":"How To Customize DDMs","text":"Examples? previous examples shown tailor model needs using custom component functions. examples inspiration, suggest take look source code predefined component functions. list component functions can found documentation component_shelf(). source code function available Github page . Alternatively, can access source code R like : check model working intended? three ways perform sanity checks. First, check boundary drift rate, can plot expected time course diffusion model:  Alternatively, can plot returned values component function passing model object generic plot() method:  Finally, know model predictions look like, can request model predictions using calc_stats() function.  choose values dt dx? default, dRiftDM sets dt dx 0.001, conservative — don’t know models create, ’d rather safe sorry. many cases, though, settings unnecessarily small, leading slow evaluations high computational burden. pre-built models, therefore use larger dt dx values chosen extensive model simulations. help choose discretization settings, provide check_discretization(). derives model predictions current discretization compares predictions obtained fine discretization (dx = dt = 0.001), separately condition, using Hellinger distance. result per-condition deviance measure. predictions match exactly coarse fine discretizations, value 0; completely different, value 1. rule thumb, recommend keeping deviance well 5% parameter values matter. check_discretization() hand, ’s straightforward write small loops explore parameter values discretization settings. addition, can run small model-recovery studies assess discretization affects reliability parameter estimates. need access arbitrary R object within component function? Since component function called dRiftDM runtime, users don’t direct control values passed arguments. However, implemented backdoor via ddm_opts argument component function. allows inject arbitrary R objects evaluate runtime necessary. following (creative) example shows . First, write custom component function prints ddm_opts argument console. attach string “Hello World” model via ddm_opts() method, set custom component function, see corresponding console output calling re_evaluate(). R dynamic, can attach arbitrary R objects even functions model via ddm_opts thereby make available within custom component functions.","code":"?component_shelf all_funs <- component_shelf() # all functions View(all_funs$x_uniform) # see the code for x_uniform ddm <- dmc_dm() test <- simulate_traces(ddm, k = 1, sigma = 0, add_x = FALSE) plot(test) plot(ddm, col = c(\"green\", \"red\"), bundle_plots = FALSE) stats <- calc_stats(ddm, type = \"quantiles\") plot(stats) prms_solve(dmc_dm()) #>   sigma   t_max      dt      dx      nt      nx  #> 1.0e+00 3.0e+00 7.5e-03 2.0e-02 4.0e+02 1.0e+02 cust_model <- cust_model() # some custom model # set the intended discretization setting prms_solve(cust_model)[\"dx\"] = .01 prms_solve(cust_model)[\"dt\"] = .005  # compare to a precise solution check_discretization(cust_model) #>     foo  #> 0.00859 cust_mu <- function(prms_model, prms_solve, t_vec, one_cond, ddm_opts) {   print(ddm_opts) # print out the values of ddm_opts   muc <- rep(prms_model[[\"muc\"]], length(t_vec))   return(muc) }  a_model <- ratcliff_dm() # a dummy model for demonstration purpose ddm_opts(a_model) <- \"Hello World\" # attach \"Hello World\" to the model comp_funs(a_model)[[\"mu_fun\"]] <- cust_mu # swap in the custom component function  # evaluate the model (which will evaluate the custom drift rate function with the user-defined R # object for ddm_opts) a_model <- re_evaluate_model(a_model) #> [1] \"Hello World\""},{"path":"https://bucky2177.github.io/dRiftDM/articles/customize_ddms.html","id":"remark-trial-by-trial-variability-in-the-drift-rate","dir":"Articles","previous_headings":"","what":"Remark: Trial-by-Trial Variability in the Drift Rate","title":"How To Customize DDMs","text":"dRiftDM supports trial--trial variability drift rate models time-independent (within-trial) drift rate. implementation slightly different, however, dedicated model component feature. Instead, solving model, dRiftDM systematically increases decreases drift rate parameter derive first-passage-time distribution five times different drift rates, averages across distributions. consequence, expect computation time increase roughly factor five. Two ingredients required: need model mu_constant component function need add parameter sd_muc model. internally triggers trial--trial variability drift rate following code shows create model. can replace component functions parameters, except related mu_constant mu_int_constant.","code":"cust_model <- function() {   # define all parameters and conditions   prms_model <- c(     non_dec = .2, # parameters for the non-decision time     muc = 3, # parameter for a time-independent drift rate     sd_muc = 1.2, # will trigger trial-by-trial variability in the drift rate!     b = .4 # parameter for a time-independent boundary   )    # each model must have a condition   # (in this example it is not relevant, so we just call it \"foo\")   conds <- c(\"foo\")    # get access to pre-built component functions   comps <- component_shelf()    # call the drift_dm function which is the backbone of dRiftDM   ddm <- drift_dm(     prms_model = prms_model,     conds = conds,     subclass = \"my_custom_model\",     mu_fun = comps$mu_constant, # time-independent drift rate with parameter muc     mu_int_fun = comps$mu_int_constant, # respective integral of the drift rate     x_fun = comps$x_dirac_0, # dirac delta on zero     b_fun = comps$b_constant, # time-independent boundary b     dt_b_fun = comps$dt_b_constant, # respective derivative of the boundary     nt_fun = comps$nt_constant # time-independent non-decision time   )   return(ddm) }  my_model <- cust_model()  # simulate some traces set.seed(1) plot(   simulate_traces(my_model, k = 10, sigma = 0) ) # visualize the effect of trial-by-trial variability: slow errors plot(   calc_stats(my_model, type = \"cafs\") )"},{"path":"https://bucky2177.github.io/dRiftDM/articles/dRiftDM.html","id":"an-examplary-model","dir":"Articles","previous_headings":"","what":"An Examplary Model","title":"Introduction to dRiftDM","text":"explore basic functions dRiftDM, ’ll use Diffusion Model Conflict Tasks (DMC). diffusion model commonly employed context cognitive psychology. create model, call pre-built function dmc_fun() assign output variable:","code":"ddm <- dmc_dm()"},{"path":"https://bucky2177.github.io/dRiftDM/articles/dRiftDM.html","id":"basic-properties-of-a-model","dir":"Articles","previous_headings":"","what":"Basic Properties of a Model","title":"Introduction to dRiftDM","text":"printing model console, obtain detailed information : get glimpse underlying structure model created dRiftDM. DMC : model type dmc_dm model parameters muc, b, …, alpha, current parameter values conditions shown Parameter Values. conditions comp incomp case. , Parameter Settings, obtain parameter behaves across conditions. number parameter across conditions, means parameter equated across conditions. example, parameter muc assumed identical conditions comp incomp. number zero, means parameter assumed “fixed” thus “free” parameter can estimated. entry shows “d”, means special dependency, listed Special Dependencies (see vignette(\"customize_ddms\", \"dRiftDM\") information). fitting exploring model, derive model predictions terms first-passage-times (.e., duration central response selection context psychology). settings shown Deriving PDFs. Currently, predictions derived numerical discretization Kolmogorov-Forward-Equation (kfe). diffusion constant sigma 1, maximum time space 3 seconds, discretization time space done steps .0075 .02, respectively. Finally, Cost Function, can see goal function used compare observed data (yet part model) model predictions. Per default, cost function negative log-likelihood.","code":"print(ddm) #> Class(es) dmc_dm, drift_dm #> (model has not been estimated yet) #>  #> Parameter Values: #>        muc   b non_dec sd_non_dec  tau a    A alpha #> comp     4 0.6     0.3       0.02 0.04 2  0.1     4 #> incomp   4 0.6     0.3       0.02 0.04 2 -0.1     4 #>  #> Parameter Settings: #>        muc b non_dec sd_non_dec tau a A alpha #> comp   1   2 3       4          5   0 6 7     #> incomp 1   2 3       4          5   0 d 7     #>  #> Special Dependencies: #> A ~ incomp == -(A ~ comp) #>  #> Custom Parameters: #>        peak_l #> comp     0.04 #> incomp   0.04 #>  #> Deriving PDFS: #>   solver: kfe #>   values: sigma=1, t_max=3, dt=0.0075, dx=0.02, nt=400, nx=100 #>  #> Cost Function: neg_log_like #>  #> Observed Data: NULL"},{"path":"https://bucky2177.github.io/dRiftDM/articles/dRiftDM.html","id":"exploring-a-model","dir":"Articles","previous_headings":"","what":"Exploring a Model","title":"Introduction to dRiftDM","text":"explore model, dRiftDM provides: simulate_traces() simulates realizations diffusion process calc_stats() calculates summary statistics model predictions","code":""},{"path":"https://bucky2177.github.io/dRiftDM/articles/dRiftDM.html","id":"simulate_traces","dir":"Articles","previous_headings":"Exploring a Model","what":"simulate_traces()","title":"Introduction to dRiftDM","text":"Realizations diffusion process, , single evidence accumulation traces central response selection, common ways visualize diffusion model. first argument requires model object. second argument requires number realizations simulate. example, simulate 5 traces DMC per condition: Per default, traces simulated assuming fixed starting value zero. simulate traces variable starting point (provided model), can set argument add_x = TRUE: context DMC, starting values traces drawn symmetric beta distribution (see Ulrich et al. 2015). can easily visualize traces calling generic plot() method:  like diffusion processes higher temporal resolution (e.g., nice publication-ready figure), simply increase dt (see next chapter ) run simulate_traces() . visualizing basic model behavior, one sometimes wants display expected time-course diffusion process. can eliminating stochastic noise setting argument sigma = 0.  Note: deriving diffusion processes, dRiftDM simply uses Euler-Maruyama method fixed time step size dt. actually deriving model predictions via Kolmogorov-Forward-Equation, however, dRiftDM uses dynamic time-stepping scheme ensure high numerical accuracy even relatively coarse settings dt. Thus, model’s drift rate varies strongly dt large, expected time course via simulate_traces() might match predicted model behavior.","code":"five_traces <- simulate_traces(object = ddm, k = 5) five_traces #> Class(es): traces_dm_list #>  #> Time space: #> 0.000, 0.007, 0.015, 0.022 ... 3.000  #>  #> Condition: comp  #> ~>  0.000, -0.040,  0.046, -0.113 ...  0.664  #> ~>  0.000,  0.008, -0.011,  0.129 ...  0.660  #> ~>  0.000,  0.036,  0.174,  0.255 ...  0.634  #> ~>  0.000,  0.020,  0.067,  0.184 ...  0.773  #> ... #>  #> Condition: incomp  #> ~>  0.000, -0.073, -0.105, -0.070 ...  0.656  #> ~>  0.000,  0.048,  0.106,  0.087 ...  0.665  #> ~>  0.000, -0.013,  0.023, -0.046 ...  0.621  #> ~>  0.000,  0.015, -0.091, -0.080 ...  0.610  #> ... five_traces <- simulate_traces(object = ddm, k = 5, add_x = TRUE) five_traces #> Class(es): traces_dm_list #>  #> Time space: #> 0.000, 0.007, 0.015, 0.022 ... 3.000  #>  #> Condition: comp  #> ~> -0.288, -0.141, -0.166, -0.188 ...  0.647  #> ~> -0.168,  0.024, -0.022,  0.026 ...  0.633  #> ~>  0.144,  0.018,  0.060,  0.150 ...  0.672  #> ~>  0.072,  0.279,  0.460,  0.487 ...  0.682  #> ... #>  #> Condition: incomp  #> ~> -0.144, -0.178, -0.149, -0.097 ...  0.686  #> ~> -0.192, -0.067, -0.054, -0.059 ...  0.632  #> ~>  0.264,  0.023, -0.088,  0.014 ...  0.630  #> ~> -0.024, -0.078, -0.165, -0.167 ...  0.679  #> ... plot(five_traces, col = c(\"green\", \"red\")) exp_behavior <- simulate_traces(object = ddm, k = 1, sigma = 0) plot(exp_behavior, col = c(\"green\", \"red\"))"},{"path":"https://bucky2177.github.io/dRiftDM/articles/dRiftDM.html","id":"calc_stats","dir":"Articles","previous_headings":"Exploring a Model","what":"calc_stats()","title":"Introduction to dRiftDM","text":"DDM predicts response choices response times, latter sum first-passage-time (.e., duration central response selection) non-decision time. can request summary statistics prediction calc_stats(). first argument requires model object. second argument character vector, specifying type summary statistic. context cognitive psychology, quantiles -called Conditional Accuracy Functions (CAFs) common ways summarize model predictions: can visualize summary statistics plot() method:  also possible plot predicted response time distributions using type = \"densities\". case, ’s often helpful plot distributions separately condition, don’t overlap much:","code":"sum_stats <- calc_stats(object = ddm, type = c(\"cafs\", \"quantiles\")) sum_stats #> Element 1, contains cafs #>  #>    Source   Cond Bin P_corr #> 1    pred   comp   1  0.983 #> 2    pred   comp   2  0.983 #> 3    pred   comp   3  0.981 #> 4    pred   comp   4  0.984 #> 5    pred   comp   5  0.989 #> 6    pred incomp   1  0.835 #> 7    pred incomp   2  0.971 #> 8    pred incomp   3  0.986 #> 9    pred incomp   4  0.991 #> 10   pred incomp   5  0.992 #>  #>  #> Element 2, contains quantiles #>  #>    Source   Cond Prob Quant_corr Quant_err #> 1    pred   comp  0.1      0.325     0.321 #> 2    pred   comp  0.2      0.346     0.343 #> 3    pred   comp  0.3      0.364     0.362 #> 4    pred   comp  0.4      0.384     0.380 #> 5    pred   comp  0.5      0.406     0.398 #> 6    pred   comp  0.6      0.433     0.419 #> 7    pred   comp  0.7      0.465     0.443 #> 8    pred   comp  0.8      0.507     0.476 #> 9    pred   comp  0.9      0.574     0.531 #> 10   pred incomp  0.1      0.352     0.301 #> ... #>  #> (extract the list's elements as usual, e.g., with $cafs) plot(sum_stats) sum_stats <- calc_stats(object = ddm, type = c(\"densities\")) sum_stats #> Type of Statistic: densities #>  #>    Source Cond Stat  Time Dens_corr Dens_err #> 1    pred comp  pdf 0.000         0        0 #> 2    pred comp  pdf 0.007         0        0 #> 3    pred comp  pdf 0.015         0        0 #> 4    pred comp  pdf 0.022         0        0 #> 5    pred comp  pdf 0.030         0        0 #> 6    pred comp  pdf 0.038         0        0 #> 7    pred comp  pdf 0.045         0        0 #> 8    pred comp  pdf 0.052         0        0 #> 9    pred comp  pdf 0.060         0        0 #> 10   pred comp  pdf 0.068         0        0 #> ... #>  #> (access the data.frame's columns/rows as usual) plot(sum_stats, conds = \"comp\", xlim = c(0, 1.0)) plot(sum_stats, conds = \"incomp\", xlim = c(0, 1.0))"},{"path":"https://bucky2177.github.io/dRiftDM/articles/dRiftDM.html","id":"changing-model-properties","dir":"Articles","previous_headings":"","what":"Changing Model Properties","title":"Introduction to dRiftDM","text":"get set properties model, dRiftDM provides accessor/replacement methods : coef() accesses/replaces parameter values prms_solve() accesses/replaces settings deriving model predictions (also includes changing diffusion constant) solver() accesses/replaces method deriving model predictions (really necessary anymore, default kfe well enough!) b_coding() accesses/replaces coding upper lower boundary obs_data() accesses/replaces data set (single participant) attached model flex_prms() accesses/replaces object controls parameter relates across conditions conds() accesses/replaces conditions model comp_funs() accesses/replaces underlying component functions drift rate, boundary, etc. cost_function() accesses/replace cost function used parameter optimization. Note: comp_funs(), flex_prms(), conds() covered vignette(\"customize_ddms\", \"dRiftDM\").","code":""},{"path":"https://bucky2177.github.io/dRiftDM/articles/dRiftDM.html","id":"coef","dir":"Articles","previous_headings":"Changing Model Properties","what":"coef()","title":"Introduction to dRiftDM","text":"returns unique representation parameters associated values. Note drops parameters estimable. can combine coef() [] operator change values parameters: request entire parameter matrix parameter values across conditions, can set argument select_unique = FALSE: case, can combine coef() [] operator. change parameter value specific condition, can use function modify_flex_prms().","code":"coef(ddm) #>        muc          b    non_dec sd_non_dec        tau          A      alpha  #>       4.00       0.60       0.30       0.02       0.04       0.10       4.00 coef(ddm)[\"muc\"] <- 5 coef(ddm) #>        muc          b    non_dec sd_non_dec        tau          A      alpha  #>       5.00       0.60       0.30       0.02       0.04       0.10       4.00 coef(ddm, select_unique = FALSE) #>        muc   b non_dec sd_non_dec  tau a    A alpha peak_l #> comp     5 0.6     0.3       0.02 0.04 2  0.1     4   0.04 #> incomp   5 0.6     0.3       0.02 0.04 2 -0.1     4   0.04"},{"path":"https://bucky2177.github.io/dRiftDM/articles/dRiftDM.html","id":"prms_solve","dir":"Articles","previous_headings":"Changing Model Properties","what":"prms_solve()","title":"Introduction to dRiftDM","text":"shows diffusion constant discretization settings. can use combination [] modify values.","code":"prms_solve(ddm) #>   sigma   t_max      dt      dx      nt      nx  #> 1.0e+00 3.0e+00 7.5e-03 2.0e-02 4.0e+02 1.0e+02 prms_solve(ddm)[\"dt\"] <- .005 prms_solve(ddm) #> sigma t_max    dt    dx    nt    nx  #> 1e+00 3e+00 5e-03 2e-02 6e+02 1e+02"},{"path":"https://bucky2177.github.io/dRiftDM/articles/dRiftDM.html","id":"remark-discretization-settings","dir":"Articles","previous_headings":"Changing Model Properties","what":"Remark: Discretization Settings","title":"Introduction to dRiftDM","text":"Setting discretization, particluar dt dx, tricky choice. create new model (see vignette(\"customize_ddms\", \"dRiftDM\")), dRiftDM discretizes time evidence space steps dx = dt = 0.001. conservative setting, ensuring high numerical accuracy many DDMs. Yet, high numerical accuracy comes expense high computational burden increases non-linearly. models pre-built (.e., dmc_dm(), ssp_dm(), ratcliff_dm()), conducted extensive simulations find discretization provides good balance speed accuracy. However, settings hold models might create dRiftDM. thus highly recommended custom models perform exploratory model simulations different discretization parameter setttings. rule thumb, currently recommend exploring dt values 0.001 0.01, dx values 0.001 0.02. Another choice maximum time space. large enough easily cover longest response time observed data set. helpful function check impact discretization setting, particular dt dx check_discretization() function. function takes model (values dt dx) compares model predictions settings model predictions obtained fine discretization settings using Hellinger-Distance. can interpret result percentage deviance. model predictions fine coarse settings exactly , returned values zero. completely different, one. (yet preliminary) experience, recommend keeping Hellinger Distance clearly 5 percent relevant parameter settings.","code":"check_discretization(ddm) #>    comp  incomp  #> 0.01027 0.01431"},{"path":"https://bucky2177.github.io/dRiftDM/articles/dRiftDM.html","id":"solver","dir":"Articles","previous_headings":"Changing Model Properties","what":"solver()","title":"Introduction to dRiftDM","text":"shows currently set method deriving model’s predicted probability density functions response time choice. Currently supported options \"kfe\" \"im_zero\". \"kfe\" method can applied models dRiftDM, \"im_zero\" can used starting point fixed zero. Also, \"im_zero\" currently doesn’t support adaptive time stepping, requires finer discretization. Thus, now, \"im_zero\" present backward compatibility, recommend using \"kfe\" solver.","code":"solver(ddm) #> [1] \"kfe\""},{"path":"https://bucky2177.github.io/dRiftDM/articles/dRiftDM.html","id":"b_coding","dir":"Articles","previous_headings":"Changing Model Properties","what":"b_coding()","title":"Introduction to dRiftDM","text":"returns list specifies boundaries DDM coded. can change boundary coding modifying returned list: Changing boundary coding makes sense response choices observed data accuracy coded. Note also alter column names summary statistics:","code":"b_coding(ddm) #> $column #> [1] \"Error\" #>  #> $u_name_value #> corr  #>    0  #>  #> $l_name_value #> err  #>   1 copy <- ddm # to not change the original model object b_coding(copy)$column <- \"Response\" b_coding(copy)$u_name_value <- c(\"left\" = -1) b_coding(copy)$l_name_value <- c(\"right\" = 1)  b_coding(copy) #> $column #> [1] \"Response\" #>  #> $u_name_value #> left  #>   -1  #>  #> $l_name_value #> right  #>     1 calc_stats(copy, \"quantiles\") #> Type of Statistic: quantiles #>  #>    Source   Cond Prob Quant_left Quant_right #> 1    pred   comp  0.1      0.321       0.310 #> 2    pred   comp  0.2      0.339       0.327 #> 3    pred   comp  0.3      0.355       0.342 #> 4    pred   comp  0.4      0.371       0.357 #> 5    pred   comp  0.5      0.388       0.373 #> 6    pred   comp  0.6      0.408       0.390 #> 7    pred   comp  0.7      0.433       0.409 #> 8    pred   comp  0.8      0.466       0.435 #> 9    pred   comp  0.9      0.517       0.476 #> 10   pred incomp  0.1      0.345       0.297 #> ... #>  #> (access the data.frame's columns/rows as usual)"},{"path":"https://bucky2177.github.io/dRiftDM/articles/dRiftDM.html","id":"obs_data","dir":"Articles","previous_headings":"Changing Model Properties","what":"obs_data()","title":"Introduction to dRiftDM","text":"can set observed data single individual model (access ) obs_data(). setting observed data, make sure supplied data.frame provides columns matching boundary coding conditions model. Note supplied data set stored “” within model object. Thus, accessing data set model, data re-assembled, might change order rows column respect original data set. remind , message thrown.","code":"data <- dRiftDM::dmc_synth_data # some synthetic data suitable for DMC that ships with dRiftDM # the Cond column matches with conds(ddm). # The Error column matches b_coding(ddm) # the RT column is in seconds ;) head(data) #>      RT Error Cond #> 1 0.349     0 comp #> 2 0.444     0 comp #> 3 0.441     0 comp #> 4 0.572     0 comp #> 5 0.438     0 comp #> 6 0.535     0 comp  obs_data(ddm) <- data extr_data <- obs_data(ddm) #> Extracting observed data from a model object. Remember that the result may be sorted differently than expect! head(extr_data) #>      RT Error Cond #> 1 0.349     0 comp #> 2 0.444     0 comp #> 3 0.441     0 comp #> 4 0.572     0 comp #> 5 0.438     0 comp #> 6 0.535     0 comp"},{"path":"https://bucky2177.github.io/dRiftDM/articles/dRiftDM.html","id":"the-summary-function","dir":"Articles","previous_headings":"Changing Model Properties","what":"The summary() Function","title":"Introduction to dRiftDM","text":"can request detailed summary model, providing information ’s core properties generic summary() function:","code":"summary(ddm) #> Class(es) dmc_dm, drift_dm #>  #> Parameter Values: #>        muc   b non_dec sd_non_dec  tau a    A alpha #> comp     5 0.6     0.3       0.02 0.04 2  0.1     4 #> incomp   5 0.6     0.3       0.02 0.04 2 -0.1     4 #>  #> Parameter Settings: #>        muc b non_dec sd_non_dec tau a A alpha #> comp   1   2 3       4          5   0 6 7     #> incomp 1   2 3       4          5   0 d 7     #>  #> Special Dependencies: #> A ~ incomp == -(A ~ comp) #>  #> Custom Parameters: #>        peak_l #> comp     0.04 #> incomp   0.04 #>  #> Observed Data: #>              min. 1st qu. median  mean 3rd qu.  max.   n #> corr comp   0.331   0.436  0.479 0.507   0.549 1.075 292 #> corr incomp 0.313   0.474  0.528 0.543   0.592 0.879 268 #> err comp    0.428   0.458  0.526 0.564   0.621 0.871   8 #> err incomp  0.302   0.398  0.452 0.458   0.498 0.771  32 #>  #> Fit Indices: #>     Log_Like Neg_Log_Like          AIC          BIC       RMSE_s      RMSE_ms  #>     -180.145      180.145      374.290      405.069        0.107      106.502  #>  #> ------- #> Deriving PDFS: #>   solver: kfe #>   values: sigma=1, t_max=3, dt=0.005, dx=0.02, nt=600, nx=100 #>  #> Boundary Coding: #>   upper: corr  #>   lower: err  #>   expected data column: Error (corr = 0; err = 1)"},{"path":"https://bucky2177.github.io/dRiftDM/articles/dRiftDM.html","id":"fitting-a-model","dir":"Articles","previous_headings":"","what":"Fitting a Model","title":"Introduction to dRiftDM","text":"fit model observed data can use estimate_dm(). can choose : Fitting model separately multiple participants using classical optimization (.e., minimizing cost function) Fitting model aggregated data (.e., first aggregate data across individuals fit model minimizing cost function based summary statistics) Fitting model separately multiple participants using Bayesian estimation (.e., explore posterior distribution using Markov-Chain Monte-Carlo; experimental) Fitting model hierarchically using Bayesian estimation (experimental)","code":""},{"path":"https://bucky2177.github.io/dRiftDM/articles/dRiftDM.html","id":"fitting-a-model-separately-to-individual-data-using-classical-optimization-techniques","dir":"Articles","previous_headings":"Fitting a Model","what":"Fitting a Model Separately to Individual Data Using Classical Optimization Techniques","title":"Introduction to dRiftDM","text":"Given data set, parameters model dRiftDM estimated via Differential Evolution, (bounded) Nelder-Mead, (bounded) Broyden-Fletcher-Goldfarb-Shanno. cost function based either log-likelihood Root-Mean-Squared-Error (RMSE) statistic. first argument drift_dm_obj requires model. second argument obs_data requires observed data 4 columns: ID: identifier, coding different individuals RT: observed response times seconds Error: observed errors/choices per trial (remember column values must match boundary coding model!) Cond: conditions trial (within-participants ; must match conditions model) drift_dm_obj obs_data mandatory arguments! However, see second, specifying remaining arguments often highly recommended. demonstration purpose, fit first four individuals Simon data set provided Ulrich et al. (2015). messages, becomes clear dRiftDM used “Nelder-Mead” optimization algorithm minimize negative log-likelihood. starting values taken model: However, code runs, threw convergence warnings individual. Thus, searching “optimal” parameters, optimization algorithm find clear minimum 502 function evaluations. get rid convergence warning, : Switch optimization algorithm Let optimization algorithm search longer period. Let’s try second option first. configure settings optimization algorithm, can use control argument (ultimately passed forward stats::optim() case; see documentation estimate_dm() info). Now algorithm converges 600 1000 function evaluations. option switching algorithm? Instead using “Nelder-Mead”, use “nmkb”. “nmkb” optimization algorithm essentially “Nelder-Mead”, uses constraints parameters search clearly defined space (sometimes helps, always). can request “nmkb” using arguments optimizer lower/upper. lower/upper, define ranges parameter considered free least one condition; essentially, means define range following parameters: Fortunately, since dRiftDM v0.3.0 function get_lower_upper() makes easier select ranges—least pre-built models model components: case, saw convergence warning one participant. increasing number iterations, warning disappears: provide lower/upper, default actually “nmkb”, “DEoptim”. ‘DE’ stands Differential Evolution—slower robust optimization algorithm. runtime critical, recommend using “DEoptim”, since performs reliably even cost function complex (almost always case DDMs). DEoptim time-consuming, recommended use multiple cores. can set desired number cores using n_cores argument.1 get number available cores, use parallel::detectCores(). common question concerns number cores use. default, dRiftDM (v.0.3.0) parallelizes across individuals—, one individual fitted per core. Therefore, specify cores individuals. present toy example, limits number cores four. Additionally, fitting process runs batches. instance, two cores four individuals, dRiftDM first fits first two individuals remaining two. practice, thus often convenient choose number cores divides number individuals evenly (e.g., six cores 18 individuals, 50 cores 200 individuals). also possible parallelize within individuals using DEoptim (default). case, fitting single individual uses multiple cores. option can useful fitting participants model evaluation relatively slow (.e., dt dx small). Otherwise, overhead managing multiple cores outweighs computational burden per core. can choose among parallelization within across individuals using argument parallelization_strategy.","code":"# get some data (here we use a Simon data set provided by Ulrich et al.) data <- dRiftDM::ulrich_simon_data data <- data[data$ID %in% 1:4, ] # just the first four individuals  # get a model (here we again use the pre-built DMC model) ddm <- dmc_dm()  # the provided data is ready-to-use with DMC head(data) #>   ID        RT Error   Cond #> 1  1 0.4514001     0 incomp #> 2  1 0.5348854     0 incomp #> 3  1 0.4680900     0 incomp #> 4  1 0.4346847     0   comp #> 5  1 0.3847005     0   comp #> 6  1 0.4347649     0 incomp  # now call the estimation routine all_fits <- estimate_dm(   drift_dm_obj = ddm,   obs_data = data,   verbose = 1 # prints more information about the underlying optimization run ) #> Using the data supplied via the 'obs_data' argument. #> Using optimizer 'Nelder-Mead'. #> Fitting the model separately to multiple participants (cost function:'neg_log_like'). The result will be a fit object of type 'fits_ids_dm'. #> Starting optimizer 'Nelder-Mead' with the following starting values: #> muc=4, b=0.6, non_dec=0.3, sd_non_dec=0.02, tau=0.04, A=0.1, alpha=4 #> Warning in estimate_classical(drift_dm_obj = one_model_start$drift_dm_obj, : #> The optimization routine did not converge successfully (convergence message: #> maxit reached). Treat the estimated parameters with some caution. #> Optimization routine exited after 501 function evaluations #> Final Parameters #> muc = 4.277 #> b = 0.447 #> non_dec = 0.308 #> sd_non_dec = 0.022 #> tau = 0.02 #> A = 0.114 #> alpha = 5.289 #> ==> gave a neg_log_like of -418.653 #> Starting optimizer 'Nelder-Mead' with the following starting values: #> muc=4, b=0.6, non_dec=0.3, sd_non_dec=0.02, tau=0.04, A=0.1, alpha=4 #> Warning in estimate_classical(drift_dm_obj = one_model_start$drift_dm_obj, : #> The optimization routine did not converge successfully (convergence message: #> maxit reached). Treat the estimated parameters with some caution. #> Optimization routine exited after 502 function evaluations #> Final Parameters #> muc = 4.116 #> b = 0.379 #> non_dec = 0.303 #> sd_non_dec = 0.032 #> tau = 0.06 #> A = 0.046 #> alpha = 5.623 #> ==> gave a neg_log_like of -383.466 #> Starting optimizer 'Nelder-Mead' with the following starting values: #> muc=4, b=0.6, non_dec=0.3, sd_non_dec=0.02, tau=0.04, A=0.1, alpha=4 #> Warning in estimate_classical(drift_dm_obj = one_model_start$drift_dm_obj, : #> The optimization routine did not converge successfully (convergence message: #> maxit reached). Treat the estimated parameters with some caution. #> Optimization routine exited after 501 function evaluations #> Final Parameters #> muc = 5.427 #> b = 0.433 #> non_dec = 0.307 #> sd_non_dec = 0.019 #> tau = 0.059 #> A = 0.026 #> alpha = 4.426 #> ==> gave a neg_log_like of -508.639 #> Starting optimizer 'Nelder-Mead' with the following starting values: #> muc=4, b=0.6, non_dec=0.3, sd_non_dec=0.02, tau=0.04, A=0.1, alpha=4 #> Warning in estimate_classical(drift_dm_obj = one_model_start$drift_dm_obj, : #> The optimization routine did not converge successfully (convergence message: #> maxit reached). Treat the estimated parameters with some caution. #> Optimization routine exited after 502 function evaluations #> Final Parameters #> muc = 2.863 #> b = 0.537 #> non_dec = 0.302 #> sd_non_dec = 0.034 #> tau = 0.051 #> A = 0.101 #> alpha = 2.761 #> ==> gave a neg_log_like of -172.322 #> Warning in estimate_classical_wrapper(drift_dm_obj = drift_dm_obj, obs_data_ids = obs_data, : The optimization routine did not converge successfully for the following IDs: 1, 2, 3, 4 #> Summary of messages: #> - maxit reached coef(ddm) #>        muc          b    non_dec sd_non_dec        tau          A      alpha  #>       4.00       0.60       0.30       0.02       0.04       0.10       4.00 all_fits <- estimate_dm(   drift_dm_obj = ddm,   obs_data = data,   control = list(maxit = 2000), # 2000 iterations; see stats::optim   verbose = 1 # more information about the underlying optimization run ) #> Using the data supplied via the 'obs_data' argument. #> Using optimizer 'Nelder-Mead'. #> Fitting the model separately to multiple participants (cost function:'neg_log_like'). The result will be a fit object of type 'fits_ids_dm'. #> Starting optimizer 'Nelder-Mead' with the following starting values: #> muc=4, b=0.6, non_dec=0.3, sd_non_dec=0.02, tau=0.04, A=0.1, alpha=4 #> Optimization routine exited after 605 function evaluations #> Final Parameters #> muc = 4.274 #> b = 0.446 #> non_dec = 0.308 #> sd_non_dec = 0.022 #> tau = 0.02 #> A = 0.114 #> alpha = 5.294 #> ==> gave a neg_log_like of -418.653 #> Starting optimizer 'Nelder-Mead' with the following starting values: #> muc=4, b=0.6, non_dec=0.3, sd_non_dec=0.02, tau=0.04, A=0.1, alpha=4 #> Optimization routine exited after 1214 function evaluations #> Final Parameters #> muc = 4.105 #> b = 0.378 #> non_dec = 0.303 #> sd_non_dec = 0.032 #> tau = 0.02 #> A = 0.058 #> alpha = 5.893 #> ==> gave a neg_log_like of -384.298 #> Starting optimizer 'Nelder-Mead' with the following starting values: #> muc=4, b=0.6, non_dec=0.3, sd_non_dec=0.02, tau=0.04, A=0.1, alpha=4 #> Optimization routine exited after 699 function evaluations #> Final Parameters #> muc = 5.425 #> b = 0.433 #> non_dec = 0.307 #> sd_non_dec = 0.019 #> tau = 0.059 #> A = 0.025 #> alpha = 4.446 #> ==> gave a neg_log_like of -508.641 #> Starting optimizer 'Nelder-Mead' with the following starting values: #> muc=4, b=0.6, non_dec=0.3, sd_non_dec=0.02, tau=0.04, A=0.1, alpha=4 #> Optimization routine exited after 598 function evaluations #> Final Parameters #> muc = 2.863 #> b = 0.537 #> non_dec = 0.302 #> sd_non_dec = 0.034 #> tau = 0.051 #> A = 0.101 #> alpha = 2.761 #> ==> gave a neg_log_like of -172.322 coef(ddm) #>        muc          b    non_dec sd_non_dec        tau          A      alpha  #>       4.00       0.60       0.30       0.02       0.04       0.10       4.00 l_u <- get_lower_upper(ddm) print(l_u) #> $lower #>        muc          b    non_dec sd_non_dec        tau          A      alpha  #>     0.5000     0.1500     0.1500     0.0075     0.0150     0.0050     2.0000  #>  #> $upper #>        muc          b    non_dec sd_non_dec        tau          A      alpha  #>       9.00       1.20       0.60       0.10       0.25       0.30       8.00  all_fits_nmkb <- estimate_dm(   drift_dm_obj = ddm,   obs_data = data,   optimizer = \"nmkb\",   lower = l_u$lower,   upper = l_u$upper,   verbose = 1 # more information about the underlying optimization run ) #> Using the data supplied via the 'obs_data' argument. #> Using optimizer 'nmkb'. #> Fitting the model separately to multiple participants (cost function:'neg_log_like'). The result will be a fit object of type 'fits_ids_dm'. #> Starting optimizer 'nmkb' with the following starting values: #> muc=4, b=0.6, non_dec=0.3, sd_non_dec=0.02, tau=0.04, A=0.1, alpha=4 #> Warning in estimate_classical(drift_dm_obj = one_model_start$drift_dm_obj, : #> The optimization routine did not converge successfully (convergence message: #> Maximum number of fevals exceeded). Treat the estimated parameters with some #> caution. #> Optimization routine exited after 1500 function evaluations #> Final Parameters #> muc = 4.317 #> b = 0.426 #> non_dec = 0.314 #> sd_non_dec = 0.027 #> tau = 0.02 #> A = 0.092 #> alpha = 4.929 #> ==> gave a neg_log_like of -420.083 #> Starting optimizer 'nmkb' with the following starting values: #> muc=4, b=0.6, non_dec=0.3, sd_non_dec=0.02, tau=0.04, A=0.1, alpha=4 #> Optimization routine exited after 870 function evaluations #> Final Parameters #> muc = 4.265 #> b = 0.385 #> non_dec = 0.305 #> sd_non_dec = 0.032 #> tau = 0.024 #> A = 0.049 #> alpha = 4.117 #> ==> gave a neg_log_like of -384.243 #> Starting optimizer 'nmkb' with the following starting values: #> muc=4, b=0.6, non_dec=0.3, sd_non_dec=0.02, tau=0.04, A=0.1, alpha=4 #> Optimization routine exited after 1374 function evaluations #> Final Parameters #> muc = 5.24 #> b = 0.445 #> non_dec = 0.302 #> sd_non_dec = 0.018 #> tau = 0.015 #> A = 0.068 #> alpha = 8 #> ==> gave a neg_log_like of -512.014 #> Starting optimizer 'nmkb' with the following starting values: #> muc=4, b=0.6, non_dec=0.3, sd_non_dec=0.02, tau=0.04, A=0.1, alpha=4 #> Optimization routine exited after 915 function evaluations #> Final Parameters #> muc = 2.868 #> b = 0.525 #> non_dec = 0.305 #> sd_non_dec = 0.037 #> tau = 0.044 #> A = 0.115 #> alpha = 3.15 #> ==> gave a neg_log_like of -171.917 #> Warning in estimate_classical_wrapper(drift_dm_obj = drift_dm_obj, obs_data_ids = obs_data, : The optimization routine did not converge successfully for the following IDs: 1 #> Summary of messages: #> - Maximum number of fevals exceeded #> - Successful convergence all_fits_nmkb <- estimate_dm(   drift_dm_obj = ddm,   obs_data = data,   optimizer = \"nmkb\",   lower = l_u$lower,   upper = l_u$upper,   control = list(maxfeval = 2000), # see dfoptim::nmkb   verbose = 1 # more information about the underlying optimization run ) #> Using the data supplied via the 'obs_data' argument. #> Using optimizer 'nmkb'. #> Fitting the model separately to multiple participants (cost function:'neg_log_like'). The result will be a fit object of type 'fits_ids_dm'. #> Starting optimizer 'nmkb' with the following starting values: #> muc=4, b=0.6, non_dec=0.3, sd_non_dec=0.02, tau=0.04, A=0.1, alpha=4 #> Optimization routine exited after 1714 function evaluations #> Final Parameters #> muc = 4.317 #> b = 0.426 #> non_dec = 0.314 #> sd_non_dec = 0.027 #> tau = 0.02 #> A = 0.092 #> alpha = 4.929 #> ==> gave a neg_log_like of -420.083 #> Starting optimizer 'nmkb' with the following starting values: #> muc=4, b=0.6, non_dec=0.3, sd_non_dec=0.02, tau=0.04, A=0.1, alpha=4 #> Optimization routine exited after 870 function evaluations #> Final Parameters #> muc = 4.265 #> b = 0.385 #> non_dec = 0.305 #> sd_non_dec = 0.032 #> tau = 0.024 #> A = 0.049 #> alpha = 4.117 #> ==> gave a neg_log_like of -384.243 #> Starting optimizer 'nmkb' with the following starting values: #> muc=4, b=0.6, non_dec=0.3, sd_non_dec=0.02, tau=0.04, A=0.1, alpha=4 #> Optimization routine exited after 1374 function evaluations #> Final Parameters #> muc = 5.24 #> b = 0.445 #> non_dec = 0.302 #> sd_non_dec = 0.018 #> tau = 0.015 #> A = 0.068 #> alpha = 8 #> ==> gave a neg_log_like of -512.014 #> Starting optimizer 'nmkb' with the following starting values: #> muc=4, b=0.6, non_dec=0.3, sd_non_dec=0.02, tau=0.04, A=0.1, alpha=4 #> Optimization routine exited after 915 function evaluations #> Final Parameters #> muc = 2.868 #> b = 0.525 #> non_dec = 0.305 #> sd_non_dec = 0.037 #> tau = 0.044 #> A = 0.115 #> alpha = 3.15 #> ==> gave a neg_log_like of -171.917 all_fits_deoptim <- estimate_dm(   drift_dm_obj = ddm,   obs_data = data,   lower = l_u$lower,   upper = l_u$upper,   n_cores = 1 # you might want to increase this  ) #> Using the data supplied via the 'obs_data' argument. #> Using optimizer 'DEoptim'. #> Fitting the model separately to multiple participants (cost function:'neg_log_like'). The result will be a fit object of type 'fits_ids_dm'."},{"path":"https://bucky2177.github.io/dRiftDM/articles/dRiftDM.html","id":"remark-fitting-just-one-individual","dir":"Articles","previous_headings":"Fitting a Model","what":"Remark: Fitting Just One Individual","title":"Introduction to dRiftDM","text":"previous examples, function estimate_dm() returned object class fits_ids_dm, contains individual fits. special case occurs fitting single individual. case, dRiftDM returns model object , including data updated parameters individual. behavior maintained backward compatibility. Nothing special worry —just aware .","code":"# Example class(all_fits_deoptim) #> [1] \"fits_ids_dm\" print(all_fits_deoptim) #> Fit approach: separately - classical #> Fitted model type: dmc_dm, drift_dm #> Optimizer: DEoptim  #> Convergence: TRUE  #> N Individuals: 4  #> Average Trial Numbers: #>  167 trials comp; 168 trials incomp #> Cost Function: neg_log_like ddm_est <- estimate_dm(   drift_dm_obj = ddm,   obs_data = data[data$ID == 1, ],   optimizer = \"Nelder-Mead\",   control = list(maxit = 2000),   messaging = FALSE, verbose = 0 # just to reduce the amount of information shown ) class(ddm_est) #> [1] \"dmc_dm\"   \"drift_dm\" print(ddm_est) #> Class(es) dmc_dm, drift_dm #> Optimizer: Nelder-Mead #> Convergence: TRUE #>  #> Parameter Values: #>          muc     b non_dec sd_non_dec  tau a      A alpha #> comp   4.274 0.446   0.308      0.022 0.02 2  0.114 5.294 #> incomp 4.274 0.446   0.308      0.022 0.02 2 -0.114 5.294 #>  #> Parameter Settings: #>        muc b non_dec sd_non_dec tau a A alpha #> comp   1   2 3       4          5   0 6 7     #> incomp 1   2 3       4          5   0 d 7     #>  #> Special Dependencies: #> A ~ incomp == -(A ~ comp) #>  #> Custom Parameters: #>        peak_l #> comp     0.02 #> incomp   0.02 #>  #> Deriving PDFS: #>   solver: kfe #>   values: sigma=1, t_max=3, dt=0.0075, dx=0.02, nt=400, nx=100 #>  #> Cost Function: neg_log_like #>  #> Observed Data: 168 trials comp; 168 trials incomp"},{"path":"https://bucky2177.github.io/dRiftDM/articles/dRiftDM.html","id":"fitting-a-model-to-aggregated-data-using-classical-optimization-techniques","dir":"Articles","previous_headings":"Fitting a Model","what":"Fitting a Model to Aggregated Data Using Classical Optimization Techniques","title":"Introduction to dRiftDM","text":"previous examples, fitted model separately individual’s data using maximum likelihood estimation. Another way fit model means summary statistic. Conceptually, approach similar, instead using negative log-likelihood cost function, use summary statistic contrasts predicted observed descriptive measures (quantiles accuracy). original way DMC fitted observed data (Ulrich et al. 2015). end, simply switch cost function \"rmse\", stands Root-Mean-Squared-E rror. principle, RMSE statistic offer particular advantage negative log-likelihood. However, RMSE depends descriptive statistics, can use fit model aggregated data. , first compute individual descriptive statistics (quantiles accuracy) participant, collapse statistics across individuals, finally fit model aggregated data, yielding single set parameters. Requesting approach dRiftDM straightforward: simply specify argument approach = \"agg_c\".2 Aggregating data offers advantage substantially reducing computational burden, since model fitted . addition, individual data can noisy—especially number trials moderate—resulting unreliable parameter estimates. cases, averaging can help obtain stable parameter estimates. However, data aggregation must approached caution. Parameter estimates obtained aggregated data necessarily correspond average individual parameter estimates. Moreover, aggregation implicitly assumes model generated data operates identically individual. also assumes parameters estimated aggregated data meaningfully reflect participant. Nevertheless, fitting model aggregated data can helpful exploratory stage. model already fails fit aggregated data, unlikely succeed fitted individual separately. cases, can save computation time directly focus modifying estimation routine model .","code":"cost_function(ddm) <- \"rmse\" print(ddm) # see the end of the following output #> Class(es) dmc_dm, drift_dm #> (model has not been estimated yet) #>  #> Parameter Values: #>        muc   b non_dec sd_non_dec  tau a    A alpha #> comp     4 0.6     0.3       0.02 0.04 2  0.1     4 #> incomp   4 0.6     0.3       0.02 0.04 2 -0.1     4 #>  #> Parameter Settings: #>        muc b non_dec sd_non_dec tau a A alpha #> comp   1   2 3       4          5   0 6 7     #> incomp 1   2 3       4          5   0 d 7     #>  #> Special Dependencies: #> A ~ incomp == -(A ~ comp) #>  #> Custom Parameters: #>        peak_l #> comp     0.04 #> incomp   0.04 #>  #> Deriving PDFS: #>   solver: kfe #>   values: sigma=1, t_max=3, dt=0.0075, dx=0.02, nt=400, nx=100 #>  #> Cost Function: rmse #>  #> Observed Data: NULL fits_agg <- estimate_dm(   drift_dm_obj = ddm,   obs_data = data,   approach = \"agg_c\",   optimizer = \"nmkb\",   lower = l_u$lower,   upper = l_u$upper ) #> Using the data supplied via the 'obs_data' argument. #> Using optimizer 'nmkb'. #> Aggregated data has been set to the model. #> Fitting the model to aggregated data across participants. The returned object will of type 'fits_agg_dm'. #> Starting optimizer 'nmkb' with the following starting values: #> muc=4, b=0.6, non_dec=0.3, sd_non_dec=0.02, tau=0.04, A=0.1, alpha=4 #> Optimization routine exited after 481 function evaluations #> Final Parameters #> muc = 4.116 #> b = 0.449 #> non_dec = 0.305 #> sd_non_dec = 0.023 #> tau = 0.021 #> A = 0.07 #> alpha = 3.671 #> ==> gave a rmse of 0.015"},{"path":"https://bucky2177.github.io/dRiftDM/articles/dRiftDM.html","id":"checking-model-fit","dir":"Articles","previous_headings":"Fitting a Model","what":"Checking Model Fit","title":"Introduction to dRiftDM","text":"qualitatively check model fits data, can use previous output estimate_dm() combination calc_stats() plot() methods. example, check model fit first fitting attempt using “Nelder-Mead”. Specifically, plot predicted observed CAFs quantiles.   Circles indicate observed data lines indicate model’s predictions.","code":"check_fit <- calc_stats(object = all_fits, type = c(\"cafs\", \"quantiles\")) plot(check_fit) #> Aggregating across ID #> Aggregating across ID"},{"path":"https://bucky2177.github.io/dRiftDM/articles/dRiftDM.html","id":"extracting-parameter-estimates-and-fit-statistics","dir":"Articles","previous_headings":"Fitting a Model","what":"Extracting Parameter Estimates and Fit Statistics","title":"Introduction to dRiftDM","text":"Extracting parameter estimates can done via coef() method, work objects returned estimate_dm(). can even make quick visualization respective distributions using hist() method.  fitting model, often want quantify fit—maybe compare quantiative fit several candidate models. end, can request several relative absolute fit measures, using calc_stats() argument type = \"fit_stats\". first columns provide (negative) log-likelihood, Akaike Bayesian Information Criterion. last two columns provide RMSE statistic (unit seconds milliseconds). neat summary model, optimization routine, data, parameter estimates can obtained via summary() method.","code":"all_coefs <- coef(all_fits) print(all_coefs) #> Object Type: coefs_dm #>  #>   ID   muc     b non_dec sd_non_dec   tau     A alpha #> 1  1 4.274 0.446   0.308      0.022 0.020 0.114 5.294 #> 2  2 4.105 0.378   0.303      0.032 0.020 0.058 5.893 #> 3  3 5.425 0.433   0.307      0.019 0.059 0.025 4.446 #> 4  4 2.863 0.537   0.302      0.034 0.051 0.101 2.761 #>  #> (access the data.frame's columns/rows as usual) hist(all_coefs, bundle_plots = FALSE) calc_stats(all_fits, type = \"fit_stats\") #> Type of Statistic: fit_stats #>  #>   ID Log_Like Neg_Log_Like       AIC      BIC RMSE_s RMSE_ms #> 1  1  418.653     -418.653  -823.307 -796.587  0.031  30.703 #> 2  2  384.298     -384.298  -754.596 -727.876  0.038  38.264 #> 3  3  508.641     -508.641 -1003.283 -976.563  0.017  17.422 #> 4  4  172.322     -172.322  -330.644 -304.008  0.039  38.599 #>  #> (access the data.frame's columns/rows as usual) summary(all_fits) #> Fit approach: separately - classical #> Fitted model type: dmc_dm, drift_dm #> Optimizer: Nelder-Mead  #> Convergence: TRUE  #> N Individuals: 4  #> Average Trial Numbers: #>  167 trials comp; 168 trials incomp #> Cost Function: neg_log_like #>  #> Parameter Summary: comp  #>           muc     b non_dec sd_non_dec   tau a     A alpha peak_l #> mean    4.167 0.448   0.305      0.027 0.037 2 0.074 4.598  0.037 #> std_err 0.524 0.033   0.001      0.004 0.010 0 0.020 0.681  0.010 #>  #> Parameter Summary: incomp  #>           muc     b non_dec sd_non_dec   tau a      A alpha peak_l #> mean    4.167 0.448   0.305      0.027 0.037 2 -0.074 4.598  0.037 #> std_err 0.524 0.033   0.001      0.004 0.010 0  0.020 0.681  0.010 #>  #> ------- #> Deriving PDFS: #>   solver: kfe #>   values: sigma=1, t_max=3, dt=0.0075, dx=0.02, nt=400, nx=100"},{"path":"https://bucky2177.github.io/dRiftDM/articles/dRiftDM.html","id":"experimental-perform-bayesian-parameter-estimation","dir":"Articles","previous_headings":"Fitting a Model","what":"Experimental: Perform Bayesian Parameter Estimation","title":"Introduction to dRiftDM","text":"Starting dRiftDM v.0.3.0, also option perform Bayesian parameter estimation using DE-MCMC. Yet, currently experimental stage, returned mcmc_dm object type yet fully integrated within remaining dRiftDM framework. can request Bayesian parameter estimation using argument approach = \"sep_b\" approach = \"hier_b\". former case, model fitted separately per participant, latter case, model fitted hierarchically. prior distributions can parameterized using arguments lower, upper, means, sds, shapes, rates (see documentation estimate_dm()) returns list mcmc_dm objects, one individual.  also possible request hierarchical estimation.","code":"# DMC without variability in the non-decision time; # makes it a bit easier to estimate, although it is still # difficult, because trial numbers are low in the sample data set :) ddm <- dmc_dm(var_non_dec = FALSE)  # lower and upper boundary for the prior distributions l_u <- get_lower_upper(ddm) mcmc_list <- estimate_dm(   drift_dm_obj = ddm,   obs_data = data,   approach = \"sep_b\",   lower = l_u$lower,   upper = l_u$upper,   verbose = 2,   n_chains = 40,   n_cores = 1,   # increase to parallelize   burn_in = 150, # for the demo, usually a bit higher   samples = 150, # for the demo, usually a bit higher   seed = 1 ) #> Using the data supplied via the 'obs_data' argument. #> Using optimizer 'DE-MCMC'. #> Fitting the model separaetely to multiple participants using the Bayesian framework. For now, the result will be a list of 'mcmc_dm' objects. #> Finding starting values... #> Starting the sampling procedure #> Finding starting values... #> Starting the sampling procedure #> Finding starting values... #> Starting the sampling procedure #> Finding starting values... #> Starting the sampling procedure one_mcmc <- mcmc_list[[1]] one_mcmc #> Sampler: DE-MCMC  #> Hierarchical: FALSE  #> No. Parameters: 6  #> No. Chains: 40  #> Iterations Per Chain: 150 coef(one_mcmc) #>        muc          b    non_dec        tau          A      alpha  #> 4.43895842 0.64038802 0.26251248 0.06067285 0.08268417 6.89377463 plot(one_mcmc, bundle_plots = FALSE) mcmc_hier <- estimate_dm(   drift_dm_obj = ddm,   obs_data = data,   approach = \"hier_b\",   lower = l_u$lower,   upper = l_u$upper,   verbose = 2,   n_chains = 40,   n_cores = 1, # increase for speed-up   burn_in = 150, # for the demo, usually way higher   samples = 150, # for the demo, usually way higher   seed = 1 )"},{"path":"https://bucky2177.github.io/dRiftDM/articles/dRiftDM.html","id":"simulating-data","dir":"Articles","previous_headings":"","what":"Simulating Data","title":"Introduction to dRiftDM","text":"simulate data based model, can use simulate_data() function. first argument takes model object. second argument numeric (vector), defining number trials per condition: returns single synthetic data set one “participant”. Note simulated response times rounded three digits per default. specifying argument k, can simulate multiple synthetic data sets simultaneously. case, however, must also specify lower upper bounds define simulation space drawing random parameter combinations per data set (see simulate_data documentation details): returns list synthetic data sets corresponding parameter values: returned data sets format can passed directly estimate_model_ids(), making parameter recovery exercises easy.","code":"ddm <- ratcliff_dm() # a model for demonstration purpose sim_1 <- simulate_data(object = ddm, n = 200) head(sim_1) #>      RT Error Cond #> 1 0.384     0 null #> 2 0.453     0 null #> 3 0.361     0 null #> 4 0.355     0 null #> 5 0.433     0 null #> 6 0.737     0 null sim_2 <- simulate_data(   object = ddm, n = 200, k = 2,   lower = c(muc = 1, b = .4, non_dec = .2),   upper = c(muc = 6, b = .8, non_dec = .4) ) head(sim_2$synth_data) #>      RT Error Cond ID #> 1 0.442     0 null  1 #> 2 0.575     0 null  1 #> 3 0.497     0 null  1 #> 4 0.373     0 null  1 #> 5 0.372     0 null  1 #> 6 0.374     0 null  1 head(sim_2$prms) #>   ID      muc         b   non_dec #> 1  1 3.150769 0.5352176 0.2355121 #> 2  2 2.069268 0.4133454 0.2690531"},{"path":"https://bucky2177.github.io/dRiftDM/articles/dRiftDM.html","id":"remark-stripping-away-unnecesary-attributes-and-class-labels","dir":"Articles","previous_headings":"","what":"Remark: Stripping Away “Unnecesary” Attributes and Class Labels","title":"Introduction to dRiftDM","text":"Many functions dRiftDM return matrices data.frames. Often returned objects S3 objects custom class label. principle, great allows reuse generic functions like plot(), print(), summary() saw . However, sometimes also hides true structure underlying data type. Therefore, provide unpack_obj() function, allows strip away unnecessary attributes class labels. can useful, example, want create plot wrangle data particular format.","code":"ddm <- dmc_dm() traces <- simulate_traces(ddm, k = 2) # although this object is essentially a list of matrices, the class label ... class(traces) #> [1] \"traces_dm_list\" print(traces) # ... leads to nicely formatted output; but hides the underlying structure #> Class(es): traces_dm_list #>  #> Time space: #> 0.000, 0.007, 0.015, 0.022 ... 3.000  #>  #> Condition: comp  #> ~>  0.000,  0.239,  0.287,  0.243 ...  0.676  #> ~>  0.000, -0.104, -0.137, -0.185 ...  0.639  #>  #> Condition: incomp  #> ~>  0.000, -0.005,  0.020,  0.032 ...  0.667  #> ~>  0.000, -0.128, -0.178, -0.106 ...  0.608  raw <- unpack_obj(traces) # provides the plain list of matrices head(t(raw$comp)) #>           [,1]       [,2] #> [1,] 0.0000000  0.0000000 #> [2,] 0.2387526 -0.1035851 #> [3,] 0.2865938 -0.1373298 #> [4,] 0.2428892 -0.1849793 #> [5,] 0.3130805 -0.3254528 #> [6,] 0.3192930 -0.3616110"},{"path":"https://bucky2177.github.io/dRiftDM/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Valentin Koob. Maintainer, author, copyright holder. Thomas Richter. Author, copyright holder. Markus Janczyk. Author.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Koob V, Richter T, Janczyk M (2025). dRiftDM: R package fitting non-stationary drift diffusion models. R package version 0.3.0.","code":"@Manual{,   title = {dRiftDM: An R package for fitting non-stationary drift diffusion models},   author = {Valentin Koob and Thomas Richter and Markus Janczyk},   year = {2025},   note = {R package version 0.3.0}, }"},{"path":"https://bucky2177.github.io/dRiftDM/index.html","id":"driftdm-","dir":"","previous_headings":"","what":"Estimating (Time-Dependent) Drift Diffusion Models","title":"Estimating (Time-Dependent) Drift Diffusion Models","text":"package dRiftDM developed assist psychology researchers applying fitting diffusion models empirical data within R environment. important feature ability handle non-stationary problems, specifically diffusion models time-dependent parameters (drift rate changes course trial). package includes essential tools standard analyses, building models, estimating parameters multiple participants, creating/visualizing summary statistics. pre-built models available package : Standard Ratcliff Diffusion Model (Ratcliff, 1978, Psychological Review) Diffusion Model Conflict Tasks (Ulrich et al., 2015, Cognitive Psychology) Shrinking Spotlight Model (White et al., 2011, Cognitive Psychology) can flexibly create custom models utilize dRiftDM machinery estimate . Variability starting point non-decision time generally supported. Variability drift rate also supported, although limited models time-independent/constant drift rate. Model components collapsing boundary already pre-built. Demos model customization provided one vignettes. Model predictions (.e., first-passage times) derived numerically solving Kolmogorov-Forward equation (KFE) using time-adaptive procedure (.e., time-step size adjusted dynamically leads substantial speed-). default, currently recommend keeping way. backward compatibility, also possible derive first-passage-time distribution via coupled set integral equations. However, method yet support adaptive time stepping. Thus, finer discretization settings necessary, generally run slower approach based KFE. Mathematical details approaches provided Richter et al. (2023, Journal Mathematical Psychology).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Estimating (Time-Dependent) Drift Diffusion Models","text":"can install development version dRiftDM GitHub : CRAN version can installed :","code":"# install.packages(\"devtools\") devtools::install_github(\"bucky2177/dRiftDM\") install.packages(\"dRiftDM\")"},{"path":"https://bucky2177.github.io/dRiftDM/index.html","id":"notes","dir":"","previous_headings":"","what":"Notes","title":"Estimating (Time-Dependent) Drift Diffusion Models","text":"Compared initial version 0.1.1, versions >=0.2.0 make greater use S3 object system. Additionally, beginning version 0.2.0, models use flex_prms objects handle parameters across conditions. versions >=0.3.0, implemented efficient KFE-based solver, led substantial speed-. also added several new features: different optimization algorithms (including unbounded Nelder-Mead BFGS) different cost functions (root-mean-square error, RMSE, alternative log-likelihood) default parameter ranges pre-built models visualizing full distribution model calculating basic summary statistics calculating/visualizing uncertainty intervals via bootstrap-like procedures fitting model aggregated data using RMSE statistic fitting model via hierarchical non-hierarchical Bayesian estimation (currently experimental fully connected dRiftDM’s features) install one older versions (0.1.1, 0.2.1, 0.2.2), can use:","code":"devtools::install_github(\"bucky2177/dRiftDM\", ref = \"<insert version>\")"},{"path":"https://bucky2177.github.io/dRiftDM/index.html","id":"how-to-use-driftdm","dir":"","previous_headings":"","what":"How to use dRiftDM","title":"Estimating (Time-Dependent) Drift Diffusion Models","text":"interested getting started dRiftDM, recommend reading OSF pre-print. information functions model customization can found dRiftDM’s vignettes. vignettes also available “Getting started” “Articles” tabs Github.io page. questions, feel free contact us!","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/add_residual.html","id":null,"dir":"Reference","previous_headings":"","what":"Convolute the First Passage Times with the Non-Decision Time Distribution — add_residual","title":"Convolute the First Passage Times with the Non-Decision Time Distribution — add_residual","text":"Calls stats::convolve first passage times non-decision time distribution derive full distribution response times. convolution, add robustness parameter.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/add_residual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convolute the First Passage Times with the Non-Decision Time Distribution — add_residual","text":"","code":"add_residual(pdf_nt, pdf_u, pdf_l, dt, nt)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/add_residual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convolute the First Passage Times with the Non-Decision Time Distribution — add_residual","text":"pdf_nt non-decision time density values pdf_u, pdf_l first passage times dt, nt step size number steps time space (input checks scaling)","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/add_residual.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convolute the First Passage Times with the Non-Decision Time Distribution — add_residual","text":"list PDFs one condition \"pdf_u\" \"pdf_l\"","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/aggregate_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate Statistics Across ID — aggregate_stats","title":"Aggregate Statistics Across ID — aggregate_stats","text":"aggregate_stats (exported) function aggregate stats_dm objects across IDs. Since column names may vary statistic type, behavior aggregate depends subclass stats_dm.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/aggregate_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate Statistics Across ID — aggregate_stats","text":"","code":"aggregate_stats(stat_df)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/aggregate_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate Statistics Across ID — aggregate_stats","text":"stat_df data.frame class stats_dm (see new_stats_dm())","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/aggregate_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate Statistics Across ID — aggregate_stats","text":"Returns statistics aggregated across relevant cols.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/aggregate_stats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregate Statistics Across ID — aggregate_stats","text":"aggregate_stats calls internal_aggregate() relevant arguments","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/b_coding.html","id":null,"dir":"Reference","previous_headings":"","what":"The Coding of the Boundaries — b_coding<-","title":"The Coding of the Boundaries — b_coding<-","text":"Functions get set \"boundary coding\" object.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/b_coding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Coding of the Boundaries — b_coding<-","text":"","code":"b_coding(object, ...) <- value  # S3 method for class 'drift_dm' b_coding(object, ...) <- value  b_coding(object, ...)  # S3 method for class 'drift_dm' b_coding(object, ...)  # S3 method for class 'fits_ids_dm' b_coding(object, ...)  # S3 method for class 'fits_agg_dm' b_coding(object, ...)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/b_coding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Coding of the Boundaries — b_coding<-","text":"object object type drift_dm, fits_ids_dm, fits_agg_dm (see estimate_dm()). ... additional arguments. value named list, specifying boundaries coded (see Details).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/b_coding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Coding of the Boundaries — b_coding<-","text":"b_coding() list containing boundary coding b_coding<-() updated drift_dm fits_ids_dm object","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/b_coding.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Coding of the Boundaries — b_coding<-","text":"b_coding() generic accessor function, b_coding<-() generic replacement function. default methods get set \"boundary coding\", attribute drift_dm model. boundary coding summarizes response time belongs boundary boundaries shall \"labeled\". list specifies three entries: column, contains single character string, indicating column observed data set codes boundaries. u_name_value, contains numeric character vector length 1. name vector gives label upper boundary, entry gives value stored obs_data[[column]] coding upper boundary. l_name_value, contains numeric character vector length 1. name vector gives label lower boundary, entry gives value stored obs_data[[column]] coding lower boundary. package dRiftDM default boundary coding: column = \"Error\" u_name_value = c(\"corr\" = 0) l_name_value = c(\"err\" = 1) Thus, per default, dRiftDM assumes observed data set column \"Error\", providing values 0 1 upper lower boundary, respectively. upper lower boundaries labeled \"corr\" \"err\", respectively. labels used, example, calculating statistics (see calc_stats). calling b_coding<-() value = NULL, default \"accuracy\" coding evoked","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/b_coding.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Coding of the Boundaries — b_coding<-","text":"","code":"# show the default accuracy coding of dRiftDM my_model <- ratcliff_dm() # get a pre-built model b_coding(my_model) #> $column #> [1] \"Error\" #>  #> $u_name_value #> corr  #>    0  #>  #> $l_name_value #> err  #>   1  #>   # can be modified/replaced b_coding(my_model)[[\"column\"]] <- \"Response\"  # accessor method also available for fits_ids_dm objects # get an exemplary fits_ids_dm object (see estimate_model_ids) fits <- get_example_fits(\"fits_ids_dm\") names(b_coding(fits)) #> [1] \"column\"       \"u_name_value\" \"l_name_value\""},{"path":"https://bucky2177.github.io/dRiftDM/reference/b_constant.html","id":null,"dir":"Reference","previous_headings":"","what":"Constant Boundary — b_constant","title":"Constant Boundary — b_constant","text":"Constant Boundary","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/b_constant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constant Boundary — b_constant","text":"","code":"b_constant(prms_model, prms_solve, t_vec, one_cond, ddm_opts)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/b_constant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constant Boundary — b_constant","text":"prms_model model parameters, containing b prms_solve solver settings t_vec time space one_cond one condition ddm_opts optional arguments attached object","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/b_constant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constant Boundary — b_constant","text":"vector length t_vec b value element vector.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/b_hyperbol.html","id":null,"dir":"Reference","previous_headings":"","what":"Collapsing Boundary - Hyperbolic Ratio Function — b_hyperbol","title":"Collapsing Boundary - Hyperbolic Ratio Function — b_hyperbol","text":"Provides boundary, collapsing hyperbolic ratio function.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/b_hyperbol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collapsing Boundary - Hyperbolic Ratio Function — b_hyperbol","text":"","code":"b_hyperbol(prms_model, prms_solve, t_vec, one_cond, ddm_opts)  dt_b_hyperbol(prms_model, prms_solve, t_vec, one_cond, ddm_opts)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/b_hyperbol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collapsing Boundary - Hyperbolic Ratio Function — b_hyperbol","text":"prms_model model parameters, containing b0, kappa, t05 prms_solve solver settings t_vec time space one_cond one condition ddm_opts optional arguments attached object","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/b_hyperbol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collapsing Boundary - Hyperbolic Ratio Function — b_hyperbol","text":"vector length t_vec boundary values (deriviative) element vector.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/b_hyperbol.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Collapsing Boundary - Hyperbolic Ratio Function — b_hyperbol","text":"b_hyperbol dt_b_hyperbol provide plain boundary values respective derivative, respectively.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/b_weibull.html","id":null,"dir":"Reference","previous_headings":"","what":"Collapsing Boundary - Weibull Function — b_weibull","title":"Collapsing Boundary - Weibull Function — b_weibull","text":"Provides boundary, collapsing accordance Weibull function","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/b_weibull.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collapsing Boundary - Weibull Function — b_weibull","text":"","code":"b_weibull(prms_model, prms_solve, t_vec, one_cond, ddm_opts)  dt_b_weibull(prms_model, prms_solve, t_vec, one_cond, ddm_opts)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/b_weibull.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collapsing Boundary - Weibull Function — b_weibull","text":"prms_model model parameters, containing b0, lambda, k, kappa prms_solve solver settings t_vec time space one_cond one condition ddm_opts optional arguments attached object","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/b_weibull.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collapsing Boundary - Weibull Function — b_weibull","text":"vector length t_vec boundary values (deriviative) element vector.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/b_weibull.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Collapsing Boundary - Weibull Function — b_weibull","text":"b_weibull dt_b_weibull provide plain boundary values respective derivative, respectively.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_basic_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Basic Statistics for Response Times or Probability Densities — calc_basic_stats","title":"Calculate Basic Statistics for Response Times or Probability Densities — calc_basic_stats","text":"Function calls underlying functions calc_basic_stats_obs calc_basic_stats_pred. Handles input checks data wrangling.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_basic_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Basic Statistics for Response Times or Probability Densities — calc_basic_stats","text":"","code":"calc_basic_stats(   pdf_u = NULL,   pdf_l = NULL,   rts_u = NULL,   rts_l = NULL,   one_cond,   b_coding,   t_vec = NULL,   dt = NULL,   skip_if_contr_low = NULL )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_basic_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Basic Statistics for Response Times or Probability Densities — calc_basic_stats","text":"pdf_u, pdf_l numeric, vectors probability density values upper lower boundaries. rts_u, rts_l numeric, vectors response times upper lower boundaries. one_cond character, label condition. b_coding list, used accessing upper boundary label, determines corresponding column returned data.frame (e.g., P_corr). t_vec numeric vector, containing time points corresponding probability density values. dt single numeric, providing step size t_vec. skip_if_contr_low single numeric, threshold probability densities ignored (default obtained drift_dm_skip_if_contr_low()).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_basic_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Basic Statistics for Response Times or Probability Densities — calc_basic_stats","text":"data.frame columns: Source: Indicates whether statistics refer observed (obs) predicted (pred) data. Cond: condition label. Mean_<u_label>: Mean response time upper boundary. Mean_<l_label>: Mean response time lower boundary. P_<u_label>: Proportion upper-boundary responses.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_basic_stats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Basic Statistics for Response Times or Probability Densities — calc_basic_stats","text":"pdf_u pdf_l provided, function computes statistics probability densities. rts_u rts_l provided, function computes statistics observed RTs. sets inputs provided, types statistics computed returned.","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_basic_stats_obs.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Basic Mean, Standard Deviations, and Percentages for Observed and Predicted Data — calc_basic_stats_obs","title":"Calculate Basic Mean, Standard Deviations, and Percentages for Observed and Predicted Data — calc_basic_stats_obs","text":"Backend functions compute mean response times, standard deviations response times, response proportions; observed RTs predicted probability density functions.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_basic_stats_obs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Basic Mean, Standard Deviations, and Percentages for Observed and Predicted Data — calc_basic_stats_obs","text":"","code":"calc_basic_stats_obs(rts_u, rts_l, one_cond)  calc_basic_stats_pred(   pdf_u,   pdf_l,   one_cond,   t_vec,   dt,   skip_if_contr_low = NULL )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_basic_stats_obs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Basic Mean, Standard Deviations, and Percentages for Observed and Predicted Data — calc_basic_stats_obs","text":"rts_u, rts_l numeric, vectors response times upper lower boundaries. one_cond character, label condition. pdf_u, pdf_l numeric, vectors probability density values upper lower boundaries. t_vec numeric vector, containing time points corresponding probability density values. dt single numeric, providing step size t_vec. skip_if_contr_low single numeric, threshold probability densities ignored (default obtained drift_dm_skip_if_contr_low()).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_basic_stats_obs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Basic Mean, Standard Deviations, and Percentages for Observed and Predicted Data — calc_basic_stats_obs","text":"data.frame columns: Cond: Condition label. Mean_U: Mean response time upper boundary Mean_L: Mean response time lower boundary SD_U: Mean response time upper boundary SD_L: Mean response time lower boundary P_U: Proportion upper-boundary responses.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_basic_stats_obs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Basic Mean, Standard Deviations, and Percentages for Observed and Predicted Data — calc_basic_stats_obs","text":"observed data, calculates mean RTs, standard deviations RTs, proportion upper responses. statistics calculated probability density values (via simple numerical integration)","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_cafs.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate CAFs — calc_cafs","title":"Calculate CAFs — calc_cafs","text":"Function calls underlying CAF calculation functions calc_cafs_obs calc_cafs_pred. input checks data wrangling","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_cafs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate CAFs — calc_cafs","text":"","code":"calc_cafs(   pdf_u = NULL,   pdf_l = NULL,   t_vec = NULL,   rts_u = NULL,   rts_l = NULL,   one_cond,   n_bins = NULL,   b_coding )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_cafs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate CAFs — calc_cafs","text":"pdf_u, pdf_l density values upper lower boundary t_vec time space rts_u, rts_l vectors RTs upper lower boundary one_cond character label n_bins number bins use CAFs b_coding used accessing upper boundary label, determines corresponding column returned data.frame (e.g., P_corr).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_cafs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate CAFs — calc_cafs","text":"data.frame \"Source\", \"Cond\", \"Bin\"s, \"P_<u_label>\" CAFs type c(\"cafs\", \"sum_dist\", \"stats_dm\", \"data.frame\")","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_cafs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate CAFs — calc_cafs","text":"pdf_u pdf_l NULL, returns CAFs densities rts_u rts_l NULL, returns CAFs response times NULL, returns .","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_cafs_obs.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate CAFs — calc_cafs_obs","title":"Calculate CAFs — calc_cafs_obs","text":"Backend functions calculate conditional accuracy functions RT vectors pdfs","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_cafs_obs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate CAFs — calc_cafs_obs","text":"","code":"calc_cafs_obs(rts_u, rts_l, one_cond, n_bins)  calc_cafs_pred(pdf_u, pdf_l, t_vec, one_cond, n_bins)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_cafs_obs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate CAFs — calc_cafs_obs","text":"rts_u, rts_l vectors RTs upper lower boundary one_cond character label n_bins number bins use CAFs pdf_u, pdf_l density values upper lower boundary t_vec time space","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_cafs_obs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate CAFs — calc_cafs_obs","text":"data.frame \"Cond\" label, \"Bin\"s \"P_U\" CAFs","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_cafs_obs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate CAFs — calc_cafs_obs","text":"RTs: first elements attributed bin (bins calculated across RTs using equally spaced quantiles), accuracy per bin calculated. Densities: Add density values, calculate CDF force 0 determine indices cut CDF bins considering equally spaced quantiles. calculate ratio probability mass per bin.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_delta_funs.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate delta function(s) — calc_delta_funs","title":"Calculate delta function(s) — calc_delta_funs","text":"Given dataset providing quantiles (calc_quantiles), calculates delta function(s) character vectors minuends subtrahends","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_delta_funs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate delta function(s) — calc_delta_funs","text":"","code":"calc_delta_funs(   quantiles_dat,   minuends = NULL,   subtrahends = NULL,   dvs = NULL,   b_coding )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_delta_funs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate delta function(s) — calc_delta_funs","text":"quantiles_dat data.frame quantiles (calc_quantiles) minuends, subtrahends character vectors (equal length), specifying conditions use delta function: minuend - subtrahend dvs character, indicating quantile columns use. Default \"Quant_<u_label>\". multiple dvs provided, minuends subtrahends must length, matching occurs pairwise. case, one minuend/subtrahend specified, minuend subtrahend recycled necessary length. b_coding b_coding object, necessary build default dvs","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_delta_funs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate delta function(s) — calc_delta_funs","text":"data.frame columns \"Source\", \"Prob\", \"Quant_<u_label>\", \"Quant_<l_label\". May following additional columns: one dv: many Delta_<minuend_subtrahend> Avg_<minuends_subtrahends> minuends subtrahends. one dv: many Delta_<u/l-label><minuend_subtrahend> Avg<u/l-label>_<minuends_subtrahends> minuends subtrahends. data.frame type c(\"delta_funs\", \"sum_dist\", \"stats_dm\", \"data.frame\")","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_delta_funs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate delta function(s) — calc_delta_funs","text":"Takes quantile data_frame, stats::reshape wide, access relevant dv columns, together minuends subtrahends calculate delta functions.","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_dens_obs.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate and Combine Density Estimates for Observed and Predicted Data — calc_dens_obs","title":"Calculate and Combine Density Estimates for Observed and Predicted Data — calc_dens_obs","text":"Internal helper functions return data.frame summarizing density values observed predicted response times.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_dens_obs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate and Combine Density Estimates for Observed and Predicted Data — calc_dens_obs","text":"","code":"calc_dens_obs(   rts_u,   rts_l,   one_cond,   t_max = NULL,   discr = NULL,   scaling_factor = 1 )  calc_dens(   pdf_u = NULL,   pdf_l = NULL,   t_vec = NULL,   t_max = NULL,   discr = NULL,   rts_u = NULL,   rts_l = NULL,   one_cond,   b_coding,   scaling_factor = 1 )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_dens_obs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate and Combine Density Estimates for Observed and Predicted Data — calc_dens_obs","text":"rts_u, rts_l vectors RTs upper lower boundary one_cond character label t_max single numeric value specifying maximum RT consider. Defaults smallest multiple discr maximum RT. t_vec provided, t_max defaults maximum value t_vec. discr single numeric value defining bin width histogram KDE estimation. Defaults 0.015 (seconds). scaling_factor single numeric value, multiplied PDFs. used scale corresponding probability mass proportional number trials per condition. Defaults 1.0. pdf_u, pdf_l density values upper lower boundary t_vec time space (required pdfs) b_coding used accessing upper/lower boundary labels, determines corresponding columns returned data.frame (e.g., Quant_corr).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_dens_obs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate and Combine Density Estimates for Observed and Predicted Data — calc_dens_obs","text":"stats_dm object (via new_stats_dm()) containing data.frame columns: Source: indicates whether row observed (\"obs\") predicted (\"pred\") data. Cond: condition label. Time: time point corresponding density value. Stat: type density summary—\"hist\" \"kde\" (observed data), \"pdf\" (predicted data). Dens_<U>: density value upper response. Dens_<L>: density value lower response. <U> <L> placeholders determined b_coding argument.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_dens_obs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate and Combine Density Estimates for Observed and Predicted Data — calc_dens_obs","text":"calc_dens_obs() computes empirical histograms kernel density estimates single condition based observed RTs. calc_dens() serves general interface combines observed predicted data single data.frame. Observed data (rts_u rts_l) passed calc_dens_obs(). Predicted data (pdf_u pdf_l) wrapped data.frame matches structure returned calc_dens_obs(). provided, observed predicted data row-bound single data.frame. functions used internally support type = \"density\" calc_stats(), providing full distributional overview.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_fit_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Fit Statistics — calc_fit_stats","title":"Calculate Fit Statistics — calc_fit_stats","text":"Computes/Summarizes multiple fit statistics, inclduing Log-Likelihood, Negative Log-Likelihood, Akaike Information Criterion (AIC), Bayesian Information Criterion (BIC), Root-Mean Squared-Error (RMSE) statistic.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_fit_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Fit Statistics — calc_fit_stats","text":"","code":"calc_fit_stats(drift_dm_obj, k = 2, ...)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_fit_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Fit Statistics — calc_fit_stats","text":"drift_dm_obj object type drift_dm k single numeric, scaling penality stats::AIC) ... additional arguments passed forward. Options probs, n_bins, weight_err calculating RMSE.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_fit_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Fit Statistics — calc_fit_stats","text":"custom object class stats_dm (c(\"fit_stats\", \"stats_dm\", \"data.frame\")). columns : Log_Like: log-likelihood value Neg_Log_Like: negative log-likelihood value AIC: calculated AIC value BIC: calculated BIC value RMSE_s: root-mean-squared error (RTs seconds) RMSE_ms: root-mean-squared error (RTs milliseconds) respective statistic calculated, respective column contains NA.","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_log_like.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Log-Likelihood — calc_log_like","title":"Calculate the Log-Likelihood — calc_log_like","text":"Wrapper function around log_like_heart","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_log_like.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Log-Likelihood — calc_log_like","text":"","code":"calc_log_like(pdfs, t_vec, obs_data)  log_like_heart(pdf_u, pdf_l, t_vec, rts_u, rts_l)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_log_like.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Log-Likelihood — calc_log_like","text":"pdfs list pdfs (see details) t_vec time space obs_data list obs_data pdf_u, pdf_l numeric vectors pdfs (unpacked) rts_u, rts_l numeric vectors observed RTs (unpacked)","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_log_like.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Log-Likelihood — calc_log_like","text":"single value log-likelihood. data provided, NULL returned. calculation fails, -Inf returned.","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_log_like.html","id":"calc-log-like","dir":"Reference","previous_headings":"","what":"calc_log_like","title":"Calculate the Log-Likelihood — calc_log_like","text":"Iterates conditions, passes forward (unpacked) arguments log_like_heart, adding log-likelihood condition. pdfs must list entries named conditions, condition list two PDFs (named pdf_u pdf_l) obs_data must list entries \"rts_u\" \"rts_l\", rts_* entry named list RT values condition","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_log_like.html","id":"log-like-heart","dir":"Reference","previous_headings":"","what":"log_like_heart","title":"Calculate the Log-Likelihood — calc_log_like","text":"Gets density values RTs rts_u/rts_l via stats::approx(), takes log , sums across . Wraps calculation tryCatch statement, throwing warnings log_like_values can calculated","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_pdfs.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the PDFs — calc_pdfs","title":"Calculate the PDFs — calc_pdfs","text":"method takes model, time space vectors, unpacked parameters solving PDF derive first passage time across conditions. wrapper around cpp implementations add_residual. Important: function used depths package generic method exported.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_pdfs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the PDFs — calc_pdfs","text":"","code":"calc_pdfs(drift_dm_obj, x_vec, t_vec, prms_solve)  # S3 method for class 'drift_dm' calc_pdfs(drift_dm_obj, x_vec, t_vec, prms_solve)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_pdfs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the PDFs — calc_pdfs","text":"drift_dm_obj model type drift_dm x_vec numeric vector, evidence space t_vec numeric vector, time space prms_solve discretization (see prms_solve)","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_pdfs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the PDFs — calc_pdfs","text":"list PDFs, named entries condition. entry contains list vectors, named \"pdf_u\" \"pdf_l\"","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_pdfs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the PDFs — calc_pdfs","text":"calc_pdfs generic method dispatches function call (exported). Currently, method considers objects type drift_dm. calc_pdfs.drift_dm function called models. evaluates different components model, subsequently calls cpp implementations KFE integral method. also calls add_residual function convolute non-decision time first passage time. numerical methods deriving PDFs based code provided (Richter et al. 2023) .","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_pdfs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate the PDFs — calc_pdfs","text":"Richter T, Ulrich R, Janczyk M (2023). “Diffusion models time-dependent parameters: analysis computational effort accuracy different numerical methods.” Journal Mathematical Psychology, 114, 102756. doi:10.1016/j.jmp.2023.102756 .","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_quantiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Quantiles — calc_quantiles","title":"Calculate Quantiles — calc_quantiles","text":"Function calls underlying quantile calculation functions calc_quantiles_obs() calc_quantiles_pred(). input checks data wrangling","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_quantiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Quantiles — calc_quantiles","text":"","code":"calc_quantiles(   pdf_u = NULL,   pdf_l = NULL,   t_vec = NULL,   dt = NULL,   rts_u = NULL,   rts_l = NULL,   one_cond,   probs = NULL,   b_coding,   skip_if_contr_low = NULL )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_quantiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Quantiles — calc_quantiles","text":"pdf_u, pdf_l density values upper lower boundary t_vec time space (required pdfs) dt step size corresponding time space rts_u, rts_l vectors RTs upper lower boundary one_cond character label probs numeric vector values 0 1 probability levels b_coding used accessing upper/lower boundary labels, determines corresponding columns returned data.frame (e.g., Quant_corr). skip_if_contr_low numeric. contribution upper lower PDF overall PDF low, return NAs PDF (see also drift_dm_skip_if_contr_low()).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_quantiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Quantiles — calc_quantiles","text":"data.frame \"Source\", \"Cond\", \"Prob\"s, \"Quant_<u_label>\", \"Quant_<l_label>\" type c(\"quantiles\", \"sum_dist\", \"stats_dm\", \"data.frame\")","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_quantiles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Quantiles — calc_quantiles","text":"pdf_u pdf_l NULL, returns quantiles densities rts_u rts_l NULL, returns quantiles response times NULL, returns .","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_quantiles_obs.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Quantiles — calc_quantiles_obs","title":"Calculate Quantiles — calc_quantiles_obs","text":"Backend functions calculate quantiles RT vectors pdfs","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_quantiles_obs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Quantiles — calc_quantiles_obs","text":"","code":"calc_quantiles_obs(rts_u, rts_l, one_cond, probs)  calc_quantiles_pred(   pdf_u,   pdf_l,   t_vec,   one_cond,   probs,   dt,   skip_if_contr_low = NULL )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_quantiles_obs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Quantiles — calc_quantiles_obs","text":"rts_u, rts_l vectors RTs upper lower boundary one_cond character label probs numeric vector values 0 1 probability levels pdf_u, pdf_l density values upper lower boundary t_vec time space (required pdfs) dt step size corresponding time space skip_if_contr_low numeric. contribution upper lower PDF overall PDF low, return NAs PDF (see also drift_dm_skip_if_contr_low()).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_quantiles_obs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Quantiles — calc_quantiles_obs","text":"data.frame \"Cond\" label, \"Prob\"s \"Quant_U\" \"Quant_L\" quantiles","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_quantiles_obs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Quantiles — calc_quantiles_obs","text":"RTs: straightforward via stats::quantile. Densities: Calculate CDF (pdf separately ), map desired probability level via CDF (y-axis) time space (x-axis)","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_rmse_eval.html","id":null,"dir":"Reference","previous_headings":"","what":"RMSE Calculation and Helpers — calc_rmse_eval","title":"RMSE Calculation and Helpers — calc_rmse_eval","text":"Internal helpers computing root mean squared error (RMSE) predicted observed quantiles conditional accuracy functions.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_rmse_eval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RMSE Calculation and Helpers — calc_rmse_eval","text":"","code":"calc_rmse_eval(pdfs, t_vec, dt, stats_agg, stats_agg_info, weight_err = 1.5)  calc_rmse(quants_pred, cafs_pred, quants_obs, cafs_obs, weight_err = 1.5)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_rmse_eval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RMSE Calculation and Helpers — calc_rmse_eval","text":"pdfs list PDFs per condition (named). t_vec numeric time vector. dt numeric time step. stats_agg list observed summary statistics. stats_agg_info list info quantile probabilities CAF bins. weight_err non-negative numeric scalar; weight factor CAF error relative quantile error. Default 1.5 quants_pred numeric vector predicted quantiles (already flattened). cafs_pred numeric vector predicted CAFs (already flattened). quants_obs numeric vector observed quantiles (already flattened). cafs_obs numeric vector observed CAFs (already flattened).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_rmse_eval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"RMSE Calculation and Helpers — calc_rmse_eval","text":"single numeric RMSE value, NULL observed stats provided, Inf predictions failed (contain NA).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_rmse_eval.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"RMSE Calculation and Helpers — calc_rmse_eval","text":"calc_rmse_eval() prepares observed predicted quantiles/CAFs PDFs aggregated info, calls calc_rmse(). calc_rmse() computes weighted RMSE given predicted observed quantiles/CAFs.","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Statistics — calc_stats","title":"Calculate Statistics — calc_stats","text":"calc_stats provides interface calculating statistics/metrics model predictions /observed data. Supported statistics include basic statistics mean standard deviation, Conditional Accuracy Functions (CAFs), Quantiles, Delta Functions, fit statistics. Results can aggregated across individuals.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Statistics — calc_stats","text":"","code":"calc_stats(object, type, ...)  # S3 method for class 'data.frame' calc_stats(   object,   type,   ...,   conds = NULL,   resample = FALSE,   progress = 1,   level = \"individual\",   b_coding = NULL )  # S3 method for class 'drift_dm' calc_stats(object, type, ..., conds = NULL, resample = FALSE)  # S3 method for class 'fits_ids_dm' calc_stats(   object,   type,   ...,   conds = NULL,   resample = FALSE,   progress = 1,   level = \"individual\" )  # S3 method for class 'fits_agg_dm' calc_stats(   object,   type,   ...,   conds = NULL,   resample = FALSE,   progress = 1,   level = \"group\",   messaging = TRUE )  # S3 method for class 'stats_dm' print(   x,   ...,   round_digits = drift_dm_default_rounding(),   print_rows = 10,   some = FALSE,   show_header = TRUE,   show_note = TRUE )  # S3 method for class 'stats_dm_list' print(x, ...)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Statistics — calc_stats","text":"object object statistics calculated. can data.frame observed data, drift_dm object, fits_ids_dm object, fits_agg_dm object (see estimate_dm()). type character vector, specifying statistics calculate. Supported values include \"basic_stats\", \"cafs\", \"quantiles\", \"delta_funs\", \"densities\", \"fit_stats\". ... additional arguments passed respective method underlying calculation functions (see Details mandatory arguments). conds optional character vector specifying conditions include. Conditions must match found object. resample logical. TRUE, data (re-)sampled create uncertainty estimate requested summary statistic. See Details information. Default FALSE. Note resampling work type = \"fit_stats\". progress integer, indicating information progress displayed. 0 -> information, 1 -> progress bar. Default 1. level single character string, indicating \"level\" statistic calculated. Options \"group\" \"individual\". \"individual\", returned stats_dm object contains \"ID\" column. b_coding list boundary coding (see b_coding). relevant object data.frame. object types, b_coding object used. messaging logical, FALSE, message provided. x object type stats_dm stats_dm_list, returned function calc_stats(). round_digits integer, controls number digits shown. Default 3. print_rows integer, controls number rows shown. logical. TRUE, subset randomly sampled rows shown. show_header logical. TRUE, header specifying type statistic displayed. show_note logical. TRUE, footnote  displayed indicating underlying data.frame can accessed usual.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Statistics — calc_stats","text":"type single character string, subclass data.frame returned, containing respective statistic. Objects type sum_dist additional attribute storing boundary encoding (see also b_coding). reason returning subclasses data.frame provide custom plot() methods (e.g., plot.cafs). get rid subclass label additional attributes (.e., get just plain underlying data.frame, users can use unpack_obj()). type contains multiple character strings (.e., character vector) subclass list calculated statistics returned. list type stats_dm_list (easily create multiple panels using respective plot.stats_dm_list() method). print methods print.stats_dm() print.stats_dm_list() invisibly return supplied object x.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_stats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Statistics — calc_stats","text":"calc_stats generic function handle calculation different statistics/metrics supported object types. Per default, returns requested statistics/metrics.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_stats.html","id":"list-of-supported-statistics","dir":"Reference","previous_headings":"","what":"List of Supported Statistics","title":"Calculate Statistics — calc_stats","text":"Basic Statistics \"basic statistics\", refer summary mean standard deviation response times, including proportion response choices. Conditional Accuracy Function (CAFs) CAFs way quantify response accuracy speed. calculate CAFs, RTs (whether correct incorrect) first binned percent correct responses per bin calculated. calculating model-based CAFs, joint CDF combining pdf correct incorrect responses calculated. Afterwards, CDF separated even-spaced segments contribution pdf associated correct response relative joint CDF calculated. number bins can controlled passing argument n_bins. default 5. Quantiles observed response times, function stats::quantile used default settings. quantiles calcuated can controlled providing probabilites, probs, values \\([0, 1]\\). Default seq(0.1, 0.9, 0.1). Delta Functions Delta functions calculate difference quantiles two conditions mean: \\(Delta_i = Q_{,j} - Q_{,k}\\) \\(Avg_i = 0.5 \\cdot Q_{,j} + 0.5 \\cdot Q_{,k}\\) indicating quantile, j k two conditions. calculate delta functions, users specify: minuends: character vector, specifying condition(s) j. Must conds(drift_dm_obj). subtrahends: character vector, specifying condition(s) k. Must conds(drift_dm_obj) dvs: character, indicating quantile columns use. Default \"Quant_<u_label>\". multiple dvs provided, minuends subtrahends must length, matching occurs pairwise. case, one minuend/subtrahend specified, minuend subtrahend recycled necessary length. specifying probs possible (see Quantiles) Densities \"densities\", refer summary distribution observed predicted data. observed data, histogram values kernel density estimates provided. predicted data, model's predicted PDFs provided. Optional arguments : discr: numeric, band-width calculating histogram kernel density estimates. Defaults 0.015 seconds t_max: numeric, maximum time window calculating distribution summaries observe data. Defaults longest RT (observed data) maximum time domain model (preferred choice, possible). necessary, t_max slightly adjusted match discr. scale_mass: logical, relevant observed data available. TRUE, density masses scaled proportional number trials per condition. Fit Statistics Calculates Log-Likelihood, Akaike Bayesian Information Criteria, root-mean squared-error statistic. Optional arguments : k: numeric, penalizing AIC statistic (see also stats::AIC AIC.fits_ids_dm). n_bins, probs: numeric vectors, see section CAFs Quantiles weight_err: numeric scalar, determines CAFs quantiles weighted. Default 1.5.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_stats.html","id":"resampling","dir":"Reference","previous_headings":"","what":"Resampling","title":"Calculate Statistics — calc_stats","text":"resampling = TRUE, uncertainty interval provided via simulation. default number iterations R = 100, can changed passing optional argument R. resampling requested, returned stats_dm object contains column \"Estimate\", coding interval. interval width controlled via optional argument interval_level, single numeric value 0 1 (default: 0.95). interpretation interval depends specific situation (see ). Resampling Individual Level object drift_dm object (.e., single model created drift_dm()), synthetic data simulated model, synthetic data set requested statistic calculated. interval reflects range simulated statistics. determine number trials synthetic data set, dRiftDM either uses observed data attached model (available) optional argument n_sim (passed simulate_data()). Note n_sim must provided observed data available, n_sim always priority. object drift_dm object attached observed data, resampling also performed observed data. case, trials bootstrapped, bootstrap sample requested statistic calculated. object data.frame, fits_agg_dm, fits_ids_dm object, resampling performed individual level = \"individual\". models observed data, synthetic bootstrapped data sets generated described . Resampling Group Level Group-level resampling possible object data.frame (\"ID\" column), fits_agg_dm, fits_ids_dm object. request , set level = \"group\". Participants bootstrapped, bootstrapped sample aggregated statistic calculated. Interpretation Intervals level = \"group\", intervals represent bootstrapped confidence intervals level = \"individual\", intervals represent variability statistic data single participant resampled simulated model. Note objects type fits_agg_dm, contain mixture group- individual-level information, level argument affects resampling observed data. model , resampling always performed fitted model, way drift_dm object.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_stats.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate Statistics — calc_stats","text":"model's predicted density function integrates value less drift_dm_skip_if_contr_low(), means quantiles return values NA. Users can alter explicitly passing argument skip_if_contr_low calling calc_stats() (e.g., calc_stats(..., skip_if_contr_low = -Inf))","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Statistics — calc_stats","text":"","code":"# Example 1: Calculate CAFs and Quantiles from a model --------------------- # get a model for demonstration purpose a_model <- ssp_dm(dx = .0025, dt = .0025, t_max = 2) # and then calculate cafs and quantiles some_stats <- calc_stats(a_model, type = c(\"cafs\", \"quantiles\")) print(some_stats) #> Element 1, contains cafs #>  #>    Source   Cond Bin P_corr #> 1    pred   comp   1  0.981 #> 2    pred   comp   2  0.981 #> 3    pred   comp   3  0.981 #> 4    pred   comp   4  0.981 #> 5    pred   comp   5  0.981 #> 6    pred incomp   1  0.678 #> 7    pred incomp   2  0.926 #> 8    pred incomp   3  0.960 #> 9    pred incomp   4  0.973 #> 10   pred incomp   5  0.979 #>  #>  #> Element 2, contains quantiles #>  #>    Source   Cond Prob Quant_corr Quant_err #> 1    pred   comp  0.1      0.362     0.362 #> 2    pred   comp  0.2      0.383     0.383 #> 3    pred   comp  0.3      0.403     0.403 #> 4    pred   comp  0.4      0.422     0.422 #> 5    pred   comp  0.5      0.444     0.444 #> 6    pred   comp  0.6      0.470     0.470 #> 7    pred   comp  0.7      0.503     0.503 #> 8    pred   comp  0.8      0.549     0.549 #> 9    pred   comp  0.9      0.627     0.627 #> 10   pred incomp  0.1      0.408     0.344 #> ... #>  #> (extract the list's elements as usual, e.g., with $cafs)  # Example 2: Calculate a Delta Function from a data.frame ------------------ # get a data set for demonstration purpose some_data <- ulrich_simon_data conds(some_data) # relevant for minuends and subtrahends #> [1] \"incomp\" \"comp\"   some_stats <- calc_stats(   a_model,   type = \"delta_funs\",   minuends = \"incomp\",   subtrahends = \"comp\" ) print(some_stats, print_rows = 5) #> Type of Statistic: delta_funs #>  #>   Source Prob Quant_corr_comp Quant_corr_incomp Delta_incomp_comp #> 1   pred  0.1           0.362             0.408             0.045 #> 2   pred  0.2           0.383             0.437             0.053 #> 3   pred  0.3           0.403             0.462             0.060 #> 4   pred  0.4           0.422             0.487             0.065 #> 5   pred  0.5           0.444             0.514             0.069 #>   Avg_incomp_comp #> 1           0.385 #> 2           0.410 #> 3           0.432 #> 4           0.455 #> 5           0.479 #> ... #>  #> (access the data.frame's columns/rows as usual)   # Example 3: Calculate Quantiles from a fits_ids_dm object ----------------- # get an auxiliary fits_ids_dm object all_fits <- get_example_fits(\"fits_ids_dm\") some_stats <- calc_stats(all_fits, type = \"quantiles\") print(some_stats, print_rows = 5) # note the ID column #> Type of Statistic: quantiles #>  #>   ID Source Cond Prob Quant_corr Quant_err #> 1  1    obs comp  0.1      0.335     0.361 #> 2  1    obs comp  0.2      0.368     0.388 #> 3  1    obs comp  0.3      0.385     0.415 #> 4  1    obs comp  0.4      0.385     0.441 #> 5  1    obs comp  0.5      0.401     0.468 #> ... #>  #> (access the data.frame's columns/rows as usual)  # one can also request that the statistics are averaged across individuals print(   calc_stats(all_fits, type = \"quantiles\", average = TRUE) ) #> Warning: The `average` argument of `calc_stats.data.frame()` is deprecated as of dRiftDM #> 0.3.0. #> ℹ Please use the `level` argument instead. #> Type of Statistic: quantiles #>  #>    Source   Cond Prob Quant_corr Quant_err #> 1     obs   comp  0.1      0.324     0.311 #> 2     obs   comp  0.2      0.346     0.330 #> 3     obs   comp  0.3      0.362     0.348 #> 4     obs   comp  0.4      0.368     0.365 #> 5     obs   comp  0.5      0.385     0.381 #> 6     obs   comp  0.6      0.396     0.383 #> 7     obs   comp  0.7      0.407     0.386 #> 8     obs   comp  0.8      0.424     0.391 #> 9     obs   comp  0.9      0.470     0.396 #> 10    obs incomp  0.1      0.351     0.311 #> ... #>  #> (access the data.frame's columns/rows as usual)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_stats_pred_obs.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Statistics for Model Prediction and/or Observed Data — calc_stats_pred_obs","title":"Calculate Statistics for Model Prediction and/or Observed Data — calc_stats_pred_obs","text":"function derives statistics can calculated model predictions /observed data. However, calculate , rather calls respective backend functions. Supported statistics currently include: Basic Summary Statistics (.e., means response percentages calc_basic_stats()) Conditional Accuracy Functions (CAFs; calc_cafs()) Quantiles (calc_quantiles()) Delta Functions (calc_delta_funs()). Density Estimates (calc_dens()).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_stats_pred_obs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Statistics for Model Prediction and/or Observed Data — calc_stats_pred_obs","text":"","code":"calc_stats_pred_obs(type, b_coding, conds, ..., scale_mass = FALSE)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_stats_pred_obs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Statistics for Model Prediction and/or Observed Data — calc_stats_pred_obs","text":"type character string, specifying type statistic calculate. Available options \"basic_stats\", \"cafs\", \"quantiles\", \"delta_funs\", \"densities\". b_coding list boundary coding (see b_coding). conds character vector, specifying conditions include calculations (used labeling subsetting model PDFs observed data). ... Additional parameters passed specific statistic calculation function (see Details). scale_mass single logical, relevant density estimation. TRUE, PDF masses scaled proportional number trials per condition.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_stats_pred_obs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Statistics for Model Prediction and/or Observed Data — calc_stats_pred_obs","text":"data frame calculated statistic across conds (ordered according Source).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/calc_stats_pred_obs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Statistics for Model Prediction and/or Observed Data — calc_stats_pred_obs","text":"calling function arguments all_rts_u/all_rts_l /all_pdfs must always specified (see re_evaluate_model, obs_data). Otherwise, backend functions work properly. arguments : CAFS: n_bins controls number bins, default 5. Quantiles Delta Functions: probs controls quantiles calculate. Default seq(0.1, 0.9, 0.1) (see drift_dm_default_probs()). basic summary satistics, Quantiles, Delta Function: skip_if_contr_low controls quantiles means calculated PDFs small contribution (see also drift_dm_skip_if_contr_low()). densities: discr controls bin width observed data. Default 0.015 seconds function gets called calc_stats()","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/call_log_posterior_m.html","id":null,"dir":"Reference","previous_headings":"","what":"Metropolis Acceptance Step for Vectorized MCMC Sampling — call_log_posterior_m","title":"Metropolis Acceptance Step for Vectorized MCMC Sampling — call_log_posterior_m","text":"internal function computes Metropolis acceptance decision set MCMC proposals, using either hierarchical non-hierarchical posterior evaluation. returns updated log-posterior log-likelihood values, well logical vector indicating accepted proposals.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/call_log_posterior_m.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metropolis Acceptance Step for Vectorized MCMC Sampling — call_log_posterior_m","text":"","code":"call_log_posterior_m(   proposal_mat,   prev_prms_mat,   prev_pis,   prev_lls,   level,   re_eval,   ... )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/call_log_posterior_m.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metropolis Acceptance Step for Vectorized MCMC Sampling — call_log_posterior_m","text":"proposal_mat numeric matrix proposed parameter values. column corresponds one chain; rows represent parameters. prev_prms_mat numeric matrix current (previous) parameter values. Must dimensions proposal_mat. prev_pis numeric vector current log-posterior values chain. prev_lls numeric vector current log-likelihood values chain. level character string specifying sampling level, either \"lower\", \"hyper\", \"none\". Determines whether call log_posterior_lower() log_posterior_hyper(). re_eval logical. TRUE, log-posterior log-likelihood current parameters re-evaluated. ... Additional arguments passed log_posterior_lower() log_posterior_hyper(), depending level.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/call_log_posterior_m.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metropolis Acceptance Step for Vectorized MCMC Sampling — call_log_posterior_m","text":"list three elements: pis numeric vector updated log-posterior values. lls numeric vector updated log-likelihood values. accept logical vector length equal number chains, indicating proposals accepted.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/call_log_posterior_m.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Metropolis Acceptance Step for Vectorized MCMC Sampling — call_log_posterior_m","text":"function implements vectorized Metropolis acceptance step multiple MCMC chains simultaneously. posterior calculated using either log_posterior_lower() subject-level parameters log_posterior_hyper() group-level parameters. Log-posterior log-likelihood values updated proposals accepted. cases proposals yield invalid posteriors (.e., NA), automatically rejected.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/check_b_coding.html","id":null,"dir":"Reference","previous_headings":"","what":"Check a B_Coding — check_b_coding","title":"Check a B_Coding — check_b_coding","text":"Checks list satisfies requirements considered valid b_coding","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/check_b_coding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check a B_Coding — check_b_coding","text":"","code":"check_b_coding(b_coding)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/check_b_coding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check a B_Coding — check_b_coding","text":"b_coding named list","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/check_b_coding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check a B_Coding — check_b_coding","text":"unmodified list convenience","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/check_b_coding.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check a B_Coding — check_b_coding","text":"Checks ... input list list length three provides names \"column\", \"u_name_value\", \"l_name_value\", b_coding$column provides single string b_coding$u_name_value b_coding$l_name_value provides single named value type character numeric, type","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/check_digit_larger_0.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks if a variable/vector of length 1 is a number > 0 or 0/expression — check_digit_larger_0","title":"Checks if a variable/vector of length 1 is a number > 0 or 0/expression — check_digit_larger_0","text":"assumed x either digit expression","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/check_digit_larger_0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks if a variable/vector of length 1 is a number > 0 or 0/expression — check_digit_larger_0","text":"","code":"check_digit_larger_0(x)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/check_digit_larger_0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks if a variable/vector of length 1 is a number > 0 or 0/expression — check_digit_larger_0","text":"x vector length 1","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/check_digit_larger_0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks if a variable/vector of length 1 is a number > 0 or 0/expression — check_digit_larger_0","text":"single logical","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/check_discretization.html","id":null,"dir":"Reference","previous_headings":"","what":"Check time/space discretization via reference comparison — check_discretization","title":"Check time/space discretization via reference comparison — check_discretization","text":"check_discretization() helps choose check time (dt) space (dx) discretization settings. computes high-precision reference solution model's PDFs dt_ref/dx_ref, compares reference PDFs discretization settings supplied object, using Hellinger distance per condition. Smaller distances indicate closer agreement reference — .e., sufficiently fine grid. yet overall officially published recommendations large Hellinger distance can without affecting model precision, might even depend model . Based preliminary simulations recommend trying keep Hellinger Distance 5 percent average.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/check_discretization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check time/space discretization via reference comparison — check_discretization","text":"","code":"check_discretization(object, ...)  # S3 method for class 'drift_dm' check_discretization(   object,   ...,   dt_ref = 0.001,   dx_ref = 0.001,   round_digits = 5 )  # S3 method for class 'fits_ids_dm' check_discretization(object, ...)  # S3 method for class 'fits_agg_dm' check_discretization(object, ...)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/check_discretization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check time/space discretization via reference comparison — check_discretization","text":"object drift_dm, fits_agg_dm, fits_ids_dm object. (latter two returned estimate_dm()) ... arguments passed forward respective method. dt_ref, dx_ref numeric scalars, providing fine time space step size reference solution. Defaults 0.001. round_digits number decimal places final Hellinger distances rounded (default: 5).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/check_discretization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check time/space discretization via reference comparison — check_discretization","text":"named numeric vector Hellinger distances (one per condition) object type drift_dm fits_agg_dm. data.frame Hellinger distances across IDs conditions object type fits_ids_dm. Hellinger distances [0, 1], 0 means identical reference.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/check_discretization.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check time/space discretization via reference comparison — check_discretization","text":"hood, condition, concatenate lower- upper- boundary PDFs (pdf_l, pdf_u), interpolate model PDFs time space matching reference PDFs, compute Hellinger distance: \\(H(p,q) = \\sqrt{1 - \\int \\sqrt{p(t)\\,q(t)}\\,dt}\\) yet overall, officially published recommendations large Hellinger distance can without affecting model precision, may even depend specific model. Based preliminary simulations, recommend trying keep average Hellinger distance 5\\ reference discretizations (dt_ref/dx_ref) must least fine object's current discretization settings (dt_model/dx_model). dt_model < dt_ref dx_model < dx_ref, error raised “reference” finest solution.","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/check_discretization.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check time/space discretization via reference comparison — check_discretization","text":"","code":"# Example: my_model <- ratcliff_dm()  # Assess current (dt=0.0075, dx=0.02) against a fine reference: check_discretization(my_model) #>   null  #> 0.0165   # If distances are near zero across conditions, the current grid is adequate."},{"path":"https://bucky2177.github.io/dRiftDM/reference/check_if_named_numeric_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if Object is a Named Numeric Vector — check_if_named_numeric_vector","title":"Check if Object is a Named Numeric Vector — check_if_named_numeric_vector","text":"Validates object named numeric vector specified attributes. Optionally checks specific names, length, restrictions label characters.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/check_if_named_numeric_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if Object is a Named Numeric Vector — check_if_named_numeric_vector","text":"","code":"check_if_named_numeric_vector(   x,   var_name,   labels = NULL,   length = NULL,   allow_non_word_chars = FALSE )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/check_if_named_numeric_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if Object is a Named Numeric Vector — check_if_named_numeric_vector","text":"x numeric vector, expected named. var_name character, name variable display error messages. labels character vector, optional, specifying valid names x. provided, names x must match labels. length integer, optional, specifying exact required length x. allow_non_word_chars logical, whether permit non-word characters names (default FALSE).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/check_if_named_numeric_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if Object is a Named Numeric Vector — check_if_named_numeric_vector","text":"Throws error conditions met. checks pass, output returned.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/check_if_named_numeric_vector.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if Object is a Named Numeric Vector — check_if_named_numeric_vector","text":"Checks : Numeric type x non-zero length Required length, specified Unique, non-empty names entry x Match names x labels, labels specified Absence NA Inf values x Optional absence non-word names allow_non_word_chars FALSE","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/check_internal_list.html","id":null,"dir":"Reference","previous_headings":"","what":"checks if all entries of internal_list are an expression or integer. Throws an error if not (internal docu) — check_internal_list","title":"checks if all entries of internal_list are an expression or integer. Throws an error if not (internal docu) — check_internal_list","text":"Checks also entries parameter condition","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/check_internal_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"checks if all entries of internal_list are an expression or integer. Throws an error if not (internal docu) — check_internal_list","text":"","code":"check_internal_list(internal_list, prm_names, cond_names)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/check_internal_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"checks if all entries of internal_list are an expression or integer. Throws an error if not (internal docu) — check_internal_list","text":"internal_list list, referring (linear) internal list flex_prms object. prm_names expected parameter flex_prms object cond_names expected conditions flex_prms object","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/check_internal_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"checks if all entries of internal_list are an expression or integer. Throws an error if not (internal docu) — check_internal_list","text":"internal list convenience","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/check_reduce_raw_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Check and Reduce the Observed Data — check_reduce_raw_data","title":"Check and Reduce the Observed Data — check_reduce_raw_data","text":"Checks data set considered \"observed data set\". Used internals dRiftDM. calling function, unncessary column names stripped away.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/check_reduce_raw_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check and Reduce the Observed Data — check_reduce_raw_data","text":"","code":"check_reduce_raw_data(obs_data, b_coding_column, u_value, l_value)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/check_reduce_raw_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check and Reduce the Observed Data — check_reduce_raw_data","text":"obs_data data.frame b_coding_column single string, indicating column obs_data indicates RT corresponds boundaries. u_value, l_value value within b_coding_column column specifies upper/lower boundary","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/check_reduce_raw_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check and Reduce the Observed Data — check_reduce_raw_data","text":"obs_data convenience (edits listed Details).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/check_reduce_raw_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check and Reduce the Observed Data — check_reduce_raw_data","text":"Checks: obs_data data.frame \"RT\", b_coding_column, \"Cond\" column present IDs present, ID values condition. time unused factor levels dropped drop_levels_ID_column columns , data set reduced relevant ones missing Values, drops rows missing values \"Cond\" type character, casts character RT type numeric, casts numeric RTs >= 0 values b_coding_column match u_value l_value (casts column necessary) b_coding_column 1 2 unique values","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/coef.drift_dm.html","id":null,"dir":"Reference","previous_headings":"","what":"Access Coefficients of a Model — coef<-","title":"Access Coefficients of a Model — coef<-","text":"Extract set coefficients/parameters objects supported dRiftDM.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/coef.drift_dm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access Coefficients of a Model — coef<-","text":"","code":"coef(object, ...) <- value  # S3 method for class 'drift_dm' coef(object, ..., eval_model = FALSE) <- value  # S3 method for class 'drift_dm' coef(object, ..., select_unique = TRUE, select_custom_prms = TRUE)  # S3 method for class 'fits_agg_dm' coef(object, ...)  # S3 method for class 'fits_ids_dm' coef(object, ...)  # S3 method for class 'mcmc_dm' coef(object, ..., .f = mean, id = NULL)  # S3 method for class 'coefs_dm' print(   x,   ...,   round_digits = drift_dm_default_rounding(),   print_rows = 10,   some = FALSE,   show_header = TRUE,   show_note = TRUE )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/coef.drift_dm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access Coefficients of a Model — coef<-","text":"object object type drift_dm, fits_agg_dm, fits_ids_dm (see also estimate_dm()), mcmc_dm. ... additional arguments passed forward (coef.drift_dm() objects type fits_agg_dm; .f objects type mcmc_dm. value numerical, vector valid values update model's parameters. Must match number (unique free) parameters. eval_model logical, indicating model re-evaluated updating parameters (see re_evaluate_model). Default FALSE. select_unique logical, indicating parameters shall returned considered unique (e.g., parameter set identical across three conditions, parameter returned ). Default TRUE. also return parameters estimated. argument currently supported objects type mcmc_dm. select_custom_prms logical, indicating custom parameters shall returned well. effect select_unique = FALSE. argument currently supported objects type mcmc_dm. .f function applied parameter chain. Must either return single value vector (always length). Default mean (.e., mean function). id optional numeric character vector specifying IDs participants summarize samples. applicable model estimated hierarchically. Use id = NA shorthand summarize samples individuals chain object. x object type coefs_dm, returned function coef() supplied fits_ids_dm object. round_digits integer, controls number digits shown. Default 3. print_rows integer, controls number rows shown. logical. TRUE, subset randomly sampled rows shown. show_header logical. TRUE, header specifying type statistic displayed. show_note logical. TRUE, footnote  displayed indicating underlying data.frame can accessed usual.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/coef.drift_dm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access Coefficients of a Model — coef<-","text":"objects type drift_dm, coefs() returns either named numeric vector select_unique = TRUE, matrix select_unique = FALSE. select_custom_prms = TRUE, custom parameters added matrix. objects type fits_ids_dm, coefs() returns data.frame. select_unique = TRUE, columns (unique, free) parameters, together column coding IDs. select_unique = FALSE, columns parameters listed columns prms_matrix (see drift_dm), together columns coding conditions IDs. select_custom_prms = TRUE, data.frame also contain columns custom parameters. returned data.frame class label coefs_dm easily plot histograms parameter (see hist.coefs_dm). objects type fits_agg_dm, returns coef.drift_dm() (.e., calling coef() object type drift_dm) objects type mcmc_dm, return type depends model structure .f output: model non-hierarchical id single value (NA), function returns either vector matrix, depending whether .f returns single value vector. hierarchical case, id vector NA, function returns data.frame. .f returns single value, data.frame contain one row per participant (ID column one column per parameter). .f returns vector, data.frame include additional column .f_out, coding output .f long format.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/coef.drift_dm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Access Coefficients of a Model — coef<-","text":"coef.*() methods generic stats::coef() function; coefs<-() generic replacement function, currently supporting objects type drift_dm. argument value supplied coefs<-() function must match vector returned coef(<object>). possible update just part (unique) parameters. Whenever argument select_unique TRUE, dRiftDM tries provide unique parameter labels.","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/coef.drift_dm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access Coefficients of a Model — coef<-","text":"","code":"# get a pre-built model and a data set for demonstration purpose # (when creating the model, set the discretization to reasonable values) a_model <- dmc_dm(t_max = 1.5, dx = .01, dt = .005) coef(a_model) # gives the free and unique parameters #>        muc          b    non_dec sd_non_dec        tau          A      alpha  #>       4.00       0.60       0.30       0.02       0.04       0.10       4.00  coef(a_model, select_unique = FALSE) # gives the entire parameter matrix #>        muc   b non_dec sd_non_dec  tau a    A alpha peak_l #> comp     4 0.6     0.3       0.02 0.04 2  0.1     4   0.04 #> incomp   4 0.6     0.3       0.02 0.04 2 -0.1     4   0.04"},{"path":"https://bucky2177.github.io/dRiftDM/reference/comp_funs.html","id":null,"dir":"Reference","previous_headings":"","what":"The Component Functions of A Model — comp_funs<-","title":"The Component Functions of A Model — comp_funs<-","text":"Functions get set \"component functions\" object. component functions list functions providing drift rate, boundary, starting point distribution, non-decision time distribution heart package shape model's behavior.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/comp_funs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Component Functions of A Model — comp_funs<-","text":"","code":"comp_funs(object, ...) <- value  # S3 method for class 'drift_dm' comp_funs(object, ..., eval_model = FALSE) <- value  comp_funs(object, ...)  # S3 method for class 'drift_dm' comp_funs(object, ...)  # S3 method for class 'fits_ids_dm' comp_funs(object, ...)  # S3 method for class 'fits_agg_dm' comp_funs(object, ...)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/comp_funs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Component Functions of A Model — comp_funs<-","text":"object object type drift_dm, fits_ids_dm, fits_agg_dm (see estimate_dm()). ... additional arguments passed specific method. value named list provides component functions set (see Details) eval_model logical, indicating model re-evaluated updating component funtions (see re_evaluate_model). Default FALSE.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/comp_funs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Component Functions of A Model — comp_funs<-","text":"comp_funs() list component functions. comp_funs<-() updated drift_dm object.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/comp_funs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Component Functions of A Model — comp_funs<-","text":"comp_funs() generic accessor function, comp_funs<-() generic replacement function. default methods get set \"component functions\". component functions list functions, following names (see also vignette(\"customize_ddms\", \"dRiftDM\") examples): mu_fun mu_int_fun, provide drift rate integral, respectively, across time space. x_fun provides distribution starting point across evidence space. b_fun dt_b_fun provide values upper decision boundary derivative, respectively, across time space. assumed boundaries symmetric. nt_fun provides distribution non-decision component across time space. listed functions stored list comp_funs respective model (see also drift_dm()). component function must take model's parameters (.e., one row prms_matrix), parameters deriving PDFs, time evidence space, condition, list optional values arguments. arguments provided values dRiftDM internally calls . order work dRiftDM, mu_fun, mu_int_fun, b_fun, dt_b_fun, nt_fun must following declaration: my_fun = function(prms_model, prms_solve, t_vec, one_cond, ddm_opts). , prms_model one row prms_matrix, prms_solve parameters relevant deriving PDFs, t_vec time space, going 0 t_max length nt + 1 (see drift_dm), one_cond single character string, indicating current condition. Finally dmm_opts may contain additional values. function must return numeric vector length t_vec. mu_fun, mu_int_fun, b_fun, dt_b_fun returned values provide respective boundary/drift rate (derivative/integral) every time step \\(t\\). nt_fun returned values provide density non-decision time across time space (get convoluted pdfs solving model) order work dRiftDM, x_fun must following declaration: my_fun = function(prms_model, prms_solve, x_vec, one_cond, ddm_opts). , x_vec evidence space, going -1 1 length nx + 1 (see drift_dm). function must return numeric vector length x_vec, providing density values starting points across evidence space.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/comp_funs.html","id":"drift-rate-and-its-integral-","dir":"Reference","previous_headings":"","what":"Drift rate and its integral:","title":"The Component Functions of A Model — comp_funs<-","text":"drift rate first derivative expected time-course diffusion process. instance, assume diffusion process \\(X\\) linear slope \\(v\\)... $$E(X) = v \\cdot t$$ ...drift rate every time step \\(t\\) constant \\(v\\), obtained taking derivative expected time-course respect \\(t\\): $$\\mu(t) = v$$ Conversely, integral drift rate identical expected time-course: $$\\mu_{int}(t) = v \\cdot t$$ drift rate mu_fun, default function calling drift_dm() numeric vector containing number \\(3\\). integral counterpart mu_int_fun return numeric vector containing values t_vec*3.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/comp_funs.html","id":"starting-point-distribution-","dir":"Reference","previous_headings":"","what":"Starting Point Distribution:","title":"The Component Functions of A Model — comp_funs<-","text":"starting point diffusion model refers initial value taken evidence accumulation process time \\(t=0\\). PDF evidence space. default function calling drift_dm() function returning dirac delta zero, meaning every potential diffusion process starts 0.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/comp_funs.html","id":"boundary-","dir":"Reference","previous_headings":"","what":"Boundary:","title":"The Component Functions of A Model — comp_funs<-","text":"Boundary refers values absorbing boundaries every time step \\(t\\) diffusion model. cases, constant. instance: $$b(t) = b$$ case, derivative respect \\(t\\) 0. default function calling drift_dm() function b_fun returning  numeric vector length length(t_vec) containing number \\(0.5\\). counterpart dt_b return numeric vector length containing derivative, namely, 0.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/comp_funs.html","id":"non-decision-time-","dir":"Reference","previous_headings":"","what":"Non-Decision Time:","title":"The Component Functions of A Model — comp_funs<-","text":"non-decision time refers additional time-requirement. distribution across time space convoluted PDFs derived diffusion process. psychology, non-decision time captures time-requirements outside central decision process, stimulus perception motor execution. default function calling drift_dm() returns dirac delta  \\(t = 0.3\\).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/comp_funs.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"The Component Functions of A Model — comp_funs<-","text":"replacement function drift_dm objects. replacing component functions model fitted (.e., fits_ids_dm object) make sense.","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/comp_funs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Component Functions of A Model — comp_funs<-","text":"","code":"# get a pre-built model for demonstration my_model <- ratcliff_dm() names(comp_funs(my_model)) #> [1] \"mu_fun\"     \"mu_int_fun\" \"x_fun\"      \"b_fun\"      \"dt_b_fun\"   #> [6] \"nt_fun\"      # direct replacement (see customize_ddms for a more information on # how to write custom component functions) # 1. Choose a uniform non-decision time from the pre-built component_shelf() nt_uniform <- component_shelf()$nt_uniform # swap it in comp_funs(my_model)[[\"nt_fun\"]] <- nt_uniform  # now update the flex_prms object to ensure that this model has the required # parameters prms <- c(muc = 3, b = 0.6, non_dec = 0.3, range_non_dec = 0.05) conds <- \"null\" new_flex_prms <- flex_prms(prms, conds = conds) flex_prms(my_model) <- new_flex_prms  # accessor method also available for fits_ids_dm objects # (see estimate_model_ids) # get an exemplary fits_ids_dm object fits <- get_example_fits(\"fits_ids_dm\") names(comp_funs(fits)) #> [1] \"mu_fun\"     \"mu_int_fun\" \"x_fun\"      \"b_fun\"      \"dt_b_fun\"   #> [6] \"nt_fun\""},{"path":"https://bucky2177.github.io/dRiftDM/reference/comp_vals.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate all Component Functions — comp_vals","title":"Evaluate all Component Functions — comp_vals","text":"Gets/calculates values provided component functions drift_dm object","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/comp_vals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate all Component Functions — comp_vals","text":"","code":"comp_vals(   drift_dm_obj,   x_vec = NULL,   t_vec = NULL,   nt = NULL,   dt = NULL,   nx = NULL,   dx = NULL,   prms_solve = NULL,   solver = NULL,   prms_matrix = NULL )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/comp_vals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate all Component Functions — comp_vals","text":"drift_dm_obj object type drift_dm x_vec optional, discretized evidence space t_vec optional, discretized time space nx, nt, dx, dt optional, steps step sizes space prms_solve optional, vector solver settings solver optional, string controlling component values evaluated prms_matrix optional, matrix parameters","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/comp_vals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate all Component Functions — comp_vals","text":"solver \"kfe\", named list entries \"mu_vals\", \"x_vals\", \"b_vals\", \"dt_b_vals\", \"nt_vals\". solver \"im_zero\", returned list also contain \"mu_int_vals\".","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/comp_vals.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Evaluate all Component Functions — comp_vals","text":"arguments optional, can extracted model. However, supplying faster creating .","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/component_shelf.html","id":null,"dir":"Reference","previous_headings":"","what":"Diffusion Model Components — component_shelf","title":"Diffusion Model Components — component_shelf","text":"function meant convenient way access pre-built model component functions.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/component_shelf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diffusion Model Components — component_shelf","text":"","code":"component_shelf()"},{"path":"https://bucky2177.github.io/dRiftDM/reference/component_shelf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Diffusion Model Components — component_shelf","text":"list respective functions; entry/function can accessed \"name\" (see Example Details).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/component_shelf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Diffusion Model Components — component_shelf","text":"function provides following functions: mu_constant, provides component function constant drift rate parameter muc. mu_dmc, provides drift rate superimposed diffusion process DMC. Necessary parameters muc (drift rate controlled process), (shape..), (amplitude...), tau (scale automatic process). mu_ssp, provides drift rate SSP. Necessary parameters p (perceptual input flankers target), sd_0 (initial spotlight width), r (shrinking rate spotlight) 'sign' (auxiliary parameter controlling contribution flanker stimuli). Note mu_int_ssp exists. mu_int_constant, provides complementary integral mu_constant. mu_int_dmc, provides complementary integral mu_dmc. x_dirac_0, provides dirac delta starting point centered boundaries (parameter required). x_uniform, provides uniform distribution start point centered boundaries. Requires parameter range_start (0 2). x_beta, provides function component symmetric beta-shaped starting point distribution parameter alpha. b_constant, provides constant boundary parameter b. b_hyperbol, provides collapsing boundary terms hyperbolic ratio function parameters b0 initial value (upper) boundary, kappa size collapse, t05 point time boundary collapsed half. b_weibull, provides collapsing boundary terms Weibull distribution parameters b0 initial value (upper) boundary, lambda controlling time collapse, k shape collapse, kappa size collapse. dt_b_constant, first derivative b_constant. dt_b_hyperbol, first derivative b_hyperbol. nt_constant, provides constant non-decision time parameter non_dec. nt_uniform, provides uniform distribution non-decision time. Requires parameters non_dec range_non_dec. nt_truncated_normal, provides component function normally distributed non-decision time parameters non_dec, sd_non_dec. Distribution truncated \\([0, t_{max}]\\). dummy_t function accepts required arguments mu_fun mu_int_fun throws error. Might come handy user require integral drift rate. See vignette(\"customize_ddms\", \"dRiftDM\") information set/modify/customize components diffusion model.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/component_shelf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Diffusion Model Components — component_shelf","text":"","code":"pre_built_functions <- component_shelf() names(pre_built_functions) #>  [1] \"mu_constant\"         \"mu_dmc\"              \"mu_ssp\"              #>  [4] \"mu_int_constant\"     \"mu_int_dmc\"          \"x_dirac_0\"           #>  [7] \"x_beta\"              \"x_uniform\"           \"b_constant\"          #> [10] \"b_hyperbol\"          \"b_weibull\"           \"dt_b_constant\"       #> [13] \"dt_b_hyperbol\"       \"dt_b_weibull\"        \"nt_constant\"         #> [16] \"nt_uniform\"          \"nt_truncated_normal\" \"dummy_t\""},{"path":"https://bucky2177.github.io/dRiftDM/reference/conds.html","id":null,"dir":"Reference","previous_headings":"","what":"The Conditions of an Object — conds<-","title":"The Conditions of an Object — conds<-","text":"Extract conditions (supported) object.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/conds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Conditions of an Object — conds<-","text":"","code":"conds(object, ...) <- value  # S3 method for class 'drift_dm' conds(object, ..., eval_model = FALSE, messaging = TRUE) <- value  conds(object, ...)  # S3 method for class 'drift_dm' conds(object, ...)  # S3 method for class 'fits_ids_dm' conds(object, ...)  # S3 method for class 'fits_agg_dm' conds(object, ...)  # S3 method for class 'data.frame' conds(object, ...)  # S3 method for class 'traces_dm_list' conds(object, ...)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/conds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Conditions of an Object — conds<-","text":"object R object, see details ... additional arguments passed forward. value character vector, providing labels model's new conditions. eval_model logical, indicating model re-evaluated updating conditions (see re_evaluate_model). Default FALSE. messaging logical, indicating messages shall displayed .","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/conds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Conditions of an Object — conds<-","text":"conds() NULL character vector conditions. NULL given object conditions (e.g., data.frame Cond column). conds<-() updated drift_dm object.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/conds.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Conditions of an Object — conds<-","text":"conds() generic accessor function conds<-() generic replacement function. replacement method currently supports drift_dm objects. default methods get set conditions object. replacing conditions drift_dm object, new flex_prms object created set model, resetting parameter specifications setting parameter values previously first condition. addition, data attached model, data removed. meaningful way dRiftDM know model behave newly introduced condition(s), new conditions relate old ones. Messages reminding user behavior displayed per default.","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/conds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Conditions of an Object — conds<-","text":"","code":"# get a pre-built model to demonstrate the conds() function my_model <- dmc_dm() conds(my_model) #> [1] \"comp\"   \"incomp\"  # accessor functions also work with other object types provided by dRiftDM # (simulated traces; see the documentation of the respective function) some_traces <- simulate_traces(my_model, k = 1) conds(some_traces) #> [1] \"comp\"   \"incomp\"  # get an exemplary fits_ids_dm object (see estimate_model_ids) fits <- get_example_fits(\"fits_ids_dm\") conds(fits) #> [1] \"comp\"   \"incomp\"  # also works with data.frames that have a \"Cond\" column conds(dmc_synth_data) #> [1] \"comp\"   \"incomp\""},{"path":"https://bucky2177.github.io/dRiftDM/reference/copy_class_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy Class Attributes from One Object to Another — copy_class_attributes","title":"Copy Class Attributes from One Object to Another — copy_class_attributes","text":"function transfers class attributes old object new object, ensuring new inherits class structure missing attributes old. primary purpose enforce class consistency restore lost attributes modifying combining objects. used internals package exported.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/copy_class_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy Class Attributes from One Object to Another — copy_class_attributes","text":"","code":"copy_class_attributes(old, new)  # S3 method for class 'stats_dm' copy_class_attributes(old, new)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/copy_class_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy Class Attributes from One Object to Another — copy_class_attributes","text":"old source object class attributes copied. new target object class attributes assigned.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/copy_class_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy Class Attributes from One Object to Another — copy_class_attributes","text":"modified new object attributes class old.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/copy_class_attributes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Copy Class Attributes from One Object to Another — copy_class_attributes","text":"function assumes class attributes new can found old. Note also, order attributes ensured.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/cost_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Access/Replace the Cost Function Label and Access the Cost Function Value — cost_function<-","title":"Access/Replace the Cost Function Label and Access the Cost Function Value — cost_function<-","text":"Functions access/replace cost function label dRiftDM object access current cost function value. cost function label codes cost function used estimation (e.g., negative log-likelihood). cost function value indicates current value cost function given current set parameters data.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/cost_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access/Replace the Cost Function Label and Access the Cost Function Value — cost_function<-","text":"","code":"cost_function(object, ...) <- value  # S3 method for class 'drift_dm' cost_function(object, ..., eval_model = FALSE) <- value  cost_function(object, ...)  # S3 method for class 'drift_dm' cost_function(object, ...)  # S3 method for class 'fits_ids_dm' cost_function(object, ...)  # S3 method for class 'fits_agg_dm' cost_function(object, ...)  cost_value(object, ...)  # S3 method for class 'drift_dm' cost_value(object, ...)  # S3 method for class 'fits_ids_dm' cost_value(object, ...)  # S3 method for class 'fits_agg_dm' cost_value(object, ...)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/cost_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access/Replace the Cost Function Label and Access the Cost Function Value — cost_function<-","text":"object object type drift_dm, fits_ids_dm, fits_agg_dm (see estimate_dm()). ... additional arguments passed update_stats_agg() setting cost function label. value character string, providing cost function label (options \"neg_log_like\" \"rmse\") eval_model logical, indicating model re-evaluated updating conditions (see re_evaluate_model). Default FALSE.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/cost_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access/Replace the Cost Function Label and Access the Cost Function Value — cost_function<-","text":"cost_function() returns single character string, specifying used cost function cost_function<-() returns model object updated cost function. cost_value() returns single numeric object type drift_dm fits_agg_dm. data attached object type drift_dm, function returns NULL. object type fits_ids_dm, function returns data.frame cost values across participants.","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/cost_function.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access/Replace the Cost Function Label and Access the Cost Function Value — cost_function<-","text":"","code":"# get a pre-built model for demonstration purpose a_model <- ratcliff_dm(dx = .01, dt = .01, obs_data = ratcliff_synth_data) cost_function(a_model) #> [1] \"neg_log_like\" cost_value(a_model) #> [1] -193.4247"},{"path":"https://bucky2177.github.io/dRiftDM/reference/count_unique_prms_one_internal_entry.html","id":null,"dir":"Reference","previous_headings":"","what":"Count the number of digits > 0 — count_unique_prms_one_internal_entry","title":"Count the number of digits > 0 — count_unique_prms_one_internal_entry","text":"function takes one entry internal_list (.e., conditions one parameter) counts often unique digits > 0","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/count_unique_prms_one_internal_entry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count the number of digits > 0 — count_unique_prms_one_internal_entry","text":"","code":"count_unique_prms_one_internal_entry(one_internal_entry)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/count_unique_prms_one_internal_entry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count the number of digits > 0 — count_unique_prms_one_internal_entry","text":"one_internal_entry internal_list[[\"\"]]","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/count_unique_prms_one_internal_entry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count the number of digits > 0 — count_unique_prms_one_internal_entry","text":"integer number","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/create_matrix_smart.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a matrix for lower and upper — create_matrix_smart","title":"Create a matrix for lower and upper — create_matrix_smart","text":"Outsourced, deep inside package function avoid large nesting","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/create_matrix_smart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a matrix for lower and upper — create_matrix_smart","text":"","code":"create_matrix_smart(input, conds, prm_labels = NULL)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/create_matrix_smart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a matrix for lower and upper — create_matrix_smart","text":"input either list vector numeric values conds character string, conceptually representing conditions model prm_labels character string parameter labels. Used fall back default_values labeled (see details)","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/create_matrix_smart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a matrix for lower and upper — create_matrix_smart","text":"matrix indicating either upper lower end parameter space. many rows conds implies. number columns depend input (matching length vector, matching length entry \"default_values\" list). input NULL, NULL returned.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/create_matrix_smart.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a matrix for lower and upper — create_matrix_smart","text":"goal function build matrix, serving upper lower end parameter space (relevant simulating data). function gets called get_parameters_smart(). assumes following: input either list numeric vector. easiest case numeric vector. case, function builds matrix many rows entries conds. rows also labeled according conds. column names either names specified numeric vector, labels specified prm_labels less intuitive case input list. case, list requires entry called \"default_values\" specifies named plain numeric vector . list contains entry, behavior input already numeric vector. However, input list can also entries labeled specific conditions, contain named (!) numeric vectors parameter labels. modify value upper/lower parameter space respect specified parameters respective condition.#'","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/create_temperatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Create ","title":"Create ","text":"Create \"Temperatures\" TIDE","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/create_temperatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create ","text":"","code":"create_temperatures(n_chains, sampler)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/create_temperatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create ","text":"n_chains numeric sampler \"TIDE\" anything else","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/create_temperatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create ","text":"numeric vector length equal n_chains. returned values correspond quantiles Beta(0.3, 1) distribution sampler == \"TIDE\". Otherwise numeric vector 1s returned.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/crossover.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Crossover Between Chains — crossover","title":"Perform Crossover Between Chains — crossover","text":"function dispatches either full_crossover() migration_crossover() depending argument.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/crossover.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Crossover Between Chains — crossover","text":"","code":"crossover(which, ...)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/crossover.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Crossover Between Chains — crossover","text":"character string, Either \"diff\" \"migration\". ... arguments passed underlying crossover function.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/crossover.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Crossover Between Chains — crossover","text":"list following components: new_prms_across_chains: updated parameter matrix shape p × n. new_pis_across_chains: updated vector log-posterior values. new_log_likes_across_chains: updated vector log-likelihood values.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/dRiftDM-package.html","id":null,"dir":"Reference","previous_headings":"","what":"dRiftDM: Estimating (Time-Dependent) Drift Diffusion Models — dRiftDM-package","title":"dRiftDM: Estimating (Time-Dependent) Drift Diffusion Models — dRiftDM-package","text":"Fit explore Drift Diffusion Models (DDMs), common tool psychology describing decision processes simple tasks. can handle time-independent time-dependent DDMs. either choose prebuilt models create , package takes care model predictions parameter estimation. Model predictions derived via numerical solutions provided Richter, Ulrich, Janczyk (2023, doi:10.1016/j.jmp.2023.102756 ).","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/dRiftDM-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"dRiftDM: Estimating (Time-Dependent) Drift Diffusion Models — dRiftDM-package","text":"Maintainer: Valentin Koob v.koob@web.de [copyright holder] Authors: Thomas Richter [copyright holder] Markus Janczyk","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/d_default_prior_hyper.html","id":null,"dir":"Reference","previous_headings":"","what":"Default Prior for Group-Level (Hyper) Parameters — d_default_prior_hyper","title":"Default Prior for Group-Level (Hyper) Parameters — d_default_prior_hyper","text":"functions define evaluate default prior distribution hyperparameters group level.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/d_default_prior_hyper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default Prior for Group-Level (Hyper) Parameters — d_default_prior_hyper","text":"","code":"d_default_prior_hyper(x, mean, sd, lower, upper, shape, rate, log)  r_default_prior_hyper(n, mean, sd, lower, upper, shape, rate)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/d_default_prior_hyper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default Prior for Group-Level (Hyper) Parameters — d_default_prior_hyper","text":"x numeric vector length 2 matrix 2 rows N column. , x[1] x[1,] interpreted group mean(s) x[2] x[2,] group standard deviation(s). mean, sd mean standard deviation truncated normal distribution group-level mean. (recycled necessary) lower, upper lower upper bounds truncated normal distribution. (recycled necessary) shape, rate shape rate parameters gamma distribution group-level standard deviation. (recycled necessary) log logical; TRUE, log-density returned. n number samples generate.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/d_default_prior_hyper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default Prior for Group-Level (Hyper) Parameters — d_default_prior_hyper","text":"d_default_prior_hyper, numeric vector representing (log) prior density value(s), simplifying assumption independence mean standard deviation. r_default_prior_hyper, 2-row matrix n columns. first row contains sampled group means; second row contains sampled standard deviations. Samples drawn independently. n 1, named numeric vector returned.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/d_default_prior_hyper.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Default Prior for Group-Level (Hyper) Parameters — d_default_prior_hyper","text":"d_default_prior_hyper computes (log) density prior two-element vector 2xN matrix, containing mean standard deviation (.e., phi_j). mean modeled truncated normal distribution, standard deviation gamma distribution. r_default_prior_hyper samples hyperparameter values prior. arguments mean, sd, lower, upper, shape, rate recycled necessary respect columns x. example, x two columns, mean might provide two values.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/ddm_opts.html","id":null,"dir":"Reference","previous_headings":"","what":"Optional Arguments for the Component Functions — ddm_opts<-","title":"Optional Arguments for the Component Functions — ddm_opts<-","text":"Functions get set optional, user-defined R objects attached model object.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/ddm_opts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optional Arguments for the Component Functions — ddm_opts<-","text":"","code":"ddm_opts(object, ...) <- value  # S3 method for class 'drift_dm' ddm_opts(object, ..., eval_model = FALSE) <- value  ddm_opts(object, ...)  # S3 method for class 'drift_dm' ddm_opts(object, ...)  # S3 method for class 'fits_agg_dm' ddm_opts(object, ...)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/ddm_opts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optional Arguments for the Component Functions — ddm_opts<-","text":"object object type drift_dm fits_agg_dm (see estimate_dm()). ... additional arguments passed specific method. value arbitrary R object. eval_model logical, indicating model re-evaluated attaching arbitrary R object model (see re_evaluate_model). Default FALSE.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/ddm_opts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optional Arguments for the Component Functions — ddm_opts<-","text":"ddm_opts() optional R object supplied user, NULL. ddm_opts<-() updated drift_dm object.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/ddm_opts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Optional Arguments for the Component Functions — ddm_opts<-","text":"deriving model predictions, model's component functions (see comp_funs()) evaluated returned values passed forward dedicated numerical methods implemented dRiftDM. allow users access arbitrary R objects within custom component functions, models may contain ddm_opts entry (see also drift_dm() end vignette(\"customize_ddms\", \"dRiftDM\") example). ddm_opts() generic accessor function, ddm_opts<-() generic replacement function. default methods get set optional R object.","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/ddm_opts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Optional Arguments for the Component Functions — ddm_opts<-","text":"","code":"# get a pre-built model for demonstration a_model <- ratcliff_dm() ddm_opts(a_model) <- \"Hello World\" ddm_opts(a_model) #> [1] \"Hello World\""},{"path":"https://bucky2177.github.io/dRiftDM/reference/defaults.html","id":null,"dir":"Reference","previous_headings":"","what":"Default Values for the dRiftDM Package — defaults","title":"Default Values for the dRiftDM Package — defaults","text":"functions provide default values various settings dRiftDM package.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/defaults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default Values for the dRiftDM Package — defaults","text":"","code":"drift_dm_approx_error()  drift_dm_medium_approx_error()  drift_dm_small_approx_error()  drift_dm_rough_approx_error()  drift_dm_robust_prm()  drift_dm_default_rounding()  drift_dm_default_probs()  drift_dm_default_n_bins()  drift_dm_default_b_coding()  drift_dm_skip_if_contr_low()  drift_dm_n_id_trunc_warn()"},{"path":"https://bucky2177.github.io/dRiftDM/reference/defaults.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default Values for the dRiftDM Package — defaults","text":"respective values/lists described Details section","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/defaults.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Default Values for the dRiftDM Package — defaults","text":"drift_dm_approx_error(): Returns default approximation error precise calculations (1e-20). drift_dm_medium_approx_error(): Returns 'medium' level approximation error (1e-06). drift_dm_small_approx_error(): Returns 'small' level approximation error (.01). drift_dm_rough_approx_error(): Returns rough level approximation error (.1). drift_dm_robust_prm(): Returns value added PDFs convolution non-decision time make parameter estimation evaluation log-likelihood robust (1e-8). drift_dm_default_rounding(): Returns default rounding precision numerical outputs (3). drift_dm_default_probs(): Returns default sequence probabilities quantiles (0.1, 0.2, ..., 0.9) drift_dm_default_n_bins(): Returns default number bins CAF (5) drift_dm_default_b_coding(): Returns default boundary coding (list(column = \"Error\", u_name_value = c(\"corr\" = 0), l_name_value = c(\"err\" = 1)) drift_dm_skip_if_contr_low(): returns value 0.0001. PDF integrates value lower (.e., almost contribution PDF; likely pdf_l), summary functions returned calc_stats() might contain value NA respective PDF. drift_dm_n_id_trunc_warn(): returns 15. warnings relevant multiple participants, printed IDs truncated 15.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/dmc_dm.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the Diffusion Model for Conflict Tasks — dmc_dm","title":"Create the Diffusion Model for Conflict Tasks — dmc_dm","text":"function creates drift_dm object corresponds Diffusion Model Conflict Tasks Ulrich et al. (2015) .","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/dmc_dm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the Diffusion Model for Conflict Tasks — dmc_dm","text":"","code":"dmc_dm(   var_non_dec = TRUE,   var_start = TRUE,   instr = NULL,   obs_data = NULL,   sigma = 1,   t_max = 3,   dt = 0.0075,   dx = 0.02,   b_coding = NULL )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/dmc_dm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the Diffusion Model for Conflict Tasks — dmc_dm","text":"var_non_dec, var_start logical, indicating whether model normally-distributed non-decision time beta-shaped starting point distribution, respectively. (see nt_truncated_normal x_beta component_shelf). Defaults TRUE. FALSE, constant non-decision time starting point set (see nt_constant x_dirac_0 component_shelf). instr optional string \"instructions\", see modify_flex_prms(). obs_data data.frame, optional data.frame observed data. See obs_data. sigma, t_max, dt, dx numeric, providing settings diffusion constant discretization (see drift_dm) b_coding list, optional list boundary encoding (see b_coding)","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/dmc_dm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the Diffusion Model for Conflict Tasks — dmc_dm","text":"object type drift_dm (parent class) dmc_dm (child class), created function drift_dm().","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/dmc_dm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create the Diffusion Model for Conflict Tasks — dmc_dm","text":"Diffusion Model Conflict Tasks model describing conflict tasks like Stroop, Simon, flanker task. following properties (see component_shelf): constant boundary (parameter b) evidence accumulation process results sum two subprocesses: controlled process drift rate muc gamma-shaped process scale parameter tau, shape parameter , amplitude . var_non_dec = TRUE, (truncated) normally distributed non-decision mean non_dec standard deviation sd_non_dec assumed. var_start = TRUE,  beta-shaped starting point distribution assumed shape scale parameter alpha. var_non_dec = TRUE, constant non-decision time non_dec set. var_start = FALSE, starting point centered boundaries assumed (.e., dirac delta 0). Per default shape parameter set 2 allowed vary. derivative scaled gamma-distribution function exist t = 0 < 2. Currently, recommend keeping fixed 2. users decide set != 2, small value 1e-05 added time vector t_vec calculating derivative scaled gamma-distribution originally introduced Ulrich et al. (2015) . Note varying can lead large numerical inaccuracies tau small /dt large. model assumes amplitude negative incompatible trials. Also, model contains custom parameter peak_l, containing peak latency ((-2)*tau).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/dmc_dm.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create the Diffusion Model for Conflict Tasks — dmc_dm","text":"scaling parameters dRiftDM different Ulrich et al. (2015) . dRiftDM works seconds diffusion constant 1, original DMC parameterization milliseconds diffusion constant 4. describe convert parameters website.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/dmc_dm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create the Diffusion Model for Conflict Tasks — dmc_dm","text":"Ulrich R, Schröter H, Leuthold H, Birngruber T (2015). “Automatic controlled stimulus processing conflict tasks: Superimposed diffusion processes delta functions.” Cognitive Psychology, 78, 148–174. doi:10.1016/j.cogpsych.2015.02.005 .","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/dmc_dm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create the Diffusion Model for Conflict Tasks — dmc_dm","text":"","code":"# the model with default settings my_model <- dmc_dm()  # the model with no variability in the starting point and a finer # discretization my_model <- dmc_dm(var_start = FALSE, dt = .005, dx = .01)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/dmc_synth_data.html","id":null,"dir":"Reference","previous_headings":"","what":"A synthetic data set with two conditions — dmc_synth_data","title":"A synthetic data set with two conditions — dmc_synth_data","text":"dataset simulated using Diffusion Model Conflict tasks (see dmc_dm()) parameter settings typical Simon task.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/dmc_synth_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A synthetic data set with two conditions — dmc_synth_data","text":"","code":"dmc_synth_data"},{"path":"https://bucky2177.github.io/dRiftDM/reference/dmc_synth_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A synthetic data set with two conditions — dmc_synth_data","text":"data frame 600 rows 3 columns: RT Response Times Error Error Coding (Error Response = 1; Correct Response = 0) Cond Condition ('comp' 'incomp')","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/do_resampling.html","id":null,"dir":"Reference","previous_headings":"","what":"Temporarily suppress new stats generation during resampling — do_resampling","title":"Temporarily suppress new stats generation during resampling — do_resampling","text":"Internal helper sets skip_new_stats_dm skip_validate_stats_dm options TRUE evaluating expression, resets NULL afterward (see also stats.options()). Intended prevent (unncessary) creation/checking stats_dm objects resampling.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/do_resampling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Temporarily suppress new stats generation during resampling — do_resampling","text":"","code":"do_resampling(x)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/do_resampling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Temporarily suppress new stats generation during resampling — do_resampling","text":"x expression evaluate.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/do_resampling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Temporarily suppress new stats generation during resampling — do_resampling","text":"result evaluated x.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/draw_from_pdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw Samples Using Inverse Transform Sampling — draw_from_pdf","title":"Draw Samples Using Inverse Transform Sampling — draw_from_pdf","text":"draw_from_pdf generates samples given probability density function (PDF) using inverse transform sampling. function takes numeric PDF vector corresponding domain vector, returns specified number samples.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/draw_from_pdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw Samples Using Inverse Transform Sampling — draw_from_pdf","text":"","code":"draw_from_pdf(a_pdf, x_def, k, seed = NULL, round_to = NULL, method = \"discr\")"},{"path":"https://bucky2177.github.io/dRiftDM/reference/draw_from_pdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw Samples Using Inverse Transform Sampling — draw_from_pdf","text":"a_pdf numeric vector representing PDF values. x_def numeric vector defining domain (x-values) corresponding values a_pdf. vector x_def must sorted increasing order. k single integer specifying number samples generate. seed optional single integer value used set seed random number generation, allowing reproducibility results. round_to optional integer, indicating number digits result rounded. method single character string. \"discr\", simulated values match x_def. \"linear\", x_def a_pdf linearly interpolated, simulated values can lay discrete values x_def.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/draw_from_pdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw Samples Using Inverse Transform Sampling — draw_from_pdf","text":"numeric vector length k containing sampled values specified PDF. k 0, empty numeric vector returned.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/draw_from_pdf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Draw Samples Using Inverse Transform Sampling — draw_from_pdf","text":"function implements inverse transform sampling first constructing cumulative distribution function (CDF) given PDF. k values zero one sampled uniform distribution, corresponding values mapped x_def using linear interpolation.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/drift_dm.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a drift_dm object — drift_dm","title":"Create a drift_dm object — drift_dm","text":"function creates object type drift_dm, serves parent class created drift diffusion models (child class label, e.g., dmc_dm). objects created drift_dm() backbone dRiftDM package. list pre-built models, see vignette(\"dRiftDM\", \"dRiftDM\").","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/drift_dm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a drift_dm object — drift_dm","text":"","code":"drift_dm(   prms_model,   conds,   subclass,   instr = NULL,   obs_data = NULL,   sigma = 1,   t_max = 3,   dt = 0.001,   dx = 0.001,   solver = \"kfe\",   cost_function = \"neg_log_like\",   mu_fun = NULL,   mu_int_fun = NULL,   x_fun = NULL,   b_fun = NULL,   dt_b_fun = NULL,   nt_fun = NULL,   b_coding = NULL )  # S3 method for class 'drift_dm' print(x, ..., round_digits = drift_dm_default_rounding())"},{"path":"https://bucky2177.github.io/dRiftDM/reference/drift_dm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a drift_dm object — drift_dm","text":"prms_model named numeric vector model parameters. names indicate model's parameters, numeric entries provide current parameter values. conds character vector, giving names model's conditions. values within conds used addressing data deriving model's predictions. subclass character string, name newly created diffusion model (e.g., my_dmc_dm). child class. instr optional character string, providing \"instructions\" underlying flex_prms object. obs_data optional data.frame, providing data set (see obs_data() information). sigma diffusion constant. Default 1. t_max maximum time space. Default set 3 (seconds). dt, dx step size time evidence space discretization, respectively. Default set .001 (refers seconds dt). Note values set conservatively per default. many cases, users can increase discretization. solver character string, specifying approach use deriving first passage time. Options kfe im_zero. Default kfe, provides access numerical discretization Kolmogorov Forward Equation. cost_function character string, specifying cost function used estimation. Options neg_log_like (negative log-likelihood), rmse (root-mean-squared error). Default neg_log_like. mu_fun, mu_int_fun, x_fun, b_fun, dt_b_fun, nt_fun Optional custom functions defining components diffusion model. See comp_funs(). argument NULL, dRiftDM falls back respective default functions, documented comp_funs(). b_coding optional list, specifying boundaries coded. See b_coding(). Default refers accuracy coding. x object type drift_dm ... additional parameters round_digits integer, controls number digits shown print.drift_dm(). Default 3.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/drift_dm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a drift_dm object — drift_dm","text":"drift_dm(), list parent class label \"drift_dm\" child class label <subclass>. list contains following entries: instance class flex_prms controlling model parameters. Provides information number parameters, conditions etc. Parameters used deriving model predictions, prms_solve, containing diffusion constant (sigma), maximum time space (t_max), evidence space discretization (dt dx, respectively), resulting number steps time evidence space discretization (nt nx, respectively). character string solver, indicating method deriving model predictions. character string cost_function, indicating cost function used model estimation. list functions called comp_funs, providing components diffusion model (.e., mu_fun, mu_int_fun, x_fun, b_fun, dt_b_fun, nt_fun). functions called depths package determine behavior model (optional) observed data passed via obs_data(), list contain entry obs_data. (nested) list stored response times upper lower boundary respect condition. cost function summary statistic requiring quantiles, CAFs, etc., model also contains entries stats_agg stats_agg_info. former (nested) list descriptive statistics. latter contains information descriptive statistics (e.g., quantile levels). model evaluated (see re_evaluate_model()), list contain... ... cost value; can addressed via cost_value(). ... PDFs first passage time; can addressed via pdfs(). model estimated (includes evaluation), list contain estimate_info. entry contains convergence flag (conv_flag, logical) optimizer (string). Finally, arbitrary R objects passed via ddm_opts() (access objects evaluating component functions) list contain entry ddm_opts. Every model also attribute b_coding, summarizes boundaries labeled. print.drift_dm(), supplied drift_dm object x (invisible return).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/drift_dm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a drift_dm object — drift_dm","text":"modify entries model users can use replacement methods modify_flex_prms() method (see also vignette(\"dRiftDM\", \"dRiftDM\") vignette(\"customize_ddms\", \"dRiftDM\")).","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/drift_dm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a drift_dm object — drift_dm","text":"","code":"# Plain call, with default component functions ----------------------------- # create parameter and condition vectors prms <- c(muc = 4, b = 0.5) conds <- c(\"one\", \"two\")  # then call the backbone function (note that we don't provide any component # functions, so dRiftDM uses the default functions as documented in # comp_funs()) my_model <- drift_dm(prms_model = prms, conds = conds, subclass = \"example\") print(my_model) #> Class(es) example, drift_dm #> (model has not been estimated yet) #>  #> Parameter Values: #>     muc   b #> one   4 0.5 #> two   4 0.5 #>  #> Parameter Settings: #>     muc b #> one   1 2 #> two   1 2 #>  #> Deriving PDFS: #>   solver: kfe #>   values: sigma=1, t_max=3, dt=0.001, dx=0.001, nt=3000, nx=2000 #>  #> Cost Function: neg_log_like #>  #> Observed Data: NULL"},{"path":"https://bucky2177.github.io/dRiftDM/reference/drift_dm_cost_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Available Cost Functions for Model Estimation — drift_dm_cost_functions","title":"Available Cost Functions for Model Estimation — drift_dm_cost_functions","text":"Returns names implemented cost functions.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/drift_dm_cost_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Available Cost Functions for Model Estimation — drift_dm_cost_functions","text":"","code":"drift_dm_cost_functions()"},{"path":"https://bucky2177.github.io/dRiftDM/reference/drift_dm_cost_functions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Available Cost Functions for Model Estimation — drift_dm_cost_functions","text":"character vector cost function names.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/drift_dm_pre_built_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Pre-built Drift Diffusion Models — drift_dm_pre_built_models","title":"Pre-built Drift Diffusion Models — drift_dm_pre_built_models","text":"Returns names available pre-built DDMs dRiftDM.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/drift_dm_pre_built_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pre-built Drift Diffusion Models — drift_dm_pre_built_models","text":"","code":"drift_dm_pre_built_models()"},{"path":"https://bucky2177.github.io/dRiftDM/reference/drift_dm_pre_built_models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pre-built Drift Diffusion Models — drift_dm_pre_built_models","text":"character vector model names.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/drift_dm_stats_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Available types of statistics — drift_dm_stats_types","title":"Available types of statistics — drift_dm_stats_types","text":"Internal helper return supported statistic types depending context (e.g., observed data.frames fitted model objects).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/drift_dm_stats_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Available types of statistics — drift_dm_stats_types","text":"","code":"drift_dm_stats_types(context = NULL)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/drift_dm_stats_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Available types of statistics — drift_dm_stats_types","text":"context character string, indicating context. NULL, available types returned.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/drift_dm_stats_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Available types of statistics — drift_dm_stats_types","text":"character vector valid statistic types given context.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/drop_levels_ID_column.html","id":null,"dir":"Reference","previous_headings":"","what":"Maybe droplevels of ID column — drop_levels_ID_column","title":"Maybe droplevels of ID column — drop_levels_ID_column","text":"function takes data frame ID colmumn, drops unused levels ID column factor; case warning thrown","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/drop_levels_ID_column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maybe droplevels of ID column — drop_levels_ID_column","text":"","code":"drop_levels_ID_column(some_data)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/drop_levels_ID_column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maybe droplevels of ID column — drop_levels_ID_column","text":"some_data data.frame ID column","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/drop_levels_ID_column.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maybe droplevels of ID column — drop_levels_ID_column","text":"ID column type factor, unmodified object returned. ID column type factor, droplevels applied, levels dropped, warning thrown","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/dt_b_constant.html","id":null,"dir":"Reference","previous_headings":"","what":"Derivative of a Constant Boundary — dt_b_constant","title":"Derivative of a Constant Boundary — dt_b_constant","text":"Derivative Constant Boundary","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/dt_b_constant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Derivative of a Constant Boundary — dt_b_constant","text":"","code":"dt_b_constant(prms_model, prms_solve, t_vec, one_cond, ddm_opts)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/dt_b_constant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Derivative of a Constant Boundary — dt_b_constant","text":"prms_model model parameters, prm label required prms_solve solver settings t_vec time space one_cond one condition ddm_opts optional arguments attached object","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/dt_b_constant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Derivative of a Constant Boundary — dt_b_constant","text":"vector length t_vec zeros.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/dtnorm.html","id":null,"dir":"Reference","previous_headings":"","what":"Truncated Normal Density Function — dtnorm","title":"Truncated Normal Density Function — dtnorm","text":"Computes probability density function truncated normal distribution. version supports vector matrix input x.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/dtnorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Truncated Normal Density Function — dtnorm","text":"","code":"dtnorm(x, mean = 0, sd = 1, lower = -Inf, upper = Inf, log = FALSE)  rtnorm(n, mean = 0, sd = 1, lower = -Inf, upper = Inf)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/dtnorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Truncated Normal Density Function — dtnorm","text":"x numeric vector matrix values density evaluated. mean Mean normal distribution. Can scalar vector (recycled necessary). sd Standard deviation normal distribution. Can scalar vector (recycled necessary). lower Lower truncation bound. Can scalar vector (recycled necessary). Default -Inf. upper Upper truncation bound. Can scalar vector (recycled necessary). Default Inf. log Logical; TRUE, probabilities p given log(p). Default FALSE.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/dtnorm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Truncated Normal Density Function — dtnorm","text":"numeric vector matrix shape x, containing (possibly log) densities.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/dtnorm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Truncated Normal Density Function — dtnorm","text":"function evaluates normal density x scales reflect truncation interval (lower, upper). Values outside truncation bounds assigned density 0 (-Inf log scale). Internally, stats::dnorm stats::pnorm used. x matrix, result retains dimensions. arguments recycled needed. example, x two rows 5 columns, mean might provide 2 values, first/second row evaluated first/second mean value.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_bayes_h.html","id":null,"dir":"Reference","previous_headings":"","what":"(Hierarchical) Bayesian Estimation with Differential Evolution — estimate_bayes_h","title":"(Hierarchical) Bayesian Estimation with Differential Evolution — estimate_bayes_h","text":"Estimate group-level individual-level parameters hierarchical Bayesian approach using Differential Evolution MCMC (DE-MCMC) Turner et al. (2013) . approximation marginal likelihood calculate Bayes Factors can obtained Thermodynamic Integration via Differential Evolution (TIDE) sampler Evans Annis (2019) .","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_bayes_h.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Hierarchical) Bayesian Estimation with Differential Evolution — estimate_bayes_h","text":"","code":"estimate_bayes_h(   drift_dm_obj,   obs_data_ids,   sampler,   n_chains,   burn_in,   samples,   n_cores,   prob_migration,   prob_re_eval,   verbose,   seed = NULL,   ... )  estimate_bayes_one_subj(   drift_dm_obj,   sampler,   n_chains,   burn_in,   samples,   prob_migration,   prob_re_eval,   verbose,   ... )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_bayes_h.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Hierarchical) Bayesian Estimation with Differential Evolution — estimate_bayes_h","text":"drift_dm_obj object type drift_dm. obs_data_ids data.frame hierarchical case. additional column ID necessary codes individuals (see also obs_data). sampler character string, indicating sampler use. Must either \"DE-MCMC\" (default) \"TIDE\". n_chains numeric, number chains MCMC-sampler. Default 40. burn_in numeric, number burn-iterations. Default 500. samples numeric, number sampling iterations burn-. Default 2000. n_cores numeric, number threads use parallel processing hierarchical case. Default 1. prob_migration numeric, probability performing migration crossover step burn-. Default 0.1 (.e., 10%). prob_re_eval numeric, probability re-evaluating likelihood/posterior values previous iteration -1 deciding acceptance proposal iteration . considered burn-. Default 0.1 (.e., 10%). verbose integer, indicating verbosity output: 0 (none), 1 (minimal text output), 2 (text output progress bar). Default 2. seed optional random seed reproducibility. ... additional arguments passed get_default_prior_settings customize prior settings.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_bayes_h.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Hierarchical) Bayesian Estimation with Differential Evolution — estimate_bayes_h","text":"named ist containing posterior samples group-level individual-level parameters, log-posterior values, log-likelihoods. Labels: phi, pis_phi, lls_phi, theta, pis_theta, lls_theta. first three entries present hierarchical case. list also additional attribute named data_model. hierarchical case, attribute contains named list model copies individual data sets attached. list named according individual IDs argument obs_data_ids. non-hierarchical case, attribute contains model attached data.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_bayes_h.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Hierarchical) Bayesian Estimation with Differential Evolution — estimate_bayes_h","text":"function estimate_bayes_h() handles hierarchical case. function estimate_bayes_one_subj() handles case estimating single individual. reason writing two functions hierarchical case unique tweaks need considered ... writing one function quite mess. Prior Settings: See wrapper estimate_bayesian() also get_default_prior_settings()","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_bayes_h.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"(Hierarchical) Bayesian Estimation with Differential Evolution — estimate_bayes_h","text":"Turner BM, Sederberg PB, Brown SD, Steyvers M (2013). “method efficiently sampling distributions correlated dimensions.” Psychological Methods, 18(3), 368–384. doi:10.1037/a0032222 .  Evans NJ, Annis J (2019). “Thermodynamic integration via differential evolution: method estimating marginal likelihoods.” Behavior Research Methods, 51, 930–947. doi:10.3758/s13428-018-1172-y .","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_bayesian.html","id":null,"dir":"Reference","previous_headings":"","what":"(Hierarchical) Bayesian Estimation — estimate_bayesian","title":"(Hierarchical) Bayesian Estimation — estimate_bayesian","text":"function provides wrapper around implemented samplers Bayesian inference dRiftDM. parameter estimation, Differential Evolution Markov-Chain Monte-Carlo (DE-MCMC) Turner et al. (2013)  used. approximation marginal likelihood calculate Bayes Factors can obtained Thermodynamic Integration via Differential Evolution (TIDE) sampler Evans Annis (2019) . However, TIDE yet supported fully, experimental stage.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_bayesian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Hierarchical) Bayesian Estimation — estimate_bayesian","text":"","code":"estimate_bayesian(   drift_dm_obj,   obs_data_ids = NULL,   sampler,   n_chains,   burn_in,   samples,   prob_migration,   prob_re_eval,   verbose = NULL,   ... )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_bayesian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Hierarchical) Bayesian Estimation — estimate_bayesian","text":"drift_dm_obj object type drift_dm. obs_data_ids data.frame hierarchical case. additional column ID necessary codes individuals (see also obs_data). sampler character string, indicating sampler use. Must either \"DE-MCMC\" (default) \"TIDE\". n_chains numeric, number chains MCMC-sampler. Default 40. burn_in numeric, number burn-iterations. Default 500. samples numeric, number sampling iterations burn-. Default 2000. prob_migration numeric, probability performing migration crossover step burn-. Default 0.1 (.e., 10%). prob_re_eval numeric, probability re-evaluating likelihood/posterior values previous iteration -1 deciding acceptance proposal iteration . considered burn-. Default 0.1 (.e., 10%). verbose integer, indicating verbosity output: 0 (none), 1 (minimal text output), 2 (text output progress bar). Default 2. ... additional arguments passed forward estimate_bayes_h() estimate_bayes_one_subj().","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_bayesian.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Hierarchical) Bayesian Estimation — estimate_bayesian","text":"object type mcmc_dm  containing posterior samples parameters, log-posterior values, log-likelihoods. hierarchical case, respective values available group-level individual-level. object contains two attributes: sampler data_model. former simply stores type sampler used codes whether estimation done hierarchical fashion . latter either contains model attached data (non-hierarchical case) named list model copies individual's data attached.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_bayesian.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"(Hierarchical) Bayesian Estimation — estimate_bayesian","text":"data.frame supplied, hierarchical approach parameter estimation done. case, supplied data set must provide data multiple individuals. estimate parameters single individual (.e., pursue non-hierarchical approach), supplied model drift_dm_obj must data attached (see obs_data()).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_bayesian.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"(Hierarchical) Bayesian Estimation — estimate_bayesian","text":"Turner BM, Sederberg PB, Brown SD, Steyvers M (2013). “method efficiently sampling distributions correlated dimensions.” Psychological Methods, 18(3), 368–384. doi:10.1037/a0032222 .  Evans NJ, Annis J (2019). “Thermodynamic integration via differential evolution: method estimating marginal likelihoods.” Behavior Research Methods, 51, 930–947. doi:10.3758/s13428-018-1172-y .","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_classical.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Parameters of a drift_dm Model via Classical Optimization — estimate_classical","title":"Estimate Parameters of a drift_dm Model via Classical Optimization — estimate_classical","text":"estimate_classical() estimates parameters drift_dm model minimizing model's cost function (e.g., RMSE negative log-likelihood) using classical (non-Bayesian) optimization routines. Available optimizers include: Nelder-Mead (bounded unbounded): \"Nelder-Mead\", \"nmkb\" (via stats::optim() dfoptim::nmkb(), respectively) BFGS L-BFGS-B (via stats::optim()) Differential Evolution (via DEoptim::DEoptim())","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_classical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Parameters of a drift_dm Model via Classical Optimization — estimate_classical","text":"","code":"estimate_classical(   drift_dm_obj,   optimizer,   start_vals = NULL,   return_runs = NULL,   lower = NULL,   upper = NULL,   verbose = NULL,   de_n_cores = 1,   control = list(),   round_digits = NULL,   seed = NULL )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_classical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Parameters of a drift_dm Model via Classical Optimization — estimate_classical","text":"drift_dm_obj object inheriting drift_dm. optimizer character string specifying optimizer use. Must one \"Nelder-Mead\", \"nmkb\", \"BFGS\", \"L-BFGS-B\", \"DEoptim\". start_vals set starting values. Must compatible get_parameters_smart(). start_vals NULL, function tries set provided parameter values model, using values starting values optimization routine. Special case: start_vals data.frame, function recursively called row start_vals, providing handy way run optimization routine different starting values. Default NULL, implies current model parameters used starting values. return_runs single logical. relevant start_vals data.frame optimization routine called multiple times different starting values. FALSE, best-fitting model returned. TRUE, list returned, containing best-fitting model, cost values across runs, estimated model parameters across runs. lower, upper bounds parameters estimated. Can numeric vectors, named vectors, flexible lists (see Details). verbose integer (0, 1, 2). Controls amount printed output. 0 = silent 1 = starting/exiting messages 2 = parameters cost value per iteration de_n_cores integer > 0. Number CPU cores use DEoptim. control named list control parameters passed chosen optimizer. round_digits integer. Number digits round cost values printed output. NULL, defaults drift_dm_default_rounding(). seed seed, make results DEoptim reproducible.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_classical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Parameters of a drift_dm Model via Classical Optimization — estimate_classical","text":"updated drift_dm_obj, optimized parameters.","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_classical.html","id":"search-space-specification","dir":"Reference","previous_headings":"","what":"Search space specification","title":"Estimate Parameters of a drift_dm Model via Classical Optimization — estimate_classical","text":"lower upper can specified flexibly: unnamed numeric vectors (recommended unless sure parameter order) named numeric vectors matching parameter names model lists default_values entry (plus optional condition-specific entries) design mirrors structure used simulate_data.drift_dm().","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_classical.html","id":"optimization-details","dir":"Reference","previous_headings":"","what":"Optimization details","title":"Estimate Parameters of a drift_dm Model via Classical Optimization — estimate_classical","text":"optimizers (.e., \"nmkb\", \"L-BFGS-B\", \"DEoptim\") require lower upper bounds. Differential Evolution (DEoptim) supports parallelization across cores via de_n_cores. de_n_cores > 1, parallel cluster created automatically closed optimization. cost function minimized depends cost_function() model. optimization, failed model evaluations yield high cost value (.e., .Machine$double.xmax). cases, ensures optimization crash, though, guaranteed.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_classical_wrapper.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal wrapper for classical estimation of individuals — estimate_classical_wrapper","title":"Internal wrapper for classical estimation of individuals — estimate_classical_wrapper","text":"function wraps estimate_classical() handle fitting multiple individuals consistent way. prepares data, distributes estimation across individuals, manages parallelization strategies progress reporting. Unlike deprecated estimate_model_ids(), function longer saves results disk — instead, directly returns object class fits_ids_dm.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_classical_wrapper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal wrapper for classical estimation of individuals — estimate_classical_wrapper","text":"","code":"estimate_classical_wrapper(   drift_dm_obj,   obs_data_ids,   parallelization_strategy = NULL,   progress = NULL,   start_vals = NULL,   optimizer,   n_cores = NULL,   seed = NULL,   ... )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_classical_wrapper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal wrapper for classical estimation of individuals — estimate_classical_wrapper","text":"drift_dm_obj drift_dm object estimated individual obs_data_ids. obs_data_ids data.frame observed data including ID column uniquely identifies individual. parallelization_strategy integer, either 1 2. Strategy 1 parallelizes across individuals, strategy 2 parallelizes within individuals (supported \"DEoptim\"). Default 1 progress integer, controlling progress output. 0 = progress, 1 = minimal output, 2 = progress bar. Default 1 start_vals optional data.frame starting values individual. Must contain ID column matching IDs obs_data_ids, one column per parameter. seed optional seed make results reproducible ... arguments passed estimate_classical(), including lower, upper, verbose, control, round_digits. Note argument return_runs supported.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_classical_wrapper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal wrapper for classical estimation of individuals — estimate_classical_wrapper","text":"object class fits_ids_dm, list two components: drift_dm_fit_info — list containing model object, observed data, optimizer information, convergence messages all_fits — list individual estimation results","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_classical_wrapper.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internal wrapper for classical estimation of individuals — estimate_classical_wrapper","text":"Convergence issues checked automatically. one individuals fail converge, warning issued corresponding IDs messages returned optimizer.","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_dm.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a DDM to Observed Data — estimate_dm","title":"Fit a DDM to Observed Data — estimate_dm","text":"estimate_dm() main function fit drift diffusion model (DDM) dRiftDM. Several ways fitting model supported: fitting single participant, fitting multiple participants separately aggregated, fitting (hierarchical) Bayesian model. particular way controlled via approach argument.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_dm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a DDM to Observed Data — estimate_dm","text":"","code":"estimate_dm(   drift_dm_obj,   obs_data = NULL,   approach = NULL,   optimizer = NULL,   control = list(),   n_cores = 1,   parallelization_strategy = NULL,   lower = NULL,   upper = NULL,   start_vals = NULL,   means = NULL,   sds = NULL,   shapes = NULL,   rates = NULL,   n_chains = 40,   burn_in = 500,   samples = 1000,   prob_migration = 0.1,   prob_re_eval = 1,   messaging = TRUE,   seed = NULL,   ... )  # S3 method for class 'fits_agg_dm' print(x, ...)  # S3 method for class 'fits_ids_dm' print(x, ...)  # S3 method for class 'mcmc_dm' print(x, ..., round_digits = drift_dm_default_rounding())"},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_dm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a DDM to Observed Data — estimate_dm","text":"drift_dm_obj drift_dm object containing model fitted. obs_data optional data.frame (see also obs_data). ID column present, single-individual setup assumed. ID column present, model fitted separately individual. approach optional character string, specifying approach fitting model. Options \"sep_c\", \"agg_c\", \"sep_b\", \"hier_b\" (see Details). optimizer character string. classical optimization, one \"nmkb\", \"Nelder-Mead\", \"BFGS\", \"L-BFGS-B\", \"DEoptim\". Bayesian framework, \"DE-MCMC\" currently supported. NULL classical optimization approach used, defaults \"DEoptim\" \"Nelder-Mead\", depending whether lower/upper provided . NULL Bayesian framework used, defaults \"DE-MCMC. Note \"BFGS\" \"L-BFGS-B\" often unstable. control list control parameters passed optimizer (see dfoptim::nmkb, DEoptim::DEoptim, stats::optim). Per default, set trace control argument DEoptim::DEoptim FALSE. Also, set parscale control argument \"Nelder-Mead\" via stats::optim pmax(x0, 1e-6). n_cores integer > 0, indicating number CPU cores/threads use (moment, effect fitting single individual within Bayesian framework). parallelization_strategy integer, controlling parallelization performed fitting multiple individuals classical approach. 1, parallelization across individuals. 2, parallelization within individuals (currently supported \"DEoptim\"). Defaults 1. lower, upper numeric vectors lists, specifying lower upper bounds parameter optimized (see Details). start_vals optional starting values classical single-subject fits using optimizer requires starting value. Can numeric vector model parameters fitting single individual, data.frame columns model parameter. latter case, enables multi-start (one row per start). 'approach = \"separately\"', data.frame ID column required. means, sds, shapes, rates optional numeric vectors prior specification (using Bayesian framework, see Details). n_chains integer, providing number MCMC chains (Bayesian framework). burn_in integer, number burn-iterations (Bayesian framework). samples integer, number post-burn-samples per chain ( Bayesian framework). prob_migration numeric [0,1], controlling migration probability DE-MCMC algorithm (Bayesian framework). prob_re_eval numeric [0,1], probability re-evaluate model current group-level parameters sampling (Bayesian framework; relevant hierarchical case). messaging logical, TRUE progress/info messages printed seed optional integer set RNG seed reproducibility. ... additional arguments forwarded lower-level routines. Options : progress/verbose (integers, controlling progress bars verbosity estimation infos), round_digits (controlling number digits rounding printing individual model evaluations; verbose = 2), return_runs (fitting single individual starting estimation routine multiple starting points; TRUE, list routines returned), probs/n_bins (quantile levels number CAF bins fitting aggregated data using RMSE cost function). x object type fits_agg_dm, fits_ids_dm, mcmc_dm round_digits integer, specifying number decimal places rounding printed summary. Default 3.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_dm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a DDM to Observed Data — estimate_dm","text":"fitting single individual: either drift_dm object fitted parameters additional fit information (classical optimization framework) object type mcmc_dm (Bayesian framework) fitting multiple individuals separately: fits_ids_dm object list mcmc_dm objects, containing individual model fits. fitting aggregated data: fits_agg_dm object containing model raw data. fitting multiple individuals hierarchically: object type mcmc_dm.","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_dm.html","id":"fitting-approaches","dir":"Reference","previous_headings":"","what":"Fitting Approaches","title":"Fit a DDM to Observed Data — estimate_dm","text":"function supports different \"approaches\" fitting data. \"sep_c\": means data always considered separately participant (multiple participants) classical approach parameter optimization used. means standard cost_function minimized (e.g., negative log-likelihood). users provide single participant data set without ID column, model fitted just data set. \"agg_c\": fits model aggregated data. individual data set, summary statistics (e.g., quantiles, accuracies) calculated, model fitted average summary statistics. \"sep_b\": Similar sep_b\", although Bayesian approach used sample posterior distribution. \"hier_b\": hierarchical approach parameter estimation. case participants considered simultaneously samples drawn individual-level group-level. optimizers  \"nmkb\", \"L-BFGS-B\", \"DEoptim\" (classical parameter optimization) require specification lower/upper arguments.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_dm.html","id":"fitting-to-aggregated-data","dir":"Reference","previous_headings":"","what":"Fitting to Aggregated Data","title":"Fit a DDM to Observed Data — estimate_dm","text":"aggregated fits, aggregated statistics set model cost function switched \"rmse\". incompatible settings requested, function switches compatible configuration informs user messages (messages can suppressed via messaging argument).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_dm.html","id":"specifying-lower-upper-for-classical-optimization","dir":"Reference","previous_headings":"","what":"Specifying lower/upper for Classical optimization","title":"Fit a DDM to Observed Data — estimate_dm","text":"function estimate_model_dm() provides flexible way specifying optimization space; identical specifying parameter simulation space simulate_data.drift_dm(). Users three options specify search space (see also examples ): Plain numeric vectors (much recommended). case, lower/upper must sorted accordance parameters underlying flex_prms object drift_dm_obj vary least one condition (call print(drift_dm_obj) look columns Parameter Settings output; column number > 0, specify entry lower/upper). Named numeric vectors. case lower/upper provide labels accordance parameters considered \"free\" least across conditions (call coef(drift_dm_obj) provide one named entry parameter; dRiftDM try recycle parameter values across conditions). precise way lower/upper lists. case, list requires entry called \"default_values\" specifies named plain numeric vectors . list contains entry, behavior lower/upper already numeric vectors. However, lower/upper lists can also provide entries labeled specific conditions, contain named (!) numeric vectors parameter labels. modify value upper/lower parameter space respect specified parameters respective condition.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_dm.html","id":"specifying-priors-for-bayesian-estimation","dir":"Reference","previous_headings":"","what":"Specifying Priors for Bayesian Estimation","title":"Fit a DDM to Observed Data — estimate_dm","text":"(Default) Prior settings non-hierarchical case: Let \\(\\theta^{(j)}\\) indicate parameter \\(j\\) model (e.g., drift rate). prior \\(\\theta^{(j)}\\) truncated normal distribution: $$  \\theta^{(j)} \\sim NT(\\mu^{(j)}, \\sigma^{(j)}, l^{(j)}, u^{(j)})  $$ \\(\\mu^{(j)}\\) \\(\\sigma^{(j)}\\) representing mean standard deviation parameter \\(j\\). \\(l^{(j)}\\) \\(u^{(j)}\\) represent lower upper boundary. \\(\\mu^{(j)}\\) taken mean argument currently set model parameters (.e., coef(drift_dm_obj)) calling function. \\(\\sigma^{(j)}\\) , per default, equal \\(\\mu^{(j)}\\). can changed passing sd argument. lower upper boundaries truncated normal -Inf Inf per default. can altered passing arguments lower  upper. (Default) Prior settings hierarchical case: Let \\(\\theta_i^{(j)}\\) indicate parameter \\(j\\) participant \\(\\) (e.g.,  drift rate estimated individual \\(\\)). prior \\(\\theta_i^{(j)}\\) truncated normal distribution: $$  \\theta_i^{(j)} \\sim NT(\\mu^{(j)}, \\sigma^{(j)}, l^{(j)}, u^{(j)})  $$ \\(\\mu^{(j)}\\) \\(\\sigma^{(j)}\\) representing mean standard deviation parameter \\(j\\) group level. \\(l^{(j)}\\) \\(u^{(j)}\\) represent lower upper boundary. lower upper boundaries truncated normal -Inf Inf per default. can altered passing arguments lower  upper. group-level mean parameter, \\(\\mu^{(j)}\\), prior also truncated normal distributions: $$  \\mu^{(j)} \\sim NT(M^{(j)}, SD^{(j)}, l^{(j)}, u^{(j)})  $$ \\(M^{(j)}\\) specified mean argument currently set model parameters. \\(SD^{(j)}\\) , per default, equal \\(M^{(j)}\\). can changed passing sd argument. group-level standard deviation parameter, \\(\\sigma^{(j)}\\), prior gamma distribution: $$  \\sigma^{(j)} \\sim \\Gamma(shape^{(j)},rate^{(j)})  $$ \\(shape^{(j)}\\) \\(rate^{(j)}\\) 1 default. can changed passing arguments shape rate. Specifying Prior Settings/Arguments Argument specification mean, sd, lower, upper, shape rate conceptually identical specifying lower/upper classical optimization approach (see subsection examples ).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_dm.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Fit a DDM to Observed Data — estimate_dm","text":"estimate_dm dispatches underlying estimation routines exported: Classical optimization one individual via estimate_classical() Classical optimization multiple individuals via estimate_classical_wrapper() Bayesian estimation via estimate_bayesian(). Aggregated fitting handled within estimate_dm() combination estimate_classical()","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_dm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a DDM to Observed Data — estimate_dm","text":"","code":"########## # Note: The following examples were trimmed for speed to ensure they run # within seconds. They do not always provide realistic settings. ##########  #### # Setup  # get a model for the examples (DMC with just two free parameters) model <- dmc_dm(   t_max = 1.5, dx = .01, dt = .01,   instr = '    b <!>    non_dec <!>    sd_non_dec <!>    tau <!>    alpha <!>    ' )  # get some data (the first two participants in the data set of Ulrich et al.) data <- ulrich_flanker_data[ulrich_flanker_data$ID %in% 1:2,]    #### # Fit a single individual (using unbounded Nelder-Mead) fit <- estimate_dm(   drift_dm_obj = model,   obs_data = data[data$ID == 1,],   optimizer = \"Nelder-Mead\" ) #> Using the data supplied via the 'obs_data' argument. #> Using optimizer 'Nelder-Mead'. #> Fitting a single data set/participant (cost function: 'neg_log_like'). The returned object will be the model itself. #> Starting optimizer 'Nelder-Mead' with the following starting values: #> muc=4, A=0.1 #> Optimization routine exited after 89 function evaluations #> Final Parameters #> muc = 4.627 #> A = 0.084 #> ==> gave a neg_log_like of -369.167 print(fit) #> Class(es) dmc_dm, drift_dm #> Optimizer: Nelder-Mead #> Convergence: TRUE #>  #> Parameter Values: #>          muc   b non_dec sd_non_dec  tau a      A alpha #> comp   4.627 0.6     0.3       0.02 0.04 2  0.084     4 #> incomp 4.627 0.6     0.3       0.02 0.04 2 -0.084     4 #>  #> Parameter Settings: #>        muc b non_dec sd_non_dec tau a A alpha #> comp   1   0 0       0          0   0 2 0     #> incomp 1   0 0       0          0   0 d 0     #>  #> Special Dependencies: #> A ~ incomp == -(A ~ comp) #>  #> Custom Parameters: #>        peak_l #> comp     0.04 #> incomp   0.04 #>  #> Deriving PDFS: #>   solver: kfe #>   values: sigma=1, t_max=1.5, dt=0.01, dx=0.01, nt=150, nx=200 #>  #> Cost Function: neg_log_like #>  #> Observed Data: 168 trials comp; 168 trials incomp #>    #### # Fit a single individual (using bounded Nelder-Mead and custom starting # values) l_u <- get_lower_upper(model) fit <- estimate_dm(   drift_dm_obj = model,   obs_data = data[data$ID == 1,],   optimizer = \"nmkb\",   lower = l_u$lower, upper = l_u$upper,   start_vals = c(muc = 4, A = 0.06) ) #> Using the data supplied via the 'obs_data' argument. #> Using optimizer 'nmkb'. #> Fitting a single data set/participant (cost function: 'neg_log_like'). The returned object will be the model itself. #> Starting optimizer 'nmkb' with the following starting values: #> muc=4, A=0.06 #> Optimization routine exited after 116 function evaluations #> Final Parameters #> muc = 4.627 #> A = 0.084 #> ==> gave a neg_log_like of -369.167 print(fit) #> Class(es) dmc_dm, drift_dm #> Optimizer: nmkb #> Convergence: TRUE #>  #> Parameter Values: #>          muc   b non_dec sd_non_dec  tau a      A alpha #> comp   4.627 0.6     0.3       0.02 0.04 2  0.084     4 #> incomp 4.627 0.6     0.3       0.02 0.04 2 -0.084     4 #>  #> Parameter Settings: #>        muc b non_dec sd_non_dec tau a A alpha #> comp   1   0 0       0          0   0 2 0     #> incomp 1   0 0       0          0   0 d 0     #>  #> Special Dependencies: #> A ~ incomp == -(A ~ comp) #>  #> Custom Parameters: #>        peak_l #> comp     0.04 #> incomp   0.04 #>  #> Deriving PDFS: #>   solver: kfe #>   values: sigma=1, t_max=1.5, dt=0.01, dx=0.01, nt=150, nx=200 #>  #> Cost Function: neg_log_like #>  #> Observed Data: 168 trials comp; 168 trials incomp #>    #### # Fit a single individual (using DEoptim) # Note: DEoptim always runs for 200 iterations per default; which is not # necessary here -> in this simple example, we stop it after 10 iterations # without improvement l_u <- get_lower_upper(model) set.seed(2) fit <- estimate_dm(   drift_dm_obj = model,   obs_data = data[data$ID == 1,],   optimizer = \"DEoptim\",   lower = l_u$lower, upper = l_u$upper,   control = list(steptol = 10) ) #> Using the data supplied via the 'obs_data' argument. #> Using optimizer 'DEoptim'. #> Fitting a single data set/participant (cost function: 'neg_log_like'). The returned object will be the model itself. #> Starting optimizer 'DEoptim'  #> Optimization routine exited after 29 iterations. #> Final Parameters #> muc = 4.627 #> A = 0.084 #> ==> gave a neg_log_like of -369.167 print(fit) #> Class(es) dmc_dm, drift_dm #> Optimizer: DEoptim #> Convergence: TRUE #>  #> Parameter Values: #>          muc   b non_dec sd_non_dec  tau a      A alpha #> comp   4.627 0.6     0.3       0.02 0.04 2  0.084     4 #> incomp 4.627 0.6     0.3       0.02 0.04 2 -0.084     4 #>  #> Parameter Settings: #>        muc b non_dec sd_non_dec tau a A alpha #> comp   1   0 0       0          0   0 2 0     #> incomp 1   0 0       0          0   0 d 0     #>  #> Special Dependencies: #> A ~ incomp == -(A ~ comp) #>  #> Custom Parameters: #>        peak_l #> comp     0.04 #> incomp   0.04 #>  #> Deriving PDFS: #>   solver: kfe #>   values: sigma=1, t_max=1.5, dt=0.01, dx=0.01, nt=150, nx=200 #>  #> Cost Function: neg_log_like #>  #> Observed Data: 168 trials comp; 168 trials incomp #>    #### # Fit multiple individuals (separately; using bounded Nelder-Mead) l_u <- get_lower_upper(model) fit <- estimate_dm(   drift_dm_obj = model,   obs_data = data, # contains the data for two individuals   optimizer = \"nmkb\",   lower = l_u$lower, upper = l_u$upper, ) #> Using the data supplied via the 'obs_data' argument. #> Using optimizer 'nmkb'. #> Fitting the model separately to multiple participants (cost function:'neg_log_like'). The result will be a fit object of type 'fits_ids_dm'. print(fit) #> Fit approach: separately - classical #> Fitted model type: dmc_dm, drift_dm #> Optimizer: nmkb  #> Convergence: TRUE  #> N Individuals: 2  #> Average Trial Numbers: #>  168 trials comp; 168 trials incomp #> Cost Function: neg_log_like coef(fit) #> Object Type: coefs_dm #>  #>   ID   muc     A #> 1  1 4.627 0.084 #> 2  2 6.934 0.114 #>  #> (access the data.frame's columns/rows as usual)   ### # Fit to aggregated data (using unbounded Nelder-Mead) fit <- estimate_dm(   drift_dm_obj = model,   obs_data = data, # contains data for two individuals   optimizer = \"Nelder-Mead\",   approach = \"agg_c\" ) #> Using the data supplied via the 'obs_data' argument. #> Using optimizer 'Nelder-Mead'. #> Changing the 'cost_function' to 'rmse'. #> Aggregated data has been set to the model. #> Fitting the model to aggregated data across participants. The returned object will of type 'fits_agg_dm'. #> Starting optimizer 'Nelder-Mead' with the following starting values: #> muc=4, A=0.1 #> Optimization routine exited after 129 function evaluations #> Final Parameters #> muc = 5.77 #> A = 0.131 #> ==> gave a rmse of 0.024 print(fit) #> Fit approach: aggregated - classical #> Fitted model type: dmc_dm, drift_dm #> Optimizer: Nelder-Mead #> Convergence: TRUE #> N Individuals: 2  #> Average Trial Numbers: #>  168 trials comp; 168 trials incomp coef(fit) #>       muc         A  #> 5.7702593 0.1305267    ### # EXPERIMENTAL # Fit a single individual (using DE-MCMC; Bayesian; custom priors) fit <- estimate_dm(   drift_dm_obj = model,   obs_data = data[data$ID == 1,],   approach = \"sep_b\",   burn_in = 2, # this is usually way higher   samples = 2, # this too   n_chains = 10, # this too   mean = c(muc = 3, A = 0.9),   sd = c(muc = 2, A = 0.8), ) #> Using the data supplied via the 'obs_data' argument. #> Using optimizer 'DE-MCMC'. #> Fitting a single data set/participant using the Bayesian framework. The result will be a fit object of type 'mcmc_dm'. #> Finding starting values... #> Starting the sampling procedure print(fit) #> Sampler: DE-MCMC  #> Hierarchical: FALSE  #> No. Parameters: 2  #> No. Chains: 10  #> Iterations Per Chain: 2  coef(fit) #>       muc         A  #> 3.5762989 0.1580784    ### # EXPERIMENTAL # Fit multiple individuals (using DE-MCMC; hierarchical Bayesian) fit <- estimate_dm(   drift_dm_obj = model,   approach = \"hier_b\",   obs_data = data, # contains data for two individuals   burn_in = 2, # this is usually way higher   samples = 2, # this too   n_chains = 10 # this too ) #> Using the data supplied via the 'obs_data' argument. #> Using optimizer 'DE-MCMC'. #> Fitting the model hierarchically using a Bayesian framework. The result will be a fit object of type 'mcmc_dm' #> Finding starting values... #> Starting the sampling procedure print(fit) #> Sampler: DE-MCMC  #> Hierarchical: TRUE  #> No. Group-Level Parameters: 4  #> No. Chains: 10  #> Iterations Per Chain: 2  coef(fit) #>     M-muc     S-muc       M-A       S-A  #> 2.2452057 2.7738100 0.1012086 0.5637372"},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the Parameters of a drift_dm Model — estimate_model","title":"Estimate the Parameters of a drift_dm Model — estimate_model","text":"function deprecated dRiftDM version v.0.3.0, please use general estimate_dm() function. Old documentation: Find 'best' parameter settings fitting drift_dm models' predicted probability density functions (PDFs) observed data stored within respective object. fitting procedure done minimizing negative log-likelihood model. Users three options: Estimate parameters via Differential Evolution (Default) Estimate parameters via (bounded) Nelder-Mead Use Differential Evolution followed Nelder-Mead. See also vignette(\"dRiftDM\", \"dRiftDM\")","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the Parameters of a drift_dm Model — estimate_model","text":"","code":"estimate_model(   drift_dm_obj,   lower,   upper,   verbose = 0,   use_de_optim = TRUE,   use_nmkb = FALSE,   seed = NULL,   de_n_cores = 1,   de_control = list(reltol = 1e-08, steptol = 50, itermax = 200, trace = FALSE),   nmkb_control = list(tol = 1e-06) )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the Parameters of a drift_dm Model — estimate_model","text":"drift_dm_obj object inheriting drift_dm lower, upper numeric vectors lists, specifying lower upper bounds parameter optimized (see Details). verbose numeric, indicating amount information displayed. 0, information displayed (default). 1, basic information start Differential Evolution Nelder-Mead final estimation result given. 2, evaluation log-likelihood function shown. Note verbose independent information displayed DEoptim::DEoptim. use_de_optim logical, indicating whether Differential Evolution via DEoptim::DEoptim used. Default TRUE use_nmkb logical, indicating whether Nelder-Mead via dfoptim::nmkb used. Default FALSE. seed single numeric, providing seed Differential Evolution algorithm de_n_cores single numeric, indicating number cores use. Run parallel::detectCores() see many cores available machine. Note generally recommended use cores drastically slow machine additional task. de_control, nmkb_control lists additional control parameters passed DEoptim::DEoptim dfoptim::nmkb.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the Parameters of a drift_dm Model — estimate_model","text":"updated drift_dm_obj (estimated parameter values, log-likelihood, probability density functions first passage time)","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_model.html","id":"specifying-lower-upper","dir":"Reference","previous_headings":"","what":"Specifying lower/upper","title":"Estimate the Parameters of a drift_dm Model — estimate_model","text":"function estimate_model provides flexible way specifying search space; identical specifying parameter simulation space simulate_data.drift_dm. Users three options specify simulation space: Plain numeric vectors (much recommended). case, lower/upper must sorted accordance parameters flex_prms_obj object vary least one condition (call print(drift_dm_obj) look Parameter Settings output) Named numeric vectors. case lower/upper provide labels accordance parameters considered \"free\" least across conditions. flexible way lower/upper lists. case, list requires entry called \"default_values\" specifies named plain numeric vectors . list contains entry, behavior lower/upper already numeric vectors. However, lower/upper lists can also provide entries labeled specific conditions, contain named (!) numeric vectors parameter labels. modify value upper/lower parameter space respect specified parameters respective condition.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_model.html","id":"details-on-nelder-mead-and-differential-evolution","dir":"Reference","previous_headings":"","what":"Details on Nelder-Mead and Differential Evolution","title":"Estimate the Parameters of a drift_dm Model — estimate_model","text":"use_de_optim use_nmkb TRUE, Nelder-Mead follows Differential Evolution. Note Nelder-Mead requires set starting parameters either parameter values drift_dm_obj estimated parameter values Differential Evolution used. Default settings lead DEoptim::DEoptim stop algorithm unable reduce negative log-likelihood factor reltol * (abs(val) + reltol)steptol = 50 steps, reltol = 1e-8 (default itermax 200 steps reached). Similarly, dfoptim::nmkb stop absolute difference log-likelihood successive iterations tol = 1e-6.See DEoptim::DEoptim.control details dfoptim::nmkb information.","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_model_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Multiple Individuals and Save Results — estimate_model_ids","title":"Fit Multiple Individuals and Save Results — estimate_model_ids","text":"function deprecated dRiftDM version 0.3.0. Please use general estimate_dm() instead. NOTE: dRiftDM now supports multiple ways estimating model. ensure consistent function interface, individual fits longer saved disk fitting multiple participants. Instead, estimate_dm() directly returns object type fits_ids_dm, users can save manually desired. Old documentation: Provides wrapper around estimate_model fit multiple individuals. individual stored folder. folder also contain file drift_dm_fit_info.rds, containing main arguments function call. One call function considered \"fit procedure\". Fit procedures can loaded via load_fits_ids.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_model_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Multiple Individuals and Save Results — estimate_model_ids","text":"","code":"estimate_model_ids(   drift_dm_obj,   obs_data_ids,   lower,   upper,   fit_procedure_name,   fit_path,   fit_dir = \"drift_dm_fits\",   folder_name = fit_procedure_name,   seed = NULL,   force_refit = FALSE,   progress = 2,   start_vals = NULL,   ... )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_model_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Multiple Individuals and Save Results — estimate_model_ids","text":"drift_dm_obj object inheriting drift_dm estimated individual obs_data_ids. obs_data_ids data.frame, see obs_data. additional column ID necessary, identify single individual. lower, upper numeric vectors lists, providing parameter space, see estimate_model. fit_procedure_name character, providing name fitting procedure. name stored drift_dm_fit_info.rds identify fitting procedure, see also load_fits_ids. fit_path character, path, pointing location fits shall stored (.e., fit_dir created location). user perspective, path likely identical current working directory. fit_dir character, directory (multiple) fitting procedures can stored. directory exist yet, created via base::create.dir(fit_dir, recursive = TRUE) location provided fit_path. Default \"drift_dm_fits\". folder_name character, folder name storing individual model fits. variable just state name, path. Per default folder_name identical fit_procedure_name. seed numeric, seed make fitting procedure reproducable (relevant differential evolution, see estimate_model). Default NULL means seed. force_refit logical, TRUE individual fitting routine fitted . Default FALSE. progress numerical, indicating progress shall displayed. 0, progress shown. 1, currently fitted individual printed . 2, progressbar shown. Default 2. start_vals optional data.frame, providing values set calling estimate_model. Can used control starting values individual calling Nelder-Mead. Note effect DEoptim used (.e., setting use_de_optim = FALSE; see estimate_model). data.frame must provide column ID whose entries match ID column obs_data_ids, well column parameter model matching coef(drift_dm_obj, select_unique = TRUE). ... additional arguments passed estimate_model.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_model_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Multiple Individuals and Save Results — estimate_model_ids","text":"nothing (NULL; invisibly)","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/estimate_model_ids.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit Multiple Individuals and Save Results — estimate_model_ids","text":"Examples information can also found vignette(\"dRiftDM\", \"dRiftDM\"). developing fitting routine three levels files/folders mind: directory/folder named fit_dir multiple fitting routines can stored (default \"drift_dm_fits\") fitting routine folder name given folder_name (e.g., \"ulrich_flanker\", \"ulrich_simon\", ...) Within folder, file called drift_dm_fit_info.rds contains main information function call. , time last modifying/calling fitting routine, lower upper parameter boundaries, drift_dm_object fitted individual, original data set obs_data_ids, identifier fit_procedure_name. folder individual <individual>.rds file containing modified drift_dm_object.","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/flex_cust_prm.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify custom parameters — flex_cust_prm","title":"Specify custom parameters — flex_cust_prm","text":"function takes flex_prms_obj adds builds entry cust_prms allow custom parameters. examplary instruction \"peak_l = (-1)*tau\"","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/flex_cust_prm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify custom parameters — flex_cust_prm","text":"","code":"flex_cust_prm(flex_prms_obj, formula_instr)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/flex_cust_prm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify custom parameters — flex_cust_prm","text":"flex_prms_obj flex_prms object formula_instr string referring \"custom parameter combination\" (see modify_flex_prms)","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/flex_cust_prm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify custom parameters — flex_cust_prm","text":"modified flex_prms object respect cust_prms entry","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/flex_cust_prm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Specify custom parameters — flex_cust_prm","text":"entry cust_prms list entries expressions values. named list, either contains expression instructions calculate custom parameter (e.g., \"peak_l\") respective values. Values getting updated/calculated update_special_values() cust_prms exists two entries \"expressions\" values\". \"expressions\" contains named list, expressions referring prms_matrix (see flex_prms) calculate custom parameter (across conditions). \"values\" contain named list, named numeric vectors (names conditions, values calculated custom parameter values)","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/flex_fix_prms.html","id":null,"dir":"Reference","previous_headings":"","what":"Exclude parameters from being modified (i.e., fix it; internal docu) — flex_fix_prms","title":"Exclude parameters from being modified (i.e., fix it; internal docu) — flex_fix_prms","text":"function modifies (linear) internal list sets desired parameters (based instruction string) 0. indicates parameter altered within function x2prms_vals (.e., ' prm <!> conda')","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/flex_fix_prms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exclude parameters from being modified (i.e., fix it; internal docu) — flex_fix_prms","text":"","code":"flex_fix_prms(flex_prms_obj, formula_instr)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/flex_fix_prms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exclude parameters from being modified (i.e., fix it; internal docu) — flex_fix_prms","text":"flex_prms_obj flex_prms object formula_instr string referring \"fix\" (see modify_flex_prms)","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/flex_fix_prms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exclude parameters from being modified (i.e., fix it; internal docu) — flex_fix_prms","text":"modified flex_prms_obj respect (linear) internal list","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/flex_prms.html","id":null,"dir":"Reference","previous_headings":"","what":"Flex_Prms — flex_prms<-","title":"Flex_Prms — flex_prms<-","text":"Functions creating, accessing replacing, printing flex_prms object. object type flex_prms provides user-friendly way specify dependencies, parameter values etc. model.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/flex_prms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flex_Prms — flex_prms<-","text":"","code":"flex_prms(object, ...) <- value  # S3 method for class 'drift_dm' flex_prms(object, ..., eval_model = FALSE) <- value  flex_prms(object, ...)  # S3 method for class 'numeric' flex_prms(object, ..., conds, instr = NULL, messaging = NULL)  # S3 method for class 'flex_prms' flex_prms(object, ...)  # S3 method for class 'drift_dm' flex_prms(object, ...)  # S3 method for class 'flex_prms' print(   x,   ...,   round_digits = drift_dm_default_rounding(),   dependencies = TRUE,   cust_parameters = TRUE )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/flex_prms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flex_Prms — flex_prms<-","text":"object R object (see Details) ... additional arguments passed specific method. value object type flex_prms. eval_model logical, indicating model re-evaluated replacing flex_prms object (see re_evaluate_model). conds character vector, giving names model's conditions. values within conds used addressing data deriving model's predictions. instr optional string \"instructions\", see modify_flex_prms(). messaging optional logical, indicates messages shall displayed processing instr. x object type flex_prms round_digits integer, controls number digits shown printing flex_prms object. Default 3. dependencies logical, controlling summary special dependencies shall printed. cust_parameters logical, controlling summary custom parameters shall printed.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/flex_prms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flex_Prms — flex_prms<-","text":"specific value returned depends method called","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/flex_prms.html","id":"creating-an-object-of-type-flex-prms","dir":"Reference","previous_headings":"","what":"Creating an object of type flex_prms","title":"Flex_Prms — flex_prms<-","text":"Can achieved calling flex_prms() named numeric vector, thus calling underlying method flex_prms.numeric (see example ). case list class label \"flex_prms\" returned. containts three entries: nested list internal_list. list specifies dependencies restrains enforced upon parameters across conditions. Integers >= 1 indicate parameter estimated specific condition, conditions number refer single parameter. Integers == 0 indicate thtat parameter esitmated specific condition (.e., considered \"fixed\"). Expressions evaluated run time specify special dependencies among parameters. nested list linear_internal_list. list essentially contains information internal_list, parameters sorted can mapped integer vector (relevant depths package minimization routines). numeric matrix prms_matrix contains currently set values parameter across conditions. Per default, values parameter set equal across conditions. Additionally, parameter assumed restrained equal across conditions. values parameters given condition passed component functions (see comp_funs). (optional) list additional parameters cust_prms derived parameters prms_matrix.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/flex_prms.html","id":"accessing-an-object-of-type-flex-prms","dir":"Reference","previous_headings":"","what":"Accessing an object of type flex_prms","title":"Flex_Prms — flex_prms<-","text":"Users can access/get flex_prms object calling flex_prms() object type drift_dm, fits_ids_dm (see estimate_model_ids()), flex_prms. case, stored flex_prms object returned.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/flex_prms.html","id":"replacing-an-object-of-type-flex-prms","dir":"Reference","previous_headings":"","what":"Replacing an object of type flex_prms","title":"Flex_Prms — flex_prms<-","text":"flex_prms object stored within object type drift_dm can replaced calling generic flex_prms<- replacement function. case, modified drift_dm object returned.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/flex_prms.html","id":"printing-an-object-of-type-flex-prms","dir":"Reference","previous_headings":"","what":"Printing an object of type flex_prms","title":"Flex_Prms — flex_prms<-","text":"print.flex_prms() method invisibly returns supplied flex_prms object.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/flex_prms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Flex_Prms — flex_prms<-","text":"Objects type flex_prms can modified using generic modify_flex_prms() function corresponding set \"instructions\" (see respective function details). flex_prms() generic function. called named numeric vector, create object type flex_prms (requires conds specified). called data types, gives respective flex_prms object flex_prms<-() generic replacement function. Currently supports objects type drift_dm. replace/update model new instance type flex_prms.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/flex_prms.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Flex_Prms — flex_prms<-","text":"replacement function drift_dm objects. replacing solver settings model fitted (.e., fits_ids_dm object) make sense.","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/flex_prms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flex_Prms — flex_prms<-","text":"","code":"# Create a flex_prms object ----------------------------------------------- conds <- c(\"one\", \"two\") prms <- c(muc = 3, b = 0.5) one_instr <- \"muc ~ one + two\" flex_prms_obj <- flex_prms(   prms,   conds = conds,   instr = one_instr ) print(flex_prms_obj) #> Parameter Values: #>     muc   b #> one   3 0.5 #> two   3 0.5 #>  #> Parameter Settings: #>     muc b #> one   1 3 #> two   2 3 #>    # Access a flex_prms object of a model ------------------------------------ my_model <- ratcliff_dm() # the Ratcliff DDM comes with dRiftDM print(flex_prms(my_model)) #> Parameter Values: #>      muc   b non_dec #> null   3 0.6     0.3 #>  #> Parameter Settings: #>      muc b non_dec #> null   1 2       3 #>    # Replace the flex_prms object of a model --------------------------------- # create a new flex_prms object conds <- c(\"one\", \"two\") prms <- c(muc = 3, b = 0.6, non_dec = 0.3) new_flex_prms_obj <- flex_prms(   prms,   conds = conds )  flex_prms(my_model) <- new_flex_prms_obj  # acess the new flex_prms object print(flex_prms(my_model)) #> Parameter Values: #>     muc   b non_dec #> one   3 0.6     0.3 #> two   3 0.6     0.3 #>  #> Parameter Settings: #>     muc b non_dec #> one   1 2       3 #> two   1 2       3 #>    # Control the print method ------------------------------------------------- dmc_model <- dmc_dm() # another, more complex, model; comes with dRiftDM print(flex_prms(dmc_model), round_digits = 1, cust_parameters = FALSE) #> Parameter Values: #>        muc   b non_dec sd_non_dec tau a    A alpha #> comp     4 0.6     0.3          0   0 2  0.1     4 #> incomp   4 0.6     0.3          0   0 2 -0.1     4 #>  #> Parameter Settings: #>        muc b non_dec sd_non_dec tau a A alpha #> comp   1   2 3       4          5   0 6 7     #> incomp 1   2 3       4          5   0 d 7     #>  #> Special Dependencies: #> A ~ incomp == -(A ~ comp) #>"},{"path":"https://bucky2177.github.io/dRiftDM/reference/flex_restrain_prms.html","id":null,"dir":"Reference","previous_headings":"","what":"Set parameters as equal across conditions — flex_restrain_prms","title":"Set parameters as equal across conditions — flex_restrain_prms","text":"function takes flex_prms object modifies (linear) internal list parameter set equal across multiple conditions, according instruction formula (.e., ' prm ~! conda + condb)","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/flex_restrain_prms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set parameters as equal across conditions — flex_restrain_prms","text":"","code":"flex_restrain_prms(flex_prms_obj, formula_instr)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/flex_restrain_prms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set parameters as equal across conditions — flex_restrain_prms","text":"flex_prms_obj flex_prms object formula_instr string referring \"restrain\" (see modify_flex_prms)","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/flex_restrain_prms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set parameters as equal across conditions — flex_restrain_prms","text":"modified flex_prms object updated (linear) internal list","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/flex_special_dependency.html","id":null,"dir":"Reference","previous_headings":"","what":"Set special dependencies (internal docu) — flex_special_dependency","title":"Set special dependencies (internal docu) — flex_special_dependency","text":"Sets special dependencies parameters depend parameters. (.e., 'prmX ~ conda == -(prmY ~ condb)')","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/flex_special_dependency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set special dependencies (internal docu) — flex_special_dependency","text":"","code":"flex_special_dependency(flex_prms_obj, formula_instr)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/flex_special_dependency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set special dependencies (internal docu) — flex_special_dependency","text":"flex_prms_obj flex_prms object formula_instr string referring \"special dependency\" (see modify_flex_prms)","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/flex_special_dependency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set special dependencies (internal docu) — flex_special_dependency","text":"modified flex_prms_object modified (linear) internal list modified parameter custom parameter matrices","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/flex_specific_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a specific value to the parameter matrix (internal docu) — flex_specific_value","title":"Set a specific value to the parameter matrix (internal docu) — flex_specific_value","text":"function takes flex_prms_obj sets certain values parameter matrix, based given instruction string (.e., ' prm ~ conda => 0.3)","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/flex_specific_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a specific value to the parameter matrix (internal docu) — flex_specific_value","text":"","code":"flex_specific_value(flex_prms_obj, formula_instr)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/flex_specific_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a specific value to the parameter matrix (internal docu) — flex_specific_value","text":"flex_prms_obj flex_prms object formula_instr string referring \"set\" (see modify_flex_prms)","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/flex_specific_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set a specific value to the parameter matrix (internal docu) — flex_specific_value","text":"updated flex_prms object modified prms_matrix object, (applicable) modified cust_prms matrix","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/flex_vary_prms.html","id":null,"dir":"Reference","previous_headings":"","what":"Allow parameters to vary — flex_vary_prms","title":"Allow parameters to vary — flex_vary_prms","text":"function takes object type flex_prms instruction string refers \"vary\" instruction (.e., ab ~ cd + ds). string broken unique parameters introduced condition x parameter combinations","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/flex_vary_prms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Allow parameters to vary — flex_vary_prms","text":"","code":"flex_vary_prms(flex_prms_obj, formula_instr)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/flex_vary_prms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Allow parameters to vary — flex_vary_prms","text":"flex_prms_obj object type flex_prms formula_instr string referring \"vary\" (see modify_flex_prms)","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/flex_vary_prms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Allow parameters to vary — flex_vary_prms","text":"updated flex_prms_obj updated (linear) internal list","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/full_crossover.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a Full Crossover Step Using Differential Evolution — full_crossover","title":"Perform a Full Crossover Step Using Differential Evolution — full_crossover","text":"function updates chain's parameters proposing new values using differential evolution strategy. chain k, two chains m n randomly selected, proposal generated via: prms_k + gamma * (prms_m - prms_n) + noise, gamma = 2.38 / sqrt(2 * n_prms) noise uniform perturbation controlled b. proposal accepted Metropolis probability via call_log_posterior_m(), accepted proposals replace current values.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/full_crossover.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a Full Crossover Step Using Differential Evolution — full_crossover","text":"","code":"full_crossover(   prms_across_chains,   pis_across_chains,   log_likes_across_chains,   gamma = NULL,   b = 0.001,   ... )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/full_crossover.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a Full Crossover Step Using Differential Evolution — full_crossover","text":"prms_across_chains numeric matrix dimension p × n, p number parameters n number chains. column contains current parameter vector chain. pis_across_chains numeric vector length n, containing current log-posterior values chain. log_likes_across_chains numeric vector length n, containing current log-likelihood values chain. gamma single numeric tuning parameter, scales difference parameters. NULL, defaults 2.38 / sqrt(2 * n_prms) b small numeric value used perturb proposal parameters avoid degeneracy. ... additional arguments passed call_log_posterior_m().","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/full_crossover.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a Full Crossover Step Using Differential Evolution — full_crossover","text":"list following components: new_prms_across_chains: updated parameter matrix shape p × n. new_pis_across_chains: updated vector log-posterior values. new_log_likes_across_chains: updated vector log-likelihood values.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/get_avg_trials.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute average trials per condition across individuals — get_avg_trials","title":"Compute average trials per condition across individuals — get_avg_trials","text":"internal helper — assumes ID appears set conditions column Cond. counts trials per ID×Cond averages across ID.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/get_avg_trials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute average trials per condition across individuals — get_avg_trials","text":"","code":"get_avg_trials(obs_data_ids)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/get_avg_trials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute average trials per condition across individuals — get_avg_trials","text":"obs_data_ids data frame columns ID Cond; one row per trial.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/get_avg_trials.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute average trials per condition across individuals — get_avg_trials","text":"list : N: number unique individuals avg_trials: named numeric vector average trials per condition","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/get_default_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get default/fall back component functions — get_default_functions","title":"Get default/fall back component functions — get_default_functions","text":"arguments provided NULL, respective argument simply returned. NULL, default/fall back component function returned respective component. function called fill non-specified component functions calling drift_dm().","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/get_default_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get default/fall back component functions — get_default_functions","text":"","code":"get_default_functions(   mu_fun = NULL,   mu_int_fun = NULL,   x_fun = NULL,   b_fun = NULL,   dt_b_fun = NULL,   nt_fun = NULL )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/get_default_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get default/fall back component functions — get_default_functions","text":"mu_fun drift rate function mu_int_fun integral drift rate function x_fun starting point function b_fun boundary function dt_b_fun derivative boundary function nt_fun non-decision time function","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/get_default_functions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get default/fall back component functions — get_default_functions","text":"list mu_fun, mu_int_fun, x_fun, b_fun, dt_b_fun, nt_fun, either supplied component functions added/filled default component functions (argument NULL).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/get_default_functions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get default/fall back component functions — get_default_functions","text":"defaults... mu_fun -> constant drift rate 3 (.e., vector 0s) mu_int_fun -> constant drift rate 3 (.e., vector 3 times t_vec) x_fun -> dirac delta zero x_dirac_0() b_fun -> constant boundary 0.5 (.e., vector 0.5s) dt_b_fun -> derivate constant boundary (.e., vector 0s). dt_b_constant() nt_fun -> constant non-decision time 0.3 (.e., vector dirac delta 0.5).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/get_default_prior_settings.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Prior Functions for Model Parameters — get_default_prior_settings","title":"Generate Prior Functions for Model Parameters — get_default_prior_settings","text":"function creates prior distribution functions model parameter drift diffusion model (DDM), depending specified hierarchical level. returns log-density functions , applicable, random-sample generators based user-defined prior settings.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/get_default_prior_settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Prior Functions for Model Parameters — get_default_prior_settings","text":"","code":"get_default_prior_settings(   drift_dm_obj,   level,   means = NULL,   sds = NULL,   lower = NULL,   upper = NULL,   shapes = NULL,   rates = NULL )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/get_default_prior_settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Prior Functions for Model Parameters — get_default_prior_settings","text":"drift_dm_obj drift_dm model object. level character string, specifying modeling level. Must one : \"hyper\" (group-level priors), \"lower\" (individual-level priors given group-level parameters), \"none\" (non-hierarchical setting). means named numeric vector list, specifying prior means parameter. Missing values filled first matching parameter drift_dm_obj sds named numeric vector list standard deviations. Missing NULL values replaced corresponding values mean. lower, upper optional numeric vectors lists specifying lower upper truncation bounds prior distribution. Defaults -Inf Inf, respectively. shapes, rates optional numeric vectors lists specifying shape rate parameter group-level standard deviations (used hyper-level). Defaults 1.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/get_default_prior_settings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Prior Functions for Model Parameters — get_default_prior_settings","text":"named list two elements: log_dens_priors: named list functions. function returns log-density parameter value, based chosen prior settings. r_priors: named list functions sampling specified prior distributions.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/get_default_prior_settings.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Prior Functions for Model Parameters — get_default_prior_settings","text":"prior parameter-specific wrapped using purrr::partial() downstream sampling density evaluation can performed easily. hyper-level, functions d_default_prior_hyper() r_default_prior_hyper() used. lower-level, functions dtnorm() rtnorm() used. input arguments means, sds, lowers, uppers, shapes, rates handled function get_parameters_smart().","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/get_example_fits.html","id":null,"dir":"Reference","previous_headings":"","what":"Auxiliary Function to load a fits_ids_dm, fits_agg_dm, or mcmc_dm object — get_example_fits","title":"Auxiliary Function to load a fits_ids_dm, fits_agg_dm, or mcmc_dm object — get_example_fits","text":"function merely helper functions create object type fits_ids_dm, fits_agg_dm, mcmc_dm. used example code.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/get_example_fits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Auxiliary Function to load a fits_ids_dm, fits_agg_dm, or mcmc_dm object — get_example_fits","text":"","code":"get_example_fits(class, hierarchical = FALSE)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/get_example_fits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Auxiliary Function to load a fits_ids_dm, fits_agg_dm, or mcmc_dm object — get_example_fits","text":"class string either \"fits_ids_dm\", \"fits_agg_dm\", \"mcmc_dm\" (can abbreviated) hierarchical logical, relevant class = \"mcmc_dm\". TRUE, object hierarchical fit returned. FALSE, object individual fit returned.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/get_example_fits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Auxiliary Function to load a fits_ids_dm, fits_agg_dm, or mcmc_dm object — get_example_fits","text":"object type fits_ids_dm, fits_agg_dm, mcmc_dm, mimicking result calling estimate_dm().","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/get_example_fits.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Auxiliary Function to load a fits_ids_dm, fits_agg_dm, or mcmc_dm object — get_example_fits","text":"\"fits_ids_dm\", returned object comprises DMC (see dmc_dm()) fitted three participants ulrich_flanker_data. \"fits_agg_dm\", returned object comprises Ratcliff model (see ratcliff_dm()) fitted synthetic data three participants. \"mcmc_dm\" hierarchical = FALSE, returned object comprises Ratcliff model (see ratcliff_dm()) fitted synthetic data one participant. \"mcmc_dm\" hierarchical = TRUE, returned object comprises Ratcliff model (see ratcliff_dm()) fitted synthetic data ten participants.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/get_example_fits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Auxiliary Function to load a fits_ids_dm, fits_agg_dm, or mcmc_dm object — get_example_fits","text":"","code":"get_example_fits(class = \"fits_agg\") #> Fit approach: aggregated - classical #> Fitted model type: ratcliff_dm, drift_dm #> Optimizer: nmkb #> Convergence: TRUE #> N Individuals: 3  #> Average Trial Numbers: #>  100 trials null"},{"path":"https://bucky2177.github.io/dRiftDM/reference/get_lower_upper.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Default Parameter Ranges for a Model — get_lower_upper","title":"Get Default Parameter Ranges for a Model — get_lower_upper","text":"get_lower_upper() returns suggested default values parameter bounds drift_dm model. function inspects model's component functions (e.g., drift, boundary, non-decision time, start) provides heuristic defaults pre-built components. parameters currently considered free model returned.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/get_lower_upper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Default Parameter Ranges for a Model — get_lower_upper","text":"","code":"get_lower_upper(object, ...)  # S3 method for class 'drift_dm' get_lower_upper(object, ..., warn = TRUE)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/get_lower_upper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Default Parameter Ranges for a Model — get_lower_upper","text":"object drift_dm model. ... additional arguments passed forward respective method. warn single logical, TRUE issue warning listing components parameters defaults provided.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/get_lower_upper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Default Parameter Ranges for a Model — get_lower_upper","text":"list two named numeric vectors: lower — suggested lower bounds free parameters upper — suggested upper bounds free parameters","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/get_lower_upper.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Default Parameter Ranges for a Model — get_lower_upper","text":"Supported components include: mu_constant, mu_dmc, mu_ssp, b_constant, x_uniform, x_beta, nt_constant, nt_uniform, nt_truncated_normal. defaults use model's discretization (dt, dx) ensure sensible minima. component recognized (refers currently unsupported components), defaults provided component. warn = TRUE, single warning lists components without defaults free parameters remain unmatched. case, user add missing parameter ranges attempting fit model. default ranges heuristics intended provide reasonable starting point new users. guaranteed appropriate every model data set. Always review , needed, adjust returned values needed.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/get_lower_upper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Default Parameter Ranges for a Model — get_lower_upper","text":"","code":"# get a model for the example model <- dmc_dm(dx = .005, dt = 0.005, obs_data = dmc_synth_data)  # get the parameter ranges lu <- get_lower_upper(model) lu$lower #>        muc          b    non_dec sd_non_dec        tau          A      alpha  #>      0.500      0.150      0.150      0.005      0.015      0.005      2.000  lu$upper #>        muc          b    non_dec sd_non_dec        tau          A      alpha  #>       9.00       1.20       0.60       0.10       0.25       0.30       8.00   # then continue to estimate # estimate_dm(model, lower = lu$lower, upper = lu$upper, optimizer = \"nmkb\")"},{"path":"https://bucky2177.github.io/dRiftDM/reference/get_parameters_smart.html","id":null,"dir":"Reference","previous_headings":"","what":"Turn default/special parameter specifications to vectors — get_parameters_smart","title":"Turn default/special parameter specifications to vectors — get_parameters_smart","text":"function used depths map parameter inputs parameters model. One application get search space vector, matching free parameters model. applications map, example, mean values free parameters model. Relevant users use \"default parameters\" approach specify parameter labels assume package figures parameter relates across conditions (see simulate_data). comes handy, freeing parameter across conditions, search space remains (otherwise, user always adapt vectors lower/upper match x2prms_vals)","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/get_parameters_smart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Turn default/special parameter specifications to vectors — get_parameters_smart","text":"","code":"get_parameters_smart(   drift_dm_obj,   input_a,   input_b = NULL,   labels = TRUE,   is_l_u = TRUE,   fill_up_with = NULL )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/get_parameters_smart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Turn default/special parameter specifications to vectors — get_parameters_smart","text":"drift_dm_obj object type drift_dm input_a, input_b either atomic vector list (see create_matrix_smart) labels optional logical, TRUE, returned vectors unique parameter labels according prm_cond_combo_2_labels. is_l_u optional logical, TRUE, warning thrown input_a leads larger values input_b. Useful input_a input_b span (search) space. fill_up_with optional values used fill returned vectors parameters specified input_a input_b (requires least one parameter specified).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/get_parameters_smart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Turn default/special parameter specifications to vectors — get_parameters_smart","text":"list two entries named vec_a/vec_b. length names (requested) matches coef(model, select_unique = TRUE). input_a /input_b NULL, respective entry vec_a/vec_b NULL well.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/get_parameters_smart.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Turn default/special parameter specifications to vectors — get_parameters_smart","text":"function first gets unique parameters across conditions using prms_cond_combo. unique parameter labels forwarded create_matrix_smart, together (!) conditions model input_a/input_b arguments. Subsequently, created matrices wrangled vectors accordance prms_cond_combo. vectors passed back.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/get_subset_chains.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a Subset of MCMC Chains — get_subset_chains","title":"Extract a Subset of MCMC Chains — get_subset_chains","text":"calling estimate_bayesian(), MCMC results packed mcmc_dm object. function used depths dRiftDM extract relevant array MCMC samples, depending whether model hierarchical whether participant ID provided.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/get_subset_chains.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a Subset of MCMC Chains — get_subset_chains","text":"","code":"get_subset_chains(chains_obj, id = NULL)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/get_subset_chains.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a Subset of MCMC Chains — get_subset_chains","text":"chains_obj object classmcmc_dm. id optional single numeric character, specifying ID participant extract individual-level samples hierarchical model. Ignored non-hierarchical models.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/get_subset_chains.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a Subset of MCMC Chains — get_subset_chains","text":"3D array MCMC samples. first dimension indicates parameters, second dimension chains, third dimension iterations","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/hist.coefs_dm.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Parameter Distribution(s) — hist.coefs_dm","title":"Plot Parameter Distribution(s) — hist.coefs_dm","text":"function creates histogram parameter coefs_dm object, resulting call coef.fits_ids_dm.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/hist.coefs_dm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Parameter Distribution(s) — hist.coefs_dm","text":"","code":"# S3 method for class 'coefs_dm' hist(   x,   ...,   conds = NULL,   col = NULL,   xlim = NULL,   ylim = NULL,   xlab = \"value\",   ylab = NULL,   bundle_plots = TRUE )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/hist.coefs_dm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Parameter Distribution(s) — hist.coefs_dm","text":"x object class coefs_dm (see coef.fits_ids_dm) ... additional graphical arguments passed graphics::hist(). supported plot probability arguments (latter can controlled via supported freq argument). plotting arguments, see also set_default_arguments(). conds character vector specifying conditions plot. Defaults available conditions. col character vector, specifying colors condition, conditions present. xlim numeric vector length 2, specifying x-axis limits. ylim numeric vector length 2, specifying y-axis limits. xlab, ylab character strings x- y-axis labels. bundle_plots logical, indicating whether display separate panels single plot layout (FALSE), plot separately (TRUE).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/hist.coefs_dm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Parameter Distribution(s) — hist.coefs_dm","text":"Nothing (NULL; invisibly)","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/hist.coefs_dm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Parameter Distribution(s) — hist.coefs_dm","text":"hist.coefs_dm function designed visualizing parameter distributions. multiple conditions present, overlays histograms condition adjustable transparency. bundle_plots set TRUE, histograms parameter displayed grid layout within single graphics device. function customization options, limited. want highly customized histogram, best create using R's graphics::hist() function (see examples ).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/hist.coefs_dm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Parameter Distribution(s) — hist.coefs_dm","text":"","code":"# get an auxiliary fit procedure result (see the function load_fits_ids) all_fits <- get_example_fits(\"fits_ids\") coefs <- coef(all_fits) print(coefs) #> Object Type: coefs_dm #>  #>   ID   muc     b non_dec sd_non_dec   tau     A alpha #> 1  1 4.700 0.446   0.341      0.032 0.032 0.102 6.605 #> 2  2 4.696 0.391   0.297      0.041 0.101 0.089 5.038 #> 3  3 5.960 0.626   0.318      0.012 0.110 0.195 3.334 #>  #> (access the data.frame's columns/rows as usual) hist(coefs, bundle_plots = FALSE) # calls hist.coefs_dm method of dRiftDM         # how to fall back to R's hist() function for heavy customization coefs <- unpack_obj(coefs) # provides the plain data.frame hist(coefs$muc, main = expression(mu[c])) # calls graphics::hist()"},{"path":"https://bucky2177.github.io/dRiftDM/reference/internal_aggregate.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate Data Frame Columns by Group — internal_aggregate","title":"Aggregate Data Frame Columns by Group — internal_aggregate","text":"internal function aggregate columns data frame across \"ID\" considering set grouping columns. retains class attriubtes input data.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/internal_aggregate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate Data Frame Columns by Group — internal_aggregate","text":"","code":"internal_aggregate(data, group_cols)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/internal_aggregate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate Data Frame Columns by Group — internal_aggregate","text":"data data.frame containing data aggregated. include grouping columns, \"ID\" column, columns aggregation shall take place. group_cols character vector specifying names columns group aggregation.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/internal_aggregate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate Data Frame Columns by Group — internal_aggregate","text":"data.frame containing aggregated data.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/internal_aggregate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregate Data Frame Columns by Group — internal_aggregate","text":"internal_aggregate identifies DV columns group_cols \"ID\". calculates mean DV columns, grouped specified columns. Columns specified group_cols part data ignored silently.","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/internal_list_to_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Turn an internal list to a matrix — internal_list_to_matrix","title":"Turn an internal list to a matrix — internal_list_to_matrix","text":"function wrangles internal list character matrix show parameter relates across conditions","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/internal_list_to_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Turn an internal list to a matrix — internal_list_to_matrix","text":"","code":"internal_list_to_matrix(internal_list)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/internal_list_to_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Turn an internal list to a matrix — internal_list_to_matrix","text":"internal_list internal list flex_prms object","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/internal_list_to_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Turn an internal list to a matrix — internal_list_to_matrix","text":"character matrix parameter labels (columns) conditions (rows)","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/is_empty.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an object of length <= 1 is either empty or contains entry with ","title":"Check if an object of length <= 1 is either empty or contains entry with ","text":"Check object length <= 1 either empty contains entry \"\"","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/is_empty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an object of length <= 1 is either empty or contains entry with ","text":"","code":"is_empty(x)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/is_empty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an object of length <= 1 is either empty or contains entry with ","text":"x single value empty vector","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/is_empty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an object of length <= 1 is either empty or contains entry with ","text":"TRUE FALSE otherwise","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/is_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an object is a valid numeric vector — is_numeric","title":"Check if an object is a valid numeric vector — is_numeric","text":"function verifies whether input numeric vector missing (NA, NaN) infinite (Inf -Inf) values.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/is_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an object is a valid numeric vector — is_numeric","text":"","code":"is_numeric(x)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/is_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an object is a valid numeric vector — is_numeric","text":"x object check.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/is_numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an object is a valid numeric vector — is_numeric","text":"logical value: TRUE input numeric vector without missing infinite values, otherwise FALSE.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/linearize_internal_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Relabel the internal list — linearize_internal_list","title":"Relabel the internal list — linearize_internal_list","text":"entries internal list either digits (0-x) expressions. ensure valid mapping values input vector (done optimizer provides input parameters), linearize list (done whenever modifying list, see different flex_* functions )","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/linearize_internal_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relabel the internal list — linearize_internal_list","text":"","code":"linearize_internal_list(internal_list)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/linearize_internal_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relabel the internal list — linearize_internal_list","text":"internal_list internal list, entries parameter x condition combination","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/linearize_internal_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Relabel the internal list — linearize_internal_list","text":"another list, remapped digits increasing order, leaving expressions digits 0 untouched.","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/load_fits_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Estimates of a Fit Procedure — load_fits_ids","title":"Load Estimates of a Fit Procedure — load_fits_ids","text":"function deprecated dRiftDM version 0.3.0, dRiftDM longer saves model fits disk fitting multiple participants. estimating multiple individuals new function estimate_dm(), object type fits_ids_dm returned directly.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/load_fits_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Estimates of a Fit Procedure — load_fits_ids","text":"","code":"load_fits_ids(   path = \"drift_dm_fits\",   fit_procedure_name = \"\",   detailed_info = FALSE,   check_data = TRUE,   progress = 2 )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/load_fits_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Estimates of a Fit Procedure — load_fits_ids","text":"path character, path pointing folder directory containing individual model fits. fit_procedure_name character, optional name identifies fit procedure loaded detailed_info logical, controls amount information displayed case multiple fit procedures found user prompted explicitly choose one check_data logical, data checked passing back? checks observed data properties model. Default TRUE progress numerical, indicating progress shall depicted. 0, progress shown. 1, basic infos checking progress shown. 2, multiple progressbars shown. Default 2.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/load_fits_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Estimates of a Fit Procedure — load_fits_ids","text":"load_fits_ids(), object type fits_ids_dm, essentially list two entries: drift_dm_fit_info, containing list main arguments estimate_model_ids originally called, including time-stamp. all_fits, containing list modified/fitted drift_dm objects. list's entry named according individuals' identifier (.e., ID). print.fits_ids_dm(), supplied fit_ids_dm object x (invisible return).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/load_fits_ids.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load Estimates of a Fit Procedure — load_fits_ids","text":"Old documentation: function loads results fit procedure model fitted multiple individuals (see estimate_model_ids). also function creates object type fits_ids_dm. respect logic outlined details estimate_model_ids organization fit procedures, path either point directory (potentially) multiple fit routines specific folder individual fits. either case intended location recursively searched files named drift_dm_fit_info.rds. fit procedure uniquely located, either one fit routine found intended location one drift_dm_fit_info.rds contains optional identifier specified fit_procedure_name, individual model fits including information fit_procedure_name loaded returned. case multiple fit procedures identified, user prompted utils::menu, listing information possible candidates. intended fit procedure can interactively chosen user. amount displayed information controlled via detailed_info. print() method objects type fits_ids_dm prints basic information fit procedure name, fitted model, time (last) call, number individual data sets.","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/logLik.drift_dm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Log-Likelihood for a drift_dm Object — logLik.drift_dm","title":"Extract Log-Likelihood for a drift_dm Object — logLik.drift_dm","text":"method extracts log-likelihood drift_dm object possible.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/logLik.drift_dm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Log-Likelihood for a drift_dm Object — logLik.drift_dm","text":"","code":"# S3 method for class 'drift_dm' logLik(object, ...)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/logLik.drift_dm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Log-Likelihood for a drift_dm Object — logLik.drift_dm","text":"object drift_dm object containing observed data ... additional arguments","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/logLik.drift_dm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Log-Likelihood for a drift_dm Object — logLik.drift_dm","text":"logLik object containing log-likelihood value drift_dm object. value attributes number observations (nobs) number model parameters (df). Returns NULL log-likelihood available (e.g., model observed data attached).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/logLik.drift_dm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Log-Likelihood for a drift_dm Object — logLik.drift_dm","text":"","code":"# get a pre-built model and a data set for demonstration purpose # (when creating the model, set the discretization to reasonable values) a_model <- dmc_dm(t_max = 1.5, dx = .01, dt = .005) obs_data(a_model) <- dmc_synth_data logLik(a_model) #> 'log Lik.' 124.996 (df=7)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/logLik.fits_ids_dm.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Model Statistics for fits_ids_dm Object — logLik.fits_ids_dm","title":"Extract Model Statistics for fits_ids_dm Object — logLik.fits_ids_dm","text":"methods wrappers extract specific model fit statistics (log-likelihood, AIC, BIC) model fits_ids_dm object.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/logLik.fits_ids_dm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Model Statistics for fits_ids_dm Object — logLik.fits_ids_dm","text":"","code":"# S3 method for class 'fits_ids_dm' logLik(object, ...)  # S3 method for class 'fits_ids_dm' AIC(object, ..., k = 2)  # S3 method for class 'fits_ids_dm' BIC(object, ...)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/logLik.fits_ids_dm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Model Statistics for fits_ids_dm Object — logLik.fits_ids_dm","text":"object fits_ids_dm object (see estimate_model_ids) ... additional arguments (currently used) k numeric; penalty parameter AIC calculation. Defaults 2 (standard AIC).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/logLik.fits_ids_dm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Model Statistics for fits_ids_dm Object — logLik.fits_ids_dm","text":"object type fit_stats containing respective statistic one column (named Log_Like, AIC, BIC) corresponding ID column. statistics calculated, function returns NULL.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/logLik.fits_ids_dm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Model Statistics for fits_ids_dm Object — logLik.fits_ids_dm","text":"function retrieves relevant statistics calling calc_stats type = \"fit_stats\" selects columns ID required statistic.","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/logLik.fits_ids_dm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Model Statistics for fits_ids_dm Object — logLik.fits_ids_dm","text":"","code":"# get an auxiliary fits_ids object for demonstration purpose; # such an object results from calling load_fits_ids all_fits <- get_example_fits(\"fits_ids_dm\")  # AICs AIC(all_fits) #> Type of Statistic: fit_stats #>  #>   ID      AIC #> 1  1 -785.129 #> 2  2 -741.929 #> 3  3 -931.496 #>  #> (access the data.frame's columns/rows as usual)  # BICs BIC(all_fits) #> Type of Statistic: fit_stats #>  #>   ID      BIC #> 1  1 -758.410 #> 2  2 -715.251 #> 3  3 -904.776 #>  #> (access the data.frame's columns/rows as usual)  # Log-Likelihoods logLik(all_fits) #> Type of Statistic: fit_stats #>  #>   ID Log_Like #> 1  1  399.565 #> 2  2  377.965 #> 3  3  472.748 #>  #> (access the data.frame's columns/rows as usual)  # All unique and free parameters coef(all_fits) #> Object Type: coefs_dm #>  #>   ID   muc     b non_dec sd_non_dec   tau     A alpha #> 1  1 4.700 0.446   0.341      0.032 0.032 0.102 6.605 #> 2  2 4.696 0.391   0.297      0.041 0.101 0.089 5.038 #> 3  3 5.960 0.626   0.318      0.012 0.110 0.195 3.334 #>  #> (access the data.frame's columns/rows as usual)  # Or all parameters across all conditions coef(all_fits, select_unique = FALSE) #> Object Type: coefs_dm #>  #>   ID   Cond   muc     b non_dec sd_non_dec   tau a      A alpha peak_l #> 1  1   comp 4.700 0.446   0.341      0.032 0.032 2  0.102 6.605  0.032 #> 2  1 incomp 4.700 0.446   0.341      0.032 0.032 2 -0.102 6.605  0.032 #> 3  2   comp 4.696 0.391   0.297      0.041 0.101 2  0.089 5.038  0.101 #> 4  2 incomp 4.696 0.391   0.297      0.041 0.101 2 -0.089 5.038  0.101 #> 5  3   comp 5.960 0.626   0.318      0.012 0.110 2  0.195 3.334  0.110 #> 6  3 incomp 5.960 0.626   0.318      0.012 0.110 2 -0.195 3.334  0.110 #>  #> (access the data.frame's columns/rows as usual)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/log_posterior_hyper.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional Log-Posterior Distributions for MCMC Sampling — log_posterior_hyper","title":"Conditional Log-Posterior Distributions for MCMC Sampling — log_posterior_hyper","text":"functions compute conditional log-posterior distributions used (hierarchical) MCMC sampler.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/log_posterior_hyper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditional Log-Posterior Distributions for MCMC Sampling — log_posterior_hyper","text":"","code":"log_posterior_hyper(   phi_j_mat,   theta_j_mat,   log_prior_hyper_fun,   log_prior_lower_fun,   temperatures,   suppress_warnings = TRUE )  log_posterior_lower(   thetas_one_subj_mat,   all_phis_mat,   model_subj,   log_prior_lower_funs,   temperatures,   suppress_warnings = TRUE )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/log_posterior_hyper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditional Log-Posterior Distributions for MCMC Sampling — log_posterior_hyper","text":"phi_j_mat numeric matrix current group-level parameters one individual-level parameter. must 2 x n_chains provide mean standard deviation; order. theta_j_mat numeric matrix individual-level parameter values across individuals chains one model parameter. Must n_chains x n_subj. log_prior_hyper_fun function returns log-prior density hyperparameters. Must single function (list functions) must accept phi_j_mat input. log_prior_lower_fun function returns log-prior density individual parameter values given mean standard deviation group-level (stored phi_j_mat). Must single function (list functions) must accept theta_j_mat first argument input, mean standard deviation arguments mean sd (vectorized). temperatures numeric vector temperature scaling values, one per chain, used applying tempered inference (e.g., TIDE). suppress_warnings logical, TRUE, warnings created log_prior_hyper_fun log_prior_lower_fun(s) suppressed. default true, beginning MCMC sampler implausible proposals provided can yield missing values warnings. thetas_one_subj_mat named matrix lower-level parameters single participant. row represents one parameter, column one chain. all_phis_mat named matrix current group-level parameters. mean group-level parameter must named \"M-<param>\" standard deviation \"S-<param>\". <param> part must match individual-level parameters thetas_one_subj_mat. argument NULL, indicates estimation done non-hierarchical fashion. row represents hyper-parameter, column one chain. model_subj drift_dm object, containing individual's data. log_prior_lower_funs named list functions, one per parameter stored thetas_one_subj_mat, returning log-prior densities. assumed function can take one type parameter across chains (.e., vector). non-hierarchical case, function can accept single vector (respective individual-level parameter across chains). hierarchical case, function must also support arguments mean sd vectorized prior computation.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/log_posterior_hyper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conditional Log-Posterior Distributions for MCMC Sampling — log_posterior_hyper","text":"list two elements: posterior_vals, total log-posterior values (log-likelihood + log-prior) per chain. log_like_vals, log-likelihood components , per chain.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/log_posterior_hyper.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conditional Log-Posterior Distributions for MCMC Sampling — log_posterior_hyper","text":"log_posterior_hyper() computes conditional log-posterior group-level hyperparameter matrix phi_j_mat, given individual-level parameters across subjects theta_j_mat (one type model parameter). log_posterior_lower() computes conditional log-posterior individual participant’s parameter matrix thetas_one_subj_mat, given prior distributions. hierarchical setting, prior distributions conditioned group-level parameters.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/max_number_one_internal_entry.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the maximum number from an internal entry or flex_prms_obj (internal docu) — max_number_one_internal_entry","title":"Get the maximum number from an internal entry or flex_prms_obj (internal docu) — max_number_one_internal_entry","text":"entries internal list either digits (0-x) expressions.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/max_number_one_internal_entry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the maximum number from an internal entry or flex_prms_obj (internal docu) — max_number_one_internal_entry","text":"","code":"max_number_one_internal_entry(one_internal_entry)  get_number_prms(flex_prms_obj)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/max_number_one_internal_entry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the maximum number from an internal entry or flex_prms_obj (internal docu) — max_number_one_internal_entry","text":"one_internal_entry one entry multiple conditions flex_prms_obj list stored flex_prms object","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/max_number_one_internal_entry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the maximum number from an internal entry or flex_prms_obj (internal docu) — max_number_one_internal_entry","text":"largest digit entry linear_list supplied flex_prms_obj (0 expressions). largest number linear_list corresponds number model parameters.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/mcmc_dm_to_coda_mcmc.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert MCMC Chain Array to a coda::mcmc.list Object — mcmc_dm_to_coda_mcmc","title":"Convert MCMC Chain Array to a coda::mcmc.list Object — mcmc_dm_to_coda_mcmc","text":"Converts 3D MCMC chain array (parameters × chains × iterations) coda::mcmc.list object compatibility diagnostic summary functions coda package.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/mcmc_dm_to_coda_mcmc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert MCMC Chain Array to a coda::mcmc.list Object — mcmc_dm_to_coda_mcmc","text":"","code":"mcmc_dm_to_coda_mcmc(chains)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/mcmc_dm_to_coda_mcmc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert MCMC Chain Array to a coda::mcmc.list Object — mcmc_dm_to_coda_mcmc","text":"chains 3D numeric array dimensions corresponding parameters × chains × iterations. chains typically obtained call get_subset_chains().","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/mcmc_dm_to_coda_mcmc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert MCMC Chain Array to a coda::mcmc.list Object — mcmc_dm_to_coda_mcmc","text":"object class mcmc.list containing one mcmc object per chain.","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/migration_crossover.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a Migration Step Between Chains — migration_crossover","title":"Perform a Migration Step Between Chains — migration_crossover","text":"migration step, random subset chains selected. selected chain k receives proposal based next chain (k + 1) sequence (cycling back first chain last). proposed parameters slightly perturbed uniform noise controlled b. proposals evaluated simultaneously using Metropolis acceptance probabilities via call_log_posterior_m(), accepted proposals replace current values.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/migration_crossover.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a Migration Step Between Chains — migration_crossover","text":"","code":"migration_crossover(   prms_across_chains,   pis_across_chains,   log_likes_across_chains,   b = 0.001,   ... )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/migration_crossover.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a Migration Step Between Chains — migration_crossover","text":"prms_across_chains numeric matrix dimension p × n, p number parameters n number chains. column contains current parameter vector chain. pis_across_chains numeric vector length n, containing current log-posterior values chain. log_likes_across_chains numeric vector length n, containing current log-likelihood values chain. b small numeric value used perturb proposal parameters avoid degeneracy. ... additional arguments passed call_log_posterior_m().","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/migration_crossover.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a Migration Step Between Chains — migration_crossover","text":"list following components: new_prms_across_chains: updated parameter matrix shape p × n. new_pis_across_chains: updated vector log-posterior values. new_log_likes_across_chains: updated vector log-likelihood values.","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/modify_flex_prms.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Instructions to a flex_prms object — modify_flex_prms","title":"Set Instructions to a flex_prms object — modify_flex_prms","text":"Functions carry \"instructions\" modify flex_prms object, specified string.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/modify_flex_prms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Instructions to a flex_prms object — modify_flex_prms","text":"","code":"modify_flex_prms(object, instr, ...)  # S3 method for class 'drift_dm' modify_flex_prms(object, instr, ..., eval_model = FALSE)  # S3 method for class 'flex_prms' modify_flex_prms(object, instr, ..., messaging = NULL)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/modify_flex_prms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Instructions to a flex_prms object — modify_flex_prms","text":"object object type drift_dm flex_prms. instr character string, specifying set instructions (see Details). ... arguments passed forward respective method. eval_model logical, indicating model re-evaluated updating modifying flex_prms object (see re_evaluate_model). Default FALSE. messaging logical, indicating messages shall displayed . Can happen, example, setting parameter value specific condition, although parameter values assumed identical across conditions.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/modify_flex_prms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Instructions to a flex_prms object — modify_flex_prms","text":"drift_dm objects, updated drift_dm object. flex_prms, updated flex_prms object.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/modify_flex_prms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set Instructions to a flex_prms object — modify_flex_prms","text":"modify_flex_prms generic function. default methods pass forward set \"instructions\" modify (underlying) flex_prms object. instructions inspired model syntax lavaan package. Note specifying multiple instructions possible, instruction defined line. Comments '#' possible, also line continuations possible, last symbol \"+\",\"-\", \"*\", \"/\", \"(\", \"[\". following instructions implemented: \"vary\" instruction: Looks something like \"~ foo + bar\" means parameter '' allowed vary independently conditions 'foo' 'bar' Thus, estimating model, user independent values '' conditions 'foo' 'bar' \"restrain\" instruction: Looks something like \"~! foo + bar \" means parameter '' assumed identical conditions 'foo' 'bar' Thus, estimating model, user single value '' conditions 'foo' 'bar' \"set\" instruction: Users may always estimate model directly rather explore model behavior. case setting value parameter necessary. corresponding instruction looks something like \"~ foo => 0.3\" set value '' condition 'foo' value 0.3 \"fix\" instruction: Oftentimes, certain parameters model considered \"fixed\", vary remaining parameters estimated. example shape parameter '' DMC (see dmc_dm). corresponding instruction looks something like \"<!> foo + bar\" Usually, users want call \"set\" instruction prior \"fix\" instruction, set corresponding parameter certain value. \"special dependency\" instruction: Sometimes, users want allow one parameter depend another. instance, DMC (see dmc_dm), parameter positive congruent condition, negative incongruent condition. Thus, parameters may 'special depencency' can expressed equation. define special dependency, users can use operation \"==\". parameter dependency left-hand side, mathematical relationship parameters defined right-hand side. looks something like \"~ foo == -(~ bar)\". means parameter condition foo always -1 * parameter condition bar. Thus, condition bar value 5, condition foo -5. expression right-side can refer arbitrary mathematical relation. Important: Make sure 'parameter ~ condition' combination right-hand side equation set brackets. Another example: Parameter condition foo mean parameter b conditions bar baz; instruction \"~ foo == 0.5*(b ~ bar) + 0.5*(b ~ baz)\" \"additional/custom parameter combination\" instruction: Sometimes, users may want combine multiple parameters summarize certain property model. example, DMC (see dmc_dm), shape rate parameter jointly determine peak latency. avoid calculate manually, users can define \"custom\" parameter combinations using \":=\" operation: exemplary instruction might look like : \"peak_l := (- 1) * tau\" Expressions values provide calculations parameters stored separate list cust_prms.","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/modify_flex_prms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Instructions to a flex_prms object — modify_flex_prms","text":"","code":"# Example 1: Modify a flex_prms object  directly --------------------------- # create an auxiliary flex_prms object a_flex_prms_obj <- flex_prms(   c(muc = 3, b = 0.5, non_dec = 0.3),   conds = c(\"foo\", \"bar\") )  # then carry out some \"instructions\". Here (arbitrary operations): # 1.) Consider b as fixed # 2.) Let muc vary independently for the conditions foo and bar # 3.) Set non_dec in condition bar to be half as large as non_dec in #     condition bar instr <-   \"b <!>  muc ~  non_dec ~ bar == (non_dec ~ foo) / 2 \" modify_flex_prms(object = a_flex_prms_obj, instr = instr) #> Parameter Values: #>     muc   b non_dec #> foo   3 0.5    0.30 #> bar   3 0.5    0.15 #>  #> Parameter Settings: #>     muc b non_dec #> foo 1   0 3       #> bar 2   0 d       #>  #> Special Dependencies: #> non_dec ~ bar == (non_dec ~ foo)/2 #>    # Example 2: Modify a flex_prms object stored inside a drift_dm object ----- a_model <- ratcliff_dm() # get a model for demonstration purpose modify_flex_prms(object = a_model, instr = \"muc ~ => 4\") #> Class(es) ratcliff_dm, drift_dm #> (model has not been estimated yet) #>  #> Parameter Values: #>      muc   b non_dec #> null   4 0.6     0.3 #>  #> Parameter Settings: #>      muc b non_dec #> null   1 2       3 #>  #> Deriving PDFS: #>   solver: kfe #>   values: sigma=1, t_max=3, dt=0.0075, dx=0.02, nt=400, nx=100 #>  #> Cost Function: neg_log_like #>  #> Observed Data: NULL"},{"path":"https://bucky2177.github.io/dRiftDM/reference/mu_constant.html","id":null,"dir":"Reference","previous_headings":"","what":"Constant Drift Rate — mu_constant","title":"Constant Drift Rate — mu_constant","text":"Constant Drift Rate","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/mu_constant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constant Drift Rate — mu_constant","text":"","code":"mu_constant(prms_model, prms_solve, t_vec, one_cond, ddm_opts)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/mu_constant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constant Drift Rate — mu_constant","text":"prms_model model parameters, containing muc prms_solve solver settings t_vec time space one_cond one condition ddm_opts optional arguments attached object","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/mu_constant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constant Drift Rate — mu_constant","text":"vector length t_vec drift rate element vector.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/mu_dmc.html","id":null,"dir":"Reference","previous_headings":"","what":"Drift Rate for DMC — mu_dmc","title":"Drift Rate for DMC — mu_dmc","text":"Provides drift rate superimposed decision process. derivative rescaled gamma function plus constant drift rate controlled process.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/mu_dmc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drift Rate for DMC — mu_dmc","text":"","code":"mu_dmc(prms_model, prms_solve, t_vec, one_cond, ddm_opts)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/mu_dmc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drift Rate for DMC — mu_dmc","text":"prms_model model parameters, containing muc, tau, , prms_solve solver settings t_vec time space one_cond one condition ddm_opts optional arguments attached object","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/mu_dmc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drift Rate for DMC — mu_dmc","text":"provides first derivative superimposed process respect t_vec.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/mu_int_constant.html","id":null,"dir":"Reference","previous_headings":"","what":"Integral of Constant Drift Rate — mu_int_constant","title":"Integral of Constant Drift Rate — mu_int_constant","text":"Integral Constant Drift Rate","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/mu_int_constant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integral of Constant Drift Rate — mu_int_constant","text":"","code":"mu_int_constant(prms_model, prms_solve, t_vec, one_cond, ddm_opts)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/mu_int_constant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integral of Constant Drift Rate — mu_int_constant","text":"prms_model model parameters, containing muc prms_solve solver settings t_vec time space one_cond one condition ddm_opts optional arguments attached object","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/mu_int_constant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Integral of Constant Drift Rate — mu_int_constant","text":"vector calculated t_vec*muc","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/mu_int_dmc.html","id":null,"dir":"Reference","previous_headings":"","what":"Integral of DMC's Drift Rate — mu_int_dmc","title":"Integral of DMC's Drift Rate — mu_int_dmc","text":"Provides integral drift rate superimposed decision process. sum rescaled gamma function linear function.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/mu_int_dmc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integral of DMC's Drift Rate — mu_int_dmc","text":"","code":"mu_int_dmc(prms_model, prms_solve, t_vec, one_cond, ddm_opts)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/mu_int_dmc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integral of DMC's Drift Rate — mu_int_dmc","text":"prms_model model parameters, containing muc, tau, , prms_solve solver settings t_vec time space one_cond one condition ddm_opts optional arguments attached object","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/mu_int_dmc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Integral of DMC's Drift Rate — mu_int_dmc","text":"provides scaled gamma distribution function superimposed process time step t_vec.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/mu_ssp.html","id":null,"dir":"Reference","previous_headings":"","what":"Drift Rate for SSP — mu_ssp","title":"Drift Rate for SSP — mu_ssp","text":"Provides drift rate SSP model. , sum attention attributed flankers central target, scaled perceptual input.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/mu_ssp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drift Rate for SSP — mu_ssp","text":"","code":"mu_ssp(prms_model, prms_solve, t_vec, one_cond, ddm_opts)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/mu_ssp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drift Rate for SSP — mu_ssp","text":"prms_model model parameters, containing p, sd_0, r, sign prms_solve solver settings t_vec time space one_cond one condition ddm_opts optional arguments attached object","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/mu_ssp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drift Rate for SSP — mu_ssp","text":"provides drift rate SSP respect t_vec","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/new_drift_dm.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a DDM model — internal — new_drift_dm","title":"Create a DDM model — internal — new_drift_dm","text":"function assembles components create drift_dm object.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/new_drift_dm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a DDM model — internal — new_drift_dm","text":"","code":"new_drift_dm(   flex_prms_obj,   sigma,   t_max,   dt,   dx,   solver,   comp_funs,   cost_function,   subclass,   b_coding = NULL,   obs_data = NULL )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/new_drift_dm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a DDM model — internal — new_drift_dm","text":"flex_prms_obj flex_prms object. sigma diffusion noise (sigma). t_max maximum trial duration (t_max). dt temporal step size (dt). dx evidence step size (dx). solver string identifying solver (e.g., \"kfe\"). comp_funs list component functions. cost_function string, defining compute fit cost. subclass string model info label set child class. b_coding optional list boundary coding (e.g., drift_dm_default_b_coding()). obs_data optional data.frame observed data.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/new_drift_dm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a DDM model — internal — new_drift_dm","text":"list elements flex_prms_obj, prms_solve, solver, comp_funs, cost_function. object class attributes c(subclass, \"drift_dm\") attribute \"b_coding\" containing boundary coding. obs_data NULL, observed data attached via obs_data().","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/new_drift_dm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a DDM model — internal — new_drift_dm","text":"perform input checks ; just assemble object. pre-wrangling done drift_dm(). Checks performed validate_drift_dm(), called indirectly via setters (e.g., prms_solve() obs_data()).","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/new_stats_dm.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a New stats_dm Object — new_stats_dm","title":"Create a New stats_dm Object — new_stats_dm","text":"new_stats_dm initializes stats_dm object label statistic types store necessary attributes custom methods (plot_*)","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/new_stats_dm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a New stats_dm Object — new_stats_dm","text":"","code":"new_stats_dm(stat_df, type, ...)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/new_stats_dm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a New stats_dm Object — new_stats_dm","text":"stat_df data.frame, containing calculated statistics encapsulated within stats_dm class. type character string, specifying type statistic provided stat_df. Valid options include \"basic_stats\", \"cafs\", \"quantiles\", \"delta_funs\", \"fit_stats\". ... Additional arguments passed set attributes. \"cafs\", \"quantiles\", \"delta_funs\", b_coding attribute required.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/new_stats_dm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a New stats_dm Object — new_stats_dm","text":"object class stats_dm, additional classes attributes depending type.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/new_stats_dm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a New stats_dm Object — new_stats_dm","text":"new_stats_dm sets stat_df object assigning class stats_dm, along additional classes based specified type. \"basic_stats\", \"cafs\", \"quantiles\", \"delta_funs\", c(type, \"sum_dist\", \"stats_dm\", \"data.frame\")\". \"fit_stats\", c(type, \"stats_dm\", \"data.frame\")\". basic stats, Conditional Accuracy Functions (CAFs), Quantiles, Delta Functions, function requires b_coding argument, specifies boundary coding details set attribute. function performs validation validate_stats_dm ensure stats_dm object well formatted.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/nobs.drift_dm.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Number of Observations for a drift_dm Object — nobs.drift_dm","title":"Get the Number of Observations for a drift_dm Object — nobs.drift_dm","text":"method retrieves total number observations obs_data list drift_dm object.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/nobs.drift_dm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Number of Observations for a drift_dm Object — nobs.drift_dm","text":"","code":"# S3 method for class 'drift_dm' nobs(object, ...)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/nobs.drift_dm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Number of Observations for a drift_dm Object — nobs.drift_dm","text":"object drift_dm object, potentially contains observed data object$obs_data. ... additional arguments","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/nobs.drift_dm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Number of Observations for a drift_dm Object — nobs.drift_dm","text":"integer representing total number observations across conditions object$obs_data.  obs_data exist, function returns 0","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/nobs.drift_dm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the Number of Observations for a drift_dm Object — nobs.drift_dm","text":"function iterates element object$obs_data, counts entries nested component, returns cumulative sum total observation count. written provide nobs method calculating log-likelihood (logLik), AIC (stats::AIC), BIC (stats::BIC) statistics objects type drift_dm.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/nobs.drift_dm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the Number of Observations for a drift_dm Object — nobs.drift_dm","text":"","code":"# get a pre-built model and data set for demonstration purpose a_model <- dmc_dm() obs_data(a_model) <- dmc_synth_data  # then get the number of observations by accessing the model nobs(a_model) #> [1] 600  # same number of observations as in the original data set nrow(dmc_synth_data) #> [1] 600"},{"path":"https://bucky2177.github.io/dRiftDM/reference/nt_constant.html","id":null,"dir":"Reference","previous_headings":"","what":"Constant Non-Decision time — nt_constant","title":"Constant Non-Decision time — nt_constant","text":"dirac delta \"non_dec\", provide constant non-decision time.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/nt_constant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constant Non-Decision time — nt_constant","text":"","code":"nt_constant(prms_model, prms_solve, t_vec, one_cond, ddm_opts)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/nt_constant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constant Non-Decision time — nt_constant","text":"prms_model model parameters; containing \"non_dec\" prms_solve solver settings t_vec time space one_cond one condition ddm_opts optional arguments attached object","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/nt_constant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constant Non-Decision time — nt_constant","text":"vector length t_vec zeros, except element matching \"non_dec\" respect \"t_vec\"","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/nt_truncated_normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Truncated Normally-Distributed Non-Decision Time — nt_truncated_normal","title":"Truncated Normally-Distributed Non-Decision Time — nt_truncated_normal","text":"Truncated Normally-Distributed Non-Decision Time","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/nt_truncated_normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Truncated Normally-Distributed Non-Decision Time — nt_truncated_normal","text":"","code":"nt_truncated_normal(prms_model, prms_solve, t_vec, one_cond, ddm_opts)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/nt_truncated_normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Truncated Normally-Distributed Non-Decision Time — nt_truncated_normal","text":"prms_model model parameters; including \"non_dec\" \"sd_non_dec\" prms_solve solver settings t_vec time space one_cond one condition ddm_opts optional arguments attached object","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/nt_truncated_normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Truncated Normally-Distributed Non-Decision Time — nt_truncated_normal","text":"returns PDF truncated normal distribution t_vec, mean \"non_dec\" standard deviation \"sd_non_dec\". Lower truncation 0. Upper truncation max(t_vec)","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/nt_uniform.html","id":null,"dir":"Reference","previous_headings":"","what":"Uniform Non-Decision Time — nt_uniform","title":"Uniform Non-Decision Time — nt_uniform","text":"Uniform Non-Decision Time","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/nt_uniform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uniform Non-Decision Time — nt_uniform","text":"","code":"nt_uniform(prms_model, prms_solve, t_vec, one_cond, ddm_opts)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/nt_uniform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uniform Non-Decision Time — nt_uniform","text":"prms_model model parameters; including \"non_dec\" \"range_non_dec\" prms_solve solver settings t_vec time space one_cond one condition ddm_opts optional arguments attached object","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/nt_uniform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uniform Non-Decision Time — nt_uniform","text":"returns PDF uniform distribution t_vec, centered around \"non_dec\" range \"range_non_dec\".","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/obs_data.html","id":null,"dir":"Reference","previous_headings":"","what":"The Observed Data — obs_data<-","title":"The Observed Data — obs_data<-","text":"Functions get set \"observed data\" object.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/obs_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Observed Data — obs_data<-","text":"","code":"obs_data(object, ...) <- value  # S3 method for class 'drift_dm' obs_data(object, ..., eval_model = FALSE) <- value  obs_data(object, ...)  # S3 method for class 'drift_dm' obs_data(object, ..., messaging = TRUE)  # S3 method for class 'fits_ids_dm' obs_data(object, ...)  # S3 method for class 'fits_agg_dm' obs_data(object, ...)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/obs_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Observed Data — obs_data<-","text":"object object type drift_dm, fits_ids_dm, fits_agg_dm (see estimate_dm()). ... additional arguments passed specific method. value data.frame provides three columns: (1) RT response times, (2) column boundary coding according model's b_coding(), (3) Cond specifying conditions. eval_model logical, indicating model re-evaluated updating solver settings (see re_evaluate_model). Default FALSE. messaging logical, indicating messages shall displayed .","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/obs_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Observed Data — obs_data<-","text":"obs_data() data.frame observed data. method obs_data.drift_dm() per default displays message remind user returned data.frame likely sorted differently expected. obs_data<-() updated drift_dm object.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/obs_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Observed Data — obs_data<-","text":"obs_data() generic accessor function, obs_data<-() generic replacement function. default methods get set \"observed data\". behavior, however, may bit unexpected. drift_dm objects, observed data stored data.frame. Instead, supplied observed data set disassembled RTs upper lower boundary respect different conditions (ensures speed easier programming depths package). Yet, obs_data() returns data.frame drift_dm objects. implies obs_data() merely access observed data, re-assembles . Consequently, returned data.frame observed data likely sorted differently data.frame originally set model via obs_data<-(). Also, originally supplied data set provided conditions model, unused conditions part returned data.frame. fits_ids_dm (see load_fits_ids), observed data stored data.frame general fit procedure info. data.frame obs_data() return. Thus, returned data.frame match data.frame initially supplied estimate_model_ids, although unused conditions dropped. theory, possible update parts \"observed data\". However, obs_data() returns re-assembled data.frame drift_dm objects, great care taken respect ordering argument value. message displayed remind user returned data.frame may sorted differently expected.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/obs_data.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"The Observed Data — obs_data<-","text":"replacement function drift_dm objects. replacing observed data model fitted (.e., fits_ids_dm object) make sense.","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/obs_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Observed Data — obs_data<-","text":"","code":"# Set some data to a model ------------------------------------------------- my_model <- dmc_dm() # DMC is pre-built and directly available # synthetic data suitable for DMC; comes with dRiftDM some_data <- dmc_synth_data obs_data(my_model) <- some_data  # Extract data from a model ------------------------------------------------ head(obs_data(my_model)) #> Extracting observed data from a model object. Remember that the result may be sorted differently than expect! #>      RT Error Cond #> 1 0.349     0 comp #> 2 0.444     0 comp #> 3 0.441     0 comp #> 4 0.572     0 comp #> 5 0.438     0 comp #> 6 0.535     0 comp  # Important: --------------------------------------------------------------- # The returned data.frame may be sorted differently than the one initially # supplied. some_data <- some_data[sample(1:nrow(some_data)), ] #' # shuffle the data set obs_data(my_model) <- some_data all.equal(obs_data(my_model), some_data) #> Extracting observed data from a model object. Remember that the result may be sorted differently than expect! #> [1] \"Attributes: < Component “row.names”: Mean relative difference: 0.6701189 >\" #> [2] \"Component “RT”: Mean relative difference: 0.223168\"                         #> [3] \"Component “Error”: Mean relative difference: 2\"                             #> [4] \"Component “Cond”: 312 string mismatches\"                                    # so don't do obs_data(my_model)[\"Cond\"] <- ...  # Addition: ---------------------------------------------------------------- # accessor method also available for fits_ids_dm objects # (see estimate_model_ids) # get an exemplary fits_ids_dm object fits <- get_example_fits(\"fits_ids_dm\") head(obs_data(fits)) #>   ID        RT Error   Cond #> 1  1 0.6016572     0   comp #> 2  1 0.4514293     0   comp #> 3  1 0.4180971     0   comp #> 4  1 0.4514365     0 incomp #> 5  1 0.4013124     0   comp #> 6  1 0.4347489     0 incomp"},{"path":"https://bucky2177.github.io/dRiftDM/reference/obs_data_to_rt_lists.html","id":null,"dir":"Reference","previous_headings":"","what":"Disassemble an Observed Data set — obs_data_to_rt_lists","title":"Disassemble an Observed Data set — obs_data_to_rt_lists","text":"Takes data.frame columns RT, Cond, column matching b_coding, disassembles list rts","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/obs_data_to_rt_lists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Disassemble an Observed Data set — obs_data_to_rt_lists","text":"","code":"obs_data_to_rt_lists(obs_data, b_coding = NULL)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/obs_data_to_rt_lists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Disassemble an Observed Data set — obs_data_to_rt_lists","text":"obs_data data.frame wth columns RT, Cond, column matching b_coding b_coding boundary coding list (see b_coding)","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/obs_data_to_rt_lists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Disassemble an Observed Data set — obs_data_to_rt_lists","text":"list rts entries rts_u -> containing list numeric vectors, names according values Cond rts_l -> containing list numeric vectors, names according values Cond","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/obs_data_to_rt_lists.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Disassemble an Observed Data set — obs_data_to_rt_lists","text":"performs checks b_coding (check_b_coding) checks/reduces obs_data (check_reduce_raw_data) disassembling data set.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/pdfs.html","id":null,"dir":"Reference","previous_headings":"","what":"Access the Probability Density Functions of a Model — pdfs","title":"Access the Probability Density Functions of a Model — pdfs","text":"Functions obtain probability density functions (PDFs) model. PDFs represent convolution first-passage-time (decision time) non-decision time.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/pdfs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access the Probability Density Functions of a Model — pdfs","text":"","code":"pdfs(object, ...)  # S3 method for class 'drift_dm' pdfs(object, ...)  # S3 method for class 'fits_agg_dm' pdfs(object, ...)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/pdfs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access the Probability Density Functions of a Model — pdfs","text":"object object type drift_dm fits_agg_dm (see estimate_dm()). ... additional arguments passed specific method.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/pdfs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access the Probability Density Functions of a Model — pdfs","text":"list entries: pdfs, contains another named list entries corresponding conditions model (see conds()). elements another named list, containing entries pdf_u pdf_l, numeric vectors PDFs upper lower boundary, respectively. t_vec, containing numeric vector time domain.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/pdfs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Access the Probability Density Functions of a Model — pdfs","text":"model evaluated, re_evaluate_model() called returning PDFs.","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/pdfs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access the Probability Density Functions of a Model — pdfs","text":"","code":"# get a pre-built model for demonstration purpose a_model <- dmc_dm(dx = .01, dt = .005) str(pdfs(a_model)) #> List of 2 #>  $ pdfs :List of 2 #>   ..$ comp  :List of 2 #>   .. ..$ pdf_u: num [1:601] 1e-08 1e-08 1e-08 1e-08 1e-08 ... #>   .. ..$ pdf_l: num [1:601] 1e-08 1e-08 1e-08 1e-08 1e-08 ... #>   ..$ incomp:List of 2 #>   .. ..$ pdf_u: num [1:601] 1e-08 1e-08 1e-08 1e-08 1e-08 ... #>   .. ..$ pdf_l: num [1:601] 1e-08 1e-08 1e-08 1e-08 1e-08 ... #>  $ t_vec: num [1:601] 0 0.005 0.01 0.015 0.02 0.025 0.03 0.035 0.04 0.045 ..."},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.cafs.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Conditional Accuracy Functions (CAFs) — plot.cafs","title":"Plot Conditional Accuracy Functions (CAFs) — plot.cafs","text":"Visualizes conditional accuracy functions (CAFs) observed /predicted data. useful assessing model fit exploring response patterns across conditions participants.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.cafs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Conditional Accuracy Functions (CAFs) — plot.cafs","text":"","code":"# S3 method for class 'cafs' plot(   x,   ...,   id = NULL,   conds = NULL,   col = NULL,   xlim = NULL,   ylim = c(0, 1),   xlab = \"Bins\",   ylab = NULL,   interval_obs = TRUE,   interval_pred = TRUE )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.cafs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Conditional Accuracy Functions (CAFs) — plot.cafs","text":"x object type = \"cafs\", typically returned calc_stats(). ... additional graphical arguments passed plotting functions. See set_default_arguments() full list supported options. id numeric character, specifying ID single participant plot. length(id) > 1, plot.cafs() called recursively entry. id must match entry ID column x. conds character vector specifying conditions plot. Defaults available conditions. col character vector specifying colors condition. single color provided, repeated conditions. xlim numeric vector length 2, specifying x-axis limits. ylim numeric vector length 2, specifying y-axis limits. xlab, ylab character strings x- y-axis labels. interval_obs, interval_pred logicals; TRUE x contains column named Estimate, error bars observed data shaded contours predicted data drawn, respectively.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.cafs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Conditional Accuracy Functions (CAFs) — plot.cafs","text":"Returns NULL invisibly. function called side effect generating plot.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.cafs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Conditional Accuracy Functions (CAFs) — plot.cafs","text":"x contains multiple IDs specific id provided, function aggregates across participants plotting. Observed CAFs shown points, predicted CAFs lines. interval = TRUE input includes interval estimates (.e., column Estimate exists), plot includes error bars observed data shaded contours model predictions. Colors, symbols, line styles can customized via ....","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.cafs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Conditional Accuracy Functions (CAFs) — plot.cafs","text":"","code":"# Example 1: Model predictions only --------------------------------------- a_model <- dmc_dm(t_max = 1.5, dx = .01, dt = .005) cafs <- calc_stats(a_model, type = \"cafs\") plot(cafs)  plot(cafs, col = c(\"green\", \"red\"), ylim = c(0.5, 1))   # Example 2: Observed and predicted data ---------------------------------- obs_data(a_model) <- dmc_synth_data cafs <- calc_stats(a_model, type = \"cafs\") plot(cafs)   # Example 3: Observed data only ------------------------------------------- cafs <- calc_stats(dmc_synth_data, type = \"cafs\") plot(cafs)   # Example 4: Observed data with interval ---------------------------------- cafs <- calc_stats(dmc_synth_data, type = \"cafs\", resample = TRUE) plot(cafs)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.delta_funs.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Delta Functions — plot.delta_funs","title":"Plot Delta Functions — plot.delta_funs","text":"Visualizes delta functions observed /predicted data. useful assessing model fit exploring model behavior","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.delta_funs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Delta Functions — plot.delta_funs","text":"","code":"# S3 method for class 'delta_funs' plot(   x,   ...,   id = NULL,   conds = NULL,   dv = NULL,   col = NULL,   xlim = NULL,   ylim = NULL,   xlab = \"RT [s]\",   ylab = expression(Delta),   interval_obs = TRUE,   interval_pred = TRUE )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.delta_funs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Delta Functions — plot.delta_funs","text":"x object type = \"delta_funs\", typically returned calc_stats(). ... additional graphical arguments passed plotting functions. See set_default_arguments() full list supported options. id numeric character, specifying ID single participant plot. length(id) > 1, plot.cafs() called recursively entry. id must match entry ID column x. conds character vector specifying conditions plot. Defaults available conditions. dv character vector indicating delta function(s) plot. Defaults columns x begin \"Delta_\". col character vector specifying colors condition. single color provided, repeated conditions. xlim numeric vector length 2, specifying x-axis limits. ylim numeric vector length 2, specifying y-axis limits. xlab, ylab character strings x- y-axis labels. interval_obs, interval_pred logicals; TRUE x contains column named Estimate, error bars observed data shaded contours predicted data drawn, respectively.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.delta_funs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Delta Functions — plot.delta_funs","text":"Returns NULL invisibly. function called side effect generating plot.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.delta_funs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Delta Functions — plot.delta_funs","text":"x contains multiple IDs specific id provided, function aggregates across participants plotting. Observed delta functions shown points, predicted delta functions lines. interval_obs = TRUE interval_pred = TRUE input includes interval estimates (.e., column Estimate exists), plot includes error bars observed data shaded contours model predictions. Colors, symbols, line styles can customized via ....","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.delta_funs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Delta Functions — plot.delta_funs","text":"","code":"# Example 1: Model predictions only --------------------------------------- a_model <- dmc_dm(t_max = 1.5, dx = .01, dt = .005) deltas <- calc_stats(   a_model,   type = \"delta_funs\",   minuends = \"incomp\",   subtrahends = \"comp\" ) plot(deltas)  plot(deltas, col = \"black\", lty = 2, xlim = c(0.2, 0.65))   # Example 2: Observed and predicted data ---------------------------------- obs_data(a_model) <- dmc_synth_data deltas <- calc_stats(   a_model,   type = \"delta_funs\",   minuends = \"incomp\",   subtrahends = \"comp\" ) plot(deltas)   # Example 3: Observed data only ------------------------------------------- deltas <- calc_stats(   dmc_synth_data,   type = \"delta_funs\",   minuends = \"incomp\",   subtrahends = \"comp\" ) plot(deltas)   # Example 4: Observed data with intervals --------------------------------- deltas <- calc_stats(   dmc_synth_data,   type = \"delta_funs\",   minuends = \"incomp\",   subtrahends = \"comp\",   resample = TRUE ) plot(deltas)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.densities.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Distributions of Predicted and Observed Data — plot.densities","title":"Plot Distributions of Predicted and Observed Data — plot.densities","text":"Visualizes observed /predicted response time distributions. Useful assessing model fit exploring model behavior.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.densities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Distributions of Predicted and Observed Data — plot.densities","text":"","code":"# S3 method for class 'densities' plot(   x,   ...,   id = NULL,   conds = NULL,   col = NULL,   xlim = NULL,   ylim = NULL,   xlab = \"RT [s]\",   ylab = \"Density\",   obs_stats = \"hist\",   interval_obs = FALSE,   interval_pred = TRUE )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.densities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Distributions of Predicted and Observed Data — plot.densities","text":"x object type = \"densities\", typically returned calc_stats(). ... additional graphical arguments passed plotting functions. See set_default_arguments() full list supported options. id numeric character, specifying ID single participant plot. length(id) > 1, plot.cafs() called recursively entry. id must match entry ID column x. conds character vector specifying conditions plot. Defaults available conditions. col character vector specifying colors condition. single color provided, repeated conditions. xlim numeric vector length 2, specifying x-axis limits. ylim numeric vector length 2, specifying y-axis limits. xlab, ylab character strings x- y-axis labels. obs_stats character vector specifying observed statistics plot. Options include \"hist\" histograms \"kde\" kernel density estimates. Defaults \"hist\". interval_obs, interval_pred logicals; TRUE x contains column named Estimate, error bars observed data shaded contours predicted data drawn, respectively.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.densities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Distributions of Predicted and Observed Data — plot.densities","text":"Returns NULL invisibly. function called side effect generating plot.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.densities.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Distributions of Predicted and Observed Data — plot.densities","text":"x contains multiple IDs specific id provided, function aggregates across participants plotting. can provide vector ids produce separate plots participant. Observed densities shown histograms (default: gray shaded areas), KDE lines (default: black, dotted). Predicted densities shown lines (default: colorized). Distributions associated upper boundary shown values > 0 (.e., upper part plot), distributions associated lower boundary shown values < 0 (.e., lower part plot). Axis limits, colors, styling options can customized via .... interval information provided (.e., column Estimate exists x), error bars shading added, depending type statistic. legend displayed predicted data.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.densities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Distributions of Predicted and Observed Data — plot.densities","text":"","code":"# Example 1: Predicted densities only ------------------------------------- a_model <- dmc_dm() dens <- calc_stats(a_model, type = \"densities\") plot(dens, xlim = c(0, 1))  plot(dens, xlim = c(0, 1), conds = \"comp\")    # Example 2: Observed and predicted densities ----------------------------- obs_data(a_model) <- dmc_synth_data dens <- calc_stats(a_model, type = \"densities\") plot(dens, xlim = c(0, 1), conds = \"comp\", col = \"blue\")   # Example 3: Observed densities only -------------------------------------- dens <- calc_stats(dmc_synth_data, type = \"densities\") plot(dens, conds = \"comp\", obs.hist.col = \"green\", alpha = 1)   # Example 4: With interval estimates -------------------------------------- dens <- calc_stats(dmc_synth_data, type = \"densities\", resample = TRUE) plot(dens, interval_obs = TRUE, conds = \"comp\")"},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.drift_dm.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Components of a Drift Diffusion Model — plot.drift_dm","title":"Plot Components of a Drift Diffusion Model — plot.drift_dm","text":"function generates plots components drift diffusion model (DDM), drift rate, boundary, starting condition. component plotted time evidence space, allowing visual inspection model's behavior across different conditions.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.drift_dm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Components of a Drift Diffusion Model — plot.drift_dm","text":"","code":"# S3 method for class 'drift_dm' plot(x, ..., conds = NULL, col = NULL, xlim = NULL, bundle_plots = TRUE)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.drift_dm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Components of a Drift Diffusion Model — plot.drift_dm","text":"x object class drift_dm ... additional graphical arguments passed plotting functions. See set_default_arguments() full list supported options. conds character vector specifying conditions plot. Defaults available conditions. col character vector specifying colors condition. single color provided, repeated conditions. xlim numeric vector length 2, specifying x-axis limits. bundle_plots logical, indicating whether display separate panels single plot layout (FALSE), plot separately (TRUE).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.drift_dm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Components of a Drift Diffusion Model — plot.drift_dm","text":"Nothing (NULL; invisibly)","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.drift_dm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Components of a Drift Diffusion Model — plot.drift_dm","text":"plot.drift_dm function provides overview key DDM components, include: mu_fun: Drift rate time. mu_int_fun: Integrated drift rate time (required specified solver model). x_fun: Starting condition density across evidence values. b_fun: Boundary values time. dt_b_fun: Derivative boundary function time. nt_fun: Non-decision time density time.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.drift_dm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Components of a Drift Diffusion Model — plot.drift_dm","text":"","code":"# plot the component functions of the Ratcliff DDM plot(ratcliff_dm())  plot(ratcliff_dm(var_non_dec = TRUE))  # Note: the variability in the drift rate for the Ratcliff DDM # is not plotted! This is because it is not actually stored as a component # function.  # plot the component functions of the DMC model plot(dmc_dm(), col = c(\"green\", \"red\"))"},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.mcmc_dm.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot MCMC Results and Diagnostics mcmc_dm Objects — plot.mcmc_dm","title":"Plot MCMC Results and Diagnostics mcmc_dm Objects — plot.mcmc_dm","text":"Visualize MCMC results diagnostics mcmc_dm objects. function plot.mcmc() typically called users supply objects returned estimate_bayesian() generic base::plot() function.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.mcmc_dm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot MCMC Results and Diagnostics mcmc_dm Objects — plot.mcmc_dm","text":"","code":"# S3 method for class 'mcmc_dm' plot(x, ..., id = NULL, what = \"trace\", bundle_plots = TRUE)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.mcmc_dm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot MCMC Results and Diagnostics mcmc_dm Objects — plot.mcmc_dm","text":"x object class mcmc_dm, returned estimate_bayesian(). ... optional arguments passed underlying plotting functions plot_mcmc_trace(), plot_mcmc_marginal(), plot_mcmc_auto(). See respective documentations list optional arguments examples . Probably relevant optional argument which_prms allows users select specific subset parameters. id optional character vector, specifying id(s) participants plot. length(id) > 1, plot.mcmc_dm() called recursively, iterating entry id. id must match relevant dimension names used chains array stored x. character string indicating type plot produce. Must either \"trace\", \"density\", \"auto\". See Details . Default \"trace\". bundle_plots logical, indicating whether display separate panels single plot layout (FALSE), plot separately (TRUE).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.mcmc_dm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot MCMC Results and Diagnostics mcmc_dm Objects — plot.mcmc_dm","text":"Returns NULL invisibly.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.mcmc_dm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot MCMC Results and Diagnostics mcmc_dm Objects — plot.mcmc_dm","text":"function provides diagnostic summary visualizations MCMC samples. handles results hierarchical non-hierarchical MCMC runs: id provided, plot refers requested participant, MCMC results extracted individual level. id omitted, plots refer group-level parameters (.e., hyperparameters) following plot types supported: Trace plots (= \"trace\"): plots show sampled parameter values across MCMC iterations chain. primarily used inspect convergence mixing behavior. Ideally, chains appear well-mixed (.e., overlap sample similar range). Lack convergence indicated chains remain separate regions exhibit trends time. Density plots (= \"density\"):  plots display smoothed marginal posterior distributions parameter, collapsed chains iterations. useful understanding central tendency, variance, shape posterior distributions. Autocorrelation plots (= \"auto\"):  plots display autocorrelation different lags, averaged across chains. useful judge quickly chains produced independent samples.","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.mcmc_dm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot MCMC Results and Diagnostics mcmc_dm Objects — plot.mcmc_dm","text":"","code":"# get an examplary `mcmc_dm` object chains_obj <- get_example_fits(\"mcmc\") plot(chains_obj)  plot(chains_obj, what = \"density\")  plot(chains_obj, what = \"density\", which_prm = \"b\", bundle_plots = FALSE)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.quantiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Response Time Quantiles — plot.quantiles","title":"Plot Response Time Quantiles — plot.quantiles","text":"Visualizes response time quantiles observed /predicted data across experimental conditions. useful assessing model fit exploring response patterns across conditions participants.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.quantiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Response Time Quantiles — plot.quantiles","text":"","code":"# S3 method for class 'quantiles' plot(   x,   ...,   id = NULL,   conds = NULL,   dv = NULL,   col = NULL,   xlim = NULL,   ylim = c(0, 1),   xlab = \"RT [s]\",   ylab = \"F(RT)\",   interval_obs = TRUE,   interval_pred = TRUE )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.quantiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Response Time Quantiles — plot.quantiles","text":"x object type = \"quantiles\", typically returned calc_stats(). ... additional graphical arguments passed plotting functions. See set_default_arguments() full list supported options. id numeric character, specifying ID single participant plot. length(id) > 1, plot.cafs() called recursively entry. id must match entry ID column x. conds character vector specifying conditions plot. Defaults available conditions. dv character string indicating dependent variable plot. Defaults quantiles upper boundary. col character vector specifying colors condition. single color provided, repeated conditions. xlim numeric vector length 2, specifying x-axis limits. ylim numeric vector length 2, specifying y-axis limits. xlab, ylab character strings x- y-axis labels. interval_obs, interval_pred logicals; TRUE x contains column named Estimate, error bars observed data shaded contours predicted data drawn, respectively.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.quantiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Response Time Quantiles — plot.quantiles","text":"Returns NULL invisibly. function called side effect generating plot.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.quantiles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Response Time Quantiles — plot.quantiles","text":"x contains multiple IDs specific id provided, function aggregates across participants plotting. Observed quantiles shown points, predicted quantiles lines. interval = TRUE input includes interval estimates (.e., column Estimate exists), plot includes error bars observed data shaded contours model predictions. Colors, symbols, line styles can customized via ....","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.quantiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Response Time Quantiles — plot.quantiles","text":"","code":"# Example 1: Model predictions only --------------------------------------- a_model <- dmc_dm(t_max = 1.5, dx = .01, dt = .005) quantiles <- calc_stats(a_model, type = \"quantiles\") plot(quantiles)  plot(quantiles, col = c(\"green\", \"red\"), xlim = c(0.2, 0.6))   # Example 2: Observed and predicted data ---------------------------------- obs_data(a_model) <- dmc_synth_data quantiles <- calc_stats(a_model, type = \"quantiles\") plot(quantiles)   # Example 3: Observed data only ------------------------------------------- quantiles <- calc_stats(dmc_synth_data, type = \"quantiles\") plot(quantiles)   # Example 4: Observed data with interval ---------------------------------- cafs <- calc_stats(dmc_synth_data, type = \"quantiles\", resample = TRUE) plot(cafs)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.stats_dm_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Multiple Statistics — plot.stats_dm_list","title":"Plot Multiple Statistics — plot.stats_dm_list","text":"function iterates list statistics data, resulting call calc_stats(), subsequently plots statistic. allows simple arrangement multiple plots single graphics device.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.stats_dm_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Multiple Statistics — plot.stats_dm_list","text":"","code":"# S3 method for class 'stats_dm_list' plot(x, ..., mfrow = NULL)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.stats_dm_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Multiple Statistics — plot.stats_dm_list","text":"x object type stats_dm_list, essentially list multiple statistics, resulting call calc_stats(). ... additional arguments passed plot function individual stats_dm object x. mfrow optional numeric vector length 2, specifying number rows columns arranging multiple panels single plot (e.g., c(1, 3)). Plots provided sequentially NULL (default), using current graphics layout user.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.stats_dm_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Multiple Statistics — plot.stats_dm_list","text":"Nothing (NULL; invisibly)","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.stats_dm_list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Multiple Statistics — plot.stats_dm_list","text":"plot.stats_dm_list() function \"merely\" iterates entry x calls respective plot() method. dRiftDM provide plot() method object stored x, respective entry skipped message displayed. users want control plot, best call plot() function separately statistic list (e.g., plot(x$cafs); plot(x$quantiles))","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.stats_dm_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Multiple Statistics — plot.stats_dm_list","text":"","code":"# get a list of statistics for demonstration purpose all_fits <- get_example_fits(\"fits_ids_dm\") stats <- calc_stats(all_fits, type = c(\"cafs\", \"quantiles\"))  # then call the plot function. plot(stats, mfrow = c(1, 2)) #> Aggregating across ID #> Aggregating across ID"},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.traces_dm_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Traces of a Drift Diffusion Model — plot.traces_dm_list","title":"Plot Traces of a Drift Diffusion Model — plot.traces_dm_list","text":"Creates plot simulated traces (.e., simulated evidence accumulation processes) drift diffusion model. plots useful exploring testing model behavior.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.traces_dm_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Traces of a Drift Diffusion Model — plot.traces_dm_list","text":"","code":"# S3 method for class 'traces_dm_list' plot(   x,   ...,   conds = NULL,   col = NULL,   col_b = NULL,   xlim = NULL,   ylim = NULL,   xlab = \"Time\",   ylab = \"Evidence\" )  # S3 method for class 'traces_dm' plot(x, ...)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.traces_dm_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Traces of a Drift Diffusion Model — plot.traces_dm_list","text":"x object type traces_dm_list traces_dm, containing traces plotted, resulting call simulate_traces(). ... additional graphical arguments passed plotting functions. See set_default_arguments() full list supported options. conds character vector specifying conditions plot. Defaults available conditions. col character vector specifying colors condition. single color provided, repeated conditions. col_b character vector, specifying color boundary condition. single color provided, repeated conditions. Default \"black\". xlim numeric vector length 2, specifying x-axis limits. ylim numeric vector length 2, specifying y-axis limits. xlab, ylab character strings x- y-axis labels.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.traces_dm_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Traces of a Drift Diffusion Model — plot.traces_dm_list","text":"NULL invisibly","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.traces_dm_list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Traces of a Drift Diffusion Model — plot.traces_dm_list","text":"plot.traces_dm_list() iterates conditions plots traces. includes legend condition labels. plot.traces_dm plots single set traces. simulate_traces() returns object type traces_dm_list per default, users likely call plot.traces_dm_list() cases; plot.traces_dm. plot.traces_dm relevant users explicitly extract provide object type traces_dm. function automatically generates upper lower boundaries based information stored within x.","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot.traces_dm_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Traces of a Drift Diffusion Model — plot.traces_dm_list","text":"","code":"# get a couple of traces for demonstration purpose a_model <- dmc_dm() some_traces <- simulate_traces(a_model, k = 3)  # Plots for traces_dm_list objects ---------------------------------------- # basic plot plot(some_traces)   # a slightly more beautiful plot :) plot(some_traces,   col = c(\"green\", \"red\"),   xlim = c(0, 0.35),   xlab = \"Time [s]\",   ylab = bquote(Realizations ~ of ~ X[t]),   legend_pos = \"bottomright\" ) #> Warning: The `legend_pos` argument of `plot.traces_dm_list()` is deprecated as of #> dRiftDM 0.3.0. #> ℹ Please use the optional `legend.pos` argument instead   # Plots for traces_dm objects --------------------------------------------- # we can also extract a single set of traces and plot them one_set_traces <- some_traces$comp plot(one_set_traces)   # modifications to the plot work in the same way plot(one_set_traces,   col = \"green\",   xlim = c(0, 0.35),   xlab = \"Time [s]\",   ylab = bquote(Realizations ~ of ~ X[t]),   legend = \"just comp\" )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot_mcmc_trace.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot MCMC Chains for Drift Diffusion Model Parameters — plot_mcmc_trace","title":"Plot MCMC Chains for Drift Diffusion Model Parameters — plot_mcmc_trace","text":"functions provide visualizations MCMC results obtained drift_dm() objects. Users call functions directly. Instead, called via plot.mcmc_dm(), following documentation helps define optional arguments can passed via  ....","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot_mcmc_trace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot MCMC Chains for Drift Diffusion Model Parameters — plot_mcmc_trace","text":"","code":"plot_mcmc_trace(   chains,   col_palette = grDevices::rainbow,   col_chains = NULL,   which_prms = NULL,   xlab = NULL,   ylab = NULL,   xlim = NULL,   ylim = NULL )  plot_mcmc_marginal(   chains,   col_line = NULL,   col_shade = NULL,   which_prms = NULL,   xlab = NULL,   ylab = NULL,   xlim = NULL,   ylim = NULL )  plot_mcmc_auto(   chains,   lags = 1:30,   col_line = NULL,   which_prms = NULL,   xlab = NULL,   ylab = NULL,   xlim = NULL,   ylim = NULL,   type = NULL,   main = NULL )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot_mcmc_trace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot MCMC Chains for Drift Diffusion Model Parameters — plot_mcmc_trace","text":"chains array MCMC samples three dimensions (parameters × chains × iterations; see also plot.mcmc_dm()). argument optional provided plot.mcmc_dm(). col_palette function generate color palette chains (default grDevices::rainbow). Must callable like col_palette(n). col_chains character vector, defining colors(s) override col_palette chain lines. Can single value vector matching number chains. Recycled necessary match number chains. which_prms regular expression (string), used select subset parameters plot. example, \"^v\" match parameters starting v. See also examples plot.mcmc_dm(). xlab, ylab character vector(s), specifying axis labels panel. Recycled necessary match number plots generated. xlim, ylim list(s), containing length-2 numeric vectors specifying x- y-axis limits, respectively. Recycled necessary match number plots generated. col_line character vector, defining color(s) line outlines density plots. Can single value vector matching number parameters plot. Recycled necessary match number parameters plotted. col_shade character vector, defining color(s) shaded areas density plots. Can single value vector matching number parameters plot. Recycled necessary match number parameters plotted. lags numeric vector, giving lags calculate autocorrelation (see also coda::autocorr.diag() coda::autocorr()). type character, specifying autocorrelations shall displayed. Defaults \"h\" (see type argument base::plot()). Recycled necessary match number parameters plotted. main character vector, specifying labels autocorrelation plot. Defaults parameter labels. Recycled necessary match number parameters plotted.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot_mcmc_trace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot MCMC Chains for Drift Diffusion Model Parameters — plot_mcmc_trace","text":"functions called side effects (producing plots). return NULL invisibly.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/plot_mcmc_trace.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot MCMC Chains for Drift Diffusion Model Parameters — plot_mcmc_trace","text":"plot_mcmc_trace() plots one panel per parameter, lines chain showing values evolve iterations. useful diagnosing convergence mixing. plot_mcmc_marginal() plots smoothed marginal posterior densities collapsed chains iterations parameter, useful inspecting posterior distributions. plot_mcmc_auto() plots autocorrelation among samples function lags.","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/print.cafs.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Functions for Stats Objects — print.cafs","title":"Print Functions for Stats Objects — print.cafs","text":"calling calc_stats(), returned statistic subclass stats_dm data.frame. following print() methods call generic print.stats_dm() function.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/print.cafs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Functions for Stats Objects — print.cafs","text":"","code":"# S3 method for class 'cafs' print(x, ...)  # S3 method for class 'basic_stats' print(x, ...)  # S3 method for class 'quantiles' print(x, ...)  # S3 method for class 'delta_funs' print(x, ...)  # S3 method for class 'fit_stats' print(x, ...)  # S3 method for class 'sum_dist' print(x, ...)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/print.cafs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Functions for Stats Objects — print.cafs","text":"x subclass data.frame, returned calc_stats(). ... additional arguments passed forward print.stats_dm().","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/print.cafs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Functions for Stats Objects — print.cafs","text":"x (invisibly)","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/prm_cond_combo_2_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Parameter-Condition Labels — prm_cond_combo_2_labels","title":"Generate Parameter-Condition Labels — prm_cond_combo_2_labels","text":"Creates vector labels parameter-condition combination matrix, resulting call prms_cond_combo. Used, instance, coef.drift_dm.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/prm_cond_combo_2_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Parameter-Condition Labels — prm_cond_combo_2_labels","text":"","code":"prm_cond_combo_2_labels(prms_cond_combo, sep = \".\")"},{"path":"https://bucky2177.github.io/dRiftDM/reference/prm_cond_combo_2_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Parameter-Condition Labels — prm_cond_combo_2_labels","text":"prms_cond_combo 2-row character matrix column represents unique parameter-condition combination. sep Separator parameter condition labels (default: \"~\").","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/prm_cond_combo_2_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Parameter-Condition Labels — prm_cond_combo_2_labels","text":"vector labels many entries columns prms_cond_combo , combining parameter condition (necessary). parameter labels already unique (parameters vary across conditions selectively used one condition), parameter labels returned","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/prms_cond_combo.html","id":null,"dir":"Reference","previous_headings":"","what":"Unique Conditions-Parameter Combinations — prms_cond_combo","title":"Unique Conditions-Parameter Combinations — prms_cond_combo","text":"helper function. searches linear_internal_list stored flex_prms object, keeps first unique appearance parameters. example, parameter muc equal comp, neutral, incomp, function provide info \"muc\" \"comp\", thus dropping incomp neutral, parameter .","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/prms_cond_combo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unique Conditions-Parameter Combinations — prms_cond_combo","text":"","code":"prms_cond_combo(drift_dm_obj)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/prms_cond_combo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unique Conditions-Parameter Combinations — prms_cond_combo","text":"drift_dm_obj object type drift_dm","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/prms_cond_combo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unique Conditions-Parameter Combinations — prms_cond_combo","text":"matrix two rows. column contains combination parameter name condition can considered unique. Parameter names stored first row, condition labels second.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/prms_conds_to_modify.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the conditions and parameters from an instruction string — prms_conds_to_modify","title":"Extract the conditions and parameters from an instruction string — prms_conds_to_modify","text":"function takes instruction string extracts conditions parameters, depending \"type\" operation . expected structure listed details docu flex_prms()","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/prms_conds_to_modify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the conditions and parameters from an instruction string — prms_conds_to_modify","text":"","code":"prms_conds_to_modify(formula_instr, operation, all_conds, all_prms)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/prms_conds_to_modify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the conditions and parameters from an instruction string — prms_conds_to_modify","text":"formula_instr instruction string operation expect terms string's structure. Can \"vary\", \"restrain\", \"fix\", \"set\" \"dependency\" all_conds potential conditions (necessary extending missing condition specification) all_prms potential paramters (necessary extending missing condition specification)","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/prms_conds_to_modify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the conditions and parameters from an instruction string — prms_conds_to_modify","text":"named list prms_to_adress conds_to_adress character vectors.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/prms_solve.html","id":null,"dir":"Reference","previous_headings":"","what":"The Parameters for Deriving Model Predictions — prms_solve<-","title":"The Parameters for Deriving Model Predictions — prms_solve<-","text":"Functions get set \"solver settings\" object. includes diffusion constant discretization time evidence space.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/prms_solve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Parameters for Deriving Model Predictions — prms_solve<-","text":"","code":"prms_solve(object, ...) <- value  # S3 method for class 'drift_dm' prms_solve(object, ..., eval_model = FALSE) <- value  prms_solve(object, ...)  # S3 method for class 'drift_dm' prms_solve(object, ...)  # S3 method for class 'fits_ids_dm' prms_solve(object, ...)  # S3 method for class 'fits_agg_dm' prms_solve(object, ...)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/prms_solve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Parameters for Deriving Model Predictions — prms_solve<-","text":"object object type drift_dm, fits_ids_dm, fits_agg_dm (see estimate_dm()). ... additional arguments (.e., eval_model). value named numeric vector providing new values prms_solve vector (see drift_dm()). eval_model logical, indicating model re-evaluated updating solver settings (see re_evaluate_model). Default FALSE.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/prms_solve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Parameters for Deriving Model Predictions — prms_solve<-","text":"prms_solve() vector prms_solve (see drift_dm()). prms_solve<-() updated drift_dm object.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/prms_solve.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Parameters for Deriving Model Predictions — prms_solve<-","text":"prms_solve() generic accessor function, prms_solve<-() generic replacement function. default methods get set \"solver settings\". possible update parts \"solver setttings\" (.e., parts underlying prms_solve vector). However, modifying \"nx\" \"nt\" allowed! attempts modify respective entries silently fail (explicit error/warning etc. thrown).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/prms_solve.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"The Parameters for Deriving Model Predictions — prms_solve<-","text":"replacement function drift_dm objects. replacing solver settings model fitted (e.g., fits_ids_dm object) make sense.","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/prms_solve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Parameters for Deriving Model Predictions — prms_solve<-","text":"","code":"# get some default model to demonstrate the prms_solve() functions my_model <- ratcliff_dm() # show the discretization and scaling of the model prms_solve(my_model) #>   sigma   t_max      dt      dx      nt      nx  #> 1.0e+00 3.0e+00 7.5e-03 2.0e-02 4.0e+02 1.0e+02  # partially modify these settings prms_solve(my_model)[c(\"dx\", \"dt\")] <- c(0.005) prms_solve(my_model) #> sigma t_max    dt    dx    nt    nx  #> 1e+00 3e+00 5e-03 5e-03 6e+02 4e+02   # accessor method also available for fits_ids_dm objects # (see estimate_model_ids) # get an exemplary fits_ids_dm object fits <- get_example_fits(\"fits_ids_dm\") prms_solve(fits) #> sigma t_max    dt    dx    nt    nx  #> 1e+00 3e+00 1e-02 1e-02 3e+02 2e+02"},{"path":"https://bucky2177.github.io/dRiftDM/reference/prms_to_str.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Parameters as String — prms_to_str","title":"Format Parameters as String — prms_to_str","text":"Converts parameter values formatted string.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/prms_to_str.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Parameters as String — prms_to_str","text":"","code":"prms_to_str(x, prms = NULL, round_digits = NULL, sep = \"=>\", collapse = \"\\n\")"},{"path":"https://bucky2177.github.io/dRiftDM/reference/prms_to_str.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Parameters as String — prms_to_str","text":"x drift_dmobject character vector labels. prms Numeric vector values (used x character). round_digits Rounding precision (default set drift_dm_default_rounding()). sep Separator names values (default: \"=>\"). collapse String separate name-value pair (default: \"\\n\").","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/prms_to_str.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format Parameters as String — prms_to_str","text":"single formatted string parameter names values. (e.g., \"=> 0 \\n b => 1\")","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/ratcliff_dm.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Basic Diffusion Model — ratcliff_dm","title":"Create a Basic Diffusion Model — ratcliff_dm","text":"function creates drift_dm model corresponds basic Ratcliff Diffusion Model","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/ratcliff_dm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Basic Diffusion Model — ratcliff_dm","text":"","code":"ratcliff_dm(   var_non_dec = FALSE,   var_start = FALSE,   var_drift = FALSE,   instr = NULL,   obs_data = NULL,   sigma = 1,   t_max = 3,   dt = 0.0075,   dx = 0.02,   solver = \"kfe\",   b_coding = NULL )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/ratcliff_dm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Basic Diffusion Model — ratcliff_dm","text":"var_non_dec, var_start, var_drift logical, indicating whether model variable non-decision time , starting point (uniform), drift rate (normally-distributed).  (see also nt_uniform x_uniform component_shelf) instr optional string \"instructions\", see modify_flex_prms(). obs_data data.frame, optional data.frame observed data. See obs_data. sigma, t_max, dt, dx numeric, providing settings diffusion constant discretization (see drift_dm) solver character, specifying solver. b_coding list, optional list boundary encoding (see b_coding)","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/ratcliff_dm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Basic Diffusion Model — ratcliff_dm","text":"object type drift_dm (parent class) ratcliff_dm (child class), created function drift_dm().","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/ratcliff_dm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Basic Diffusion Model — ratcliff_dm","text":"classical Ratcliff Diffusion Model diffusion model constant drift rate muc constant boundary b. var_non_dec = FALSE,  constant non-decision time non_dec assumed, otherwise uniform non-decision time mean non_dec range range_non_dec. var_start = FALSE,  constant starting point centered boundaries assumed (.e., dirac delta 0), otherwise uniform starting point mean 0 range range_start. var_drift = FALSE, constant drift rate assumed, otherwise normally distributed drift rate mean mu_c standard deviation sd_muc (can computationally intensive). Important: Variable drift rate possible dRiftDM's mu_constant function. custom drift rate yet possible case.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/ratcliff_dm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create a Basic Diffusion Model — ratcliff_dm","text":"Ratcliff R (1978). “theory memory retrieval.” Psychological Review, 85(2), 59–108. doi:10.1037/0033-295X.85.2.59 .","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/ratcliff_dm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Basic Diffusion Model — ratcliff_dm","text":"","code":"# the model with default settings my_model <- ratcliff_dm()  # the model with a variable non-decision time and with finer space # discretization my_model <- ratcliff_dm(var_non_dec = TRUE, dx = .01)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/ratcliff_synth_data.html","id":null,"dir":"Reference","previous_headings":"","what":"A synthetic data set with one condition — ratcliff_synth_data","title":"A synthetic data set with one condition — ratcliff_synth_data","text":"dataset simulated using classical Ratcliff diffusion model (see  ratcliff_dm()).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/ratcliff_synth_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A synthetic data set with one condition — ratcliff_synth_data","text":"","code":"ratcliff_synth_data"},{"path":"https://bucky2177.github.io/dRiftDM/reference/ratcliff_synth_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A synthetic data set with one condition — ratcliff_synth_data","text":"data frame 300 rows 3 columns: RT Response Times Error Error Coding (Error Response = 1; Correct Response = 0) Cond Condition ('null')","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/re_evaluate_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Re-evaluate the model — re_evaluate_model","title":"Re-evaluate the model — re_evaluate_model","text":"Updates PDFs model. observed data available (e.g., via obs_data entry stats_agg entry; depending cost_function, see also drift_dm()), cost_value also updated.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/re_evaluate_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Re-evaluate the model — re_evaluate_model","text":"","code":"re_evaluate_model(drift_dm_obj, eval_model = TRUE)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/re_evaluate_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Re-evaluate the model — re_evaluate_model","text":"drift_dm_obj object type drift_dm eval_model logical, indicating model evaluated . FALSE, PDFs value cost function deleted model. Default True.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/re_evaluate_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Re-evaluate the model — re_evaluate_model","text":"Returns passed drift_dm_obj object, (re-)calculating PDFs (observed data set) cost_value. PDFs addressed via drift_dm_obj$pdfs cost_value can addressed via drift_dm_obj$cost_value Note re_evaluate model called observed data set, function silently updates pdfs, cost_value.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/re_evaluate_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Re-evaluate the model — re_evaluate_model","text":"-depth information mathematical details deriving PDFs can found Richter et al. (2023)","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/re_evaluate_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Re-evaluate the model — re_evaluate_model","text":"","code":"# choose a pre-built model (e.g., the Ratcliff model) # and set the discretization as needed my_model <- ratcliff_dm(t_max = 1.5, dx = .005, dt = .005)  # then calculate the model's predicted PDF my_model <- re_evaluate_model(my_model) str(my_model$pdfs) # show the structure of the attached pdfs #> List of 1 #>  $ null:List of 2 #>   ..$ pdf_u: num [1:301] 1e-08 1e-08 1e-08 1e-08 1e-08 ... #>   ..$ pdf_l: num [1:301] 1e-08 1e-08 1e-08 1e-08 1e-08 ...  # if you want the cost_function, make sure some data is attached to the # model (see also the documentation of obs_data()) obs_data(my_model) <- ratcliff_synth_data # this data set comes with dRiftDM my_model <- re_evaluate_model(my_model) str(my_model$pdfs) #> List of 1 #>  $ null:List of 2 #>   ..$ pdf_u: num [1:301] 1e-08 1e-08 1e-08 1e-08 1e-08 ... #>   ..$ pdf_l: num [1:301] 1e-08 1e-08 1e-08 1e-08 1e-08 ... print(my_model$cost_value) #> [1] -191.6983"},{"path":"https://bucky2177.github.io/dRiftDM/reference/remove_estimate_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove flags added when calling estimate_classical — remove_estimate_info","title":"Remove flags added when calling estimate_classical — remove_estimate_info","text":"small internal function ensures flags added estimating model via estimate_classical() removed. used replacing settings model estimated.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/remove_estimate_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove flags added when calling estimate_classical — remove_estimate_info","text":"","code":"remove_estimate_info(drift_dm_obj)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/remove_estimate_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove flags added when calling estimate_classical — remove_estimate_info","text":"drift_dm_obj drift_dm object","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/remove_estimate_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove flags added when calling estimate_classical — remove_estimate_info","text":"model without list entry estimate_info","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/resample_helpers.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal Helpers for Resampling of Summary Statistics — resample_helpers","title":"Internal Helpers for Resampling of Summary Statistics — resample_helpers","text":"functions support construction intervals descriptive statistics computed observed simulated data. used internally stats_resample_dm() methods.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/resample_helpers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal Helpers for Resampling of Summary Statistics — resample_helpers","text":"","code":"stats_resample_wrapper(   obs_data_split,   one_set_idxs = NULL,   type,   b_coding,   ... )  resample_assemble(resample_list, level, original)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/resample_helpers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal Helpers for Resampling of Summary Statistics — resample_helpers","text":"obs_data_split named list data.frames, containing single set observed data, splitted condition one_set_idxs named list numeric vectors. entry contains indices shuffle data.frames obs_data_split. Default NULL keeps obs_data_split . type character, passed calc_stats_pred_obs(). b_coding list boundary coding information, , required wrangle rts match calc_stats_pred_obs(). ... additional arguments passed calc_stats_pred_obs(). resample_list list statistics returned calls stats_resample_wrapper(). level numeric 0 1, controlling width interval. original stats_dm object representing statistic computed original data set model prediction.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/resample_helpers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal Helpers for Resampling of Summary Statistics — resample_helpers","text":"stats_resample_wrapper() returns single stats_dm object one sample. resample_assemble() returns stats_dm object containing lower upper interval bounds along original estimate.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/resample_helpers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internal Helpers for Resampling of Summary Statistics — resample_helpers","text":"stats_resample_wrapper() wraps call calc_stats_pred_obs() use resampling. resample_assemble() takes list resampled statistics original statistic, computes lower upper bounds based requested level. returns stats_dm object added Estimate column.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/set_agg_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Set aggregated data to a model object — set_agg_data","title":"Set aggregated data to a model object — set_agg_data","text":"Helper function aggregates data set across participants attaches resulting group-level summary statistics drift_dm_obj. required user wants fit aggregated data (e.g., via RMSE cost function).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/set_agg_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set aggregated data to a model object — set_agg_data","text":"","code":"set_agg_data(drift_dm_obj, obs_data_ids, ...)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/set_agg_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set aggregated data to a model object — set_agg_data","text":"drift_dm_obj model object (class drift_dm) aggregated data attached. obs_data_ids data.frame containing individual-level observations. Must include ID column identifying participants. ... optional arguments (currently supported n_bins probs relevant using rmse cost function)","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/set_agg_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set aggregated data to a model object — set_agg_data","text":"updated drift_dm_obj aggregated stats_agg obs_data set NULL.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/set_agg_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set aggregated data to a model object — set_agg_data","text":"function intended internal use called estimate_dm() aggregated model fitting requested.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/set_default_arguments.html","id":null,"dir":"Reference","previous_headings":"","what":"Set default graphical parameters for plotting in dRiftDM — set_default_arguments","title":"Set default graphical parameters for plotting in dRiftDM — set_default_arguments","text":"function sets/updates graphical parameters (passed ... plot.*() methods dRiftDM) handles default settings. supports arguments relevant graphics::plot(), graphics::points(), graphics::legend(), graphics::arrows(), allowing users fine-grained control plotting avoiding argument clashes. internal function, users call directly. However, Details list optional arguments users can provide calling plot.* methods","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/set_default_arguments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set default graphical parameters for plotting in dRiftDM — set_default_arguments","text":"","code":"set_default_arguments(dots, leg, id)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/set_default_arguments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set default graphical parameters for plotting in dRiftDM — set_default_arguments","text":"dots named list graphical parameters (created ... passing additional arguments plot.*() methods dRiftDM). leg character vector, used set default legend entries. id character numeric participant value.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/set_default_arguments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set default graphical parameters for plotting in dRiftDM — set_default_arguments","text":"list updated graphical parameters, ready passed plotting functions. (done internally, user)","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/set_default_arguments.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set default graphical parameters for plotting in dRiftDM — set_default_arguments","text":"following list shows possible arguments default values ... shades, lines, points: obs.pch: plotting symbol points observed data (default: 19) obs.pt.bg: background color points (default: NA) pred.lty: line type lines predicted data (default: 1) pred.lwd: line width lines (default: 1) alpha: alpha transparency shaded prediction intervals (default: 0.2) b.lty: line type decision boundaries (default: 1) b.lwd: line width decision boundaries (default: 1) text scaling: cex.axis, cex.lab, cex.main, cex.pt, cex.legend: text point scaling factors (default: 1) main: plot title (default: NULL, id appended applicable) family: font family (default: empty string) legend: legend: legend labels (default: leg) legend.pos: position primary legend (default: \"bottomright\", also possible specify numeric vector legend.pos, providing exact x- y-position) legend.bg: background color legend box (default: \"white\") bty: box type legend (default: \"o\") box.lwd: border line width legend box (default: 1) box.col: border color legend box (default: \"black\") box.lty: border line type legend box (default: 1) lines.legend: optional labels separate legend line types (relevant plot.densities(), default: NULL) lines.legend.pos: position separate legend (default: \"topright\", passing vector exact x- y-positions lines.legend possible) error bars: err.width: width caps error bars (default: 0.05) err.col: color error bars (default: NULL; resolved line/point colors, black gray, depending plot type; recycled across conditions) err.eps: threshold error bar treated small display (default: 0.1% y-axis range) observed histogram KDE (plot RT distributions/densities): obs.hist.col: fill color histograms (default: \"gray20\") obs.kde.col: color KDE lines (default: \"black\") obs.kde.lty: line type KDE lines (default: 2) obs.kde.lwd: line width KDE lines (default: 1) ETC.: horiz.col: color horizontal axis line y = 0 (default: \"gray\") horiz.lwd: color horizontal axis line y = 0 (default: 1)","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/set_default_arguments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set default graphical parameters for plotting in dRiftDM — set_default_arguments","text":"","code":"# This is not an example of calling set_default_arguments() directly # (because it is an internal function), but it illustrates how user-supplied # plotting arguments are processed via this helper.  some_data <- ulrich_flanker_data some_stats <- calc_stats(some_data, type = \"quantiles\")  # See also ?plot.quantiles for more detail plot(   some_stats,   obs.pch = 21,        # optional argument 1: point type   obs.pt.bg = \"black\", # optional argument 2: point background   legend = c(\"foo\", \"bar\") # optional argument 3: custom legend labels ) #> Aggregating across ID  # for a full list of optional arguments, see the Details above"},{"path":"https://bucky2177.github.io/dRiftDM/reference/set_default_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Default Colors — set_default_colors","title":"Set Default Colors — set_default_colors","text":"function assigns default colors none provided adjusts color vector match number n","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/set_default_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Default Colors — set_default_colors","text":"","code":"set_default_colors(colors, n)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/set_default_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Default Colors — set_default_colors","text":"colors character vector, specifying colors conditions. NULL, default colors used. n","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/set_default_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Default Colors — set_default_colors","text":"character vector colors length n.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/set_one_solver_setting.html","id":null,"dir":"Reference","previous_headings":"","what":"Set one specific aspect of the solver settings — set_one_solver_setting","title":"Set one specific aspect of the solver settings — set_one_solver_setting","text":"Internal function update one aspect prms_solve solver.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/set_one_solver_setting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set one specific aspect of the solver settings — set_one_solver_setting","text":"","code":"set_one_solver_setting(drift_dm_obj, name_prm_solve, value_prm_solve)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/set_one_solver_setting.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set one specific aspect of the solver settings — set_one_solver_setting","text":"drift_dm_obj object type drift_dm name_prm_solve aspect address? (\"sigma\", \"t_max\", \"dx\", \"dt\", \"solver\") value_prm_solve either single numeric character string","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/set_one_solver_setting.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set one specific aspect of the solver settings — set_one_solver_setting","text":"updated un-evaluated (!) drift_dm_obj object","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/set_one_solver_setting.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set one specific aspect of the solver settings — set_one_solver_setting","text":"Ensures supplied values reasonable nx nt updated. functions prms_solve<- solver<- pass arguments forward function.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/simulate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Synthetic Responses — simulate_data","title":"Simulate Synthetic Responses — simulate_data","text":"function simulates data based provided model. end, random samples predicted PDFs drawn via approximate inverse CDF sampling.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/simulate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Synthetic Responses — simulate_data","text":"","code":"simulate_data(object, ...)  # S3 method for class 'drift_dm' simulate_data(   object,   ...,   n,   conds = NULL,   k = 1,   lower = NULL,   upper = NULL,   df_prms = NULL,   seed = NULL,   progress = 1 )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/simulate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Synthetic Responses — simulate_data","text":"object object inheriting drift_dm. ... arguments passed functions, .e., simulate_values() simulate_one_data_set(). allows users control distribution original parameter values drawn (k > 0) number decimal places simulated RTs . users want use different distribution uniform simulate_values(), must provide additional arguments (e.g., means sds) format like lower/upper. n numeric, number trials per condition draw. single numeric, condition n trials. Can (named) numeric vector length conditions allow different number trials per condition. conds character vector, specifying conditions sample . Default NULL equivalent conds(object). k numeric larger 0, indicating many data sets shall simulated. > 1, users must specify lower/upper. lower, upper vectors list, specifying simulation space parameter model (see Details). relevant k > 1 df_prms optional data.frame providing parameters used simulating data. df_prms must provide column names matching (coef(object, select_unique = TRUE)), plus column ID identify simulated data set. seed single numeric, optional seed reproducible sampling progress integer, indicating information progress displayed. 0 -> information, 1 -> progress bar. Default 1. effective k > 1.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/simulate_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Synthetic Responses — simulate_data","text":"return value depends whether user specifies lower/upper df_prms. none specified k = 1, data.frame containing columns RT, Error, Cond returned. lower/upper df_prms provided, list entries synth_data prms returned. entry synth_data contains data.frame, columns RT, <b_column>, Cond, ID (name second column, <b_column>, depends b_coding model object). entry prms contains data.frame ID column parameters used simulating synthetic data set.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/simulate_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate Synthetic Responses — simulate_data","text":"simulate_data generic function simulating data based approximate inverse CDF sampling. CDFs derived model's PDFs data drawn mapping samples uniform distribution (\\([0, 1]\\)) values CDF. Note sampled response times correspond values time space (.e., correspond seq(0, t_max, dt), see drift_dm). drift_dm objects, behavior simulate_data depends k. k = 1 lower/upper df_prms arguments supplied, parameters currently set model used generate synthetic data. k > 1, k parameter combinations either randomly drawn via simulate_values gathered provided data.frame df_prms, data simulated parameter combination. specifying lower/upper, parameter combinations simulated via simulate_values. comes handy simple parameter recovery exercises. df_prms specified, parameter combinations data.frame used. Note column names df_prms must match (unique) parameter combinations model (see print(coef(object)))","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/simulate_data.html","id":"details-on-how-to-specify-lower-upper-","dir":"Reference","previous_headings":"","what":"Details on how to specify lower/upper.","title":"Simulate Synthetic Responses — simulate_data","text":"users want simulate data k > 1 lower/upper, parameter values drawn. One great aspect flex_prms object within drift_dm model, users can easily allow certain parameters vary freely across conditions. Consequently, actual number parameters varies settings flex_prms object. many cases, however, simulation space parameter across conditions. instance, model, parameter \"mu\" may vary across conditions \"easy\", \"medium\", \"hard\", lower/upper limits across conditions. avoid users always re-specify simulation space via lower/upper arguments, lower upper arguments refer parameter labels, dRiftDM figures map parameters vary across conditions. example: Assume model parameters \"\" \"B\", conditions \"foo\" \"bar\". Now assume \"\" allowed vary \"foo\" \"bar\". Thus, actually three parameters; \"~foo\", \"~bar\", \"B\". dRiftDM, however, can help . provide lower = c(= 1, B = 2), upper = c(= 3, B = 4), simulate_data checks model, creates vectors temp_lower = c(1,1,2) temp_upper = c(3,3,4) basis simulate parameters. Users three options specify simulation space: Plain numeric vectors (much recommended). case, lower/upper must sorted accordance free parameters flex_prms_obj object (call print(<model>) look Parameter Settings output) Named numeric vectors. case lower/upper provide labels accordance parameters considered \"free\" least across conditions. flexible way lower/upper lists. case, list requires entry called \"default_values\" specifies named plain numeric vectors . list contains entry, behavior lower/upper already numeric vectors. However, lower/upper lists can also provide entries labeled specific conditions, contain named (!) numeric vectors parameter labels. modify value upper/lower parameter space respect specified parameters respective condition.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/simulate_data.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Simulate Synthetic Responses — simulate_data","text":"function fits_ids_dm provided future.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/simulate_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Synthetic Responses — simulate_data","text":"","code":"# Example 1 ---------------------------------------------------------------- # get a pre-built model for demonstration a_model <- ratcliff_dm(t_max = 1.5, dx = .005, dt = .005)  # define a lower and upper simulation space lower <- c(1, 0.4, 0.1) upper <- c(6, 0.9, 0.5)  # now simulate 5 data sets with each 100 trials data_prms <- simulate_data(a_model,   n = 100, k = 5, lower = lower,   upper = upper, seed = 1, progress = 0 ) head(data_prms$synth_data) #>      RT Error Cond ID #> 1 0.597     0 null  1 #> 2 1.291     0 null  1 #> 3 0.415     0 null  1 #> 4 0.650     0 null  1 #> 5 0.915     0 null  1 #> 6 0.352     0 null  1 head(data_prms$prms) #>   ID      muc         b   non_dec #> 1  1 2.327543 0.8491948 0.1823898 #> 2  2 2.860619 0.8723376 0.1706227 #> 3  3 3.864267 0.7303989 0.3748091 #> 4  4 5.541039 0.7145570 0.2536415 #> 5  5 2.008410 0.4308931 0.4079366  # Example 2 ---------------------------------------------------------------- # more flexibility when defining lists for lower and upper # get a pre-built model, and allow muc to vary across conditions a_model <- dmc_dm(t_max = 1.5, dx = .01, dt = .005, instr = \"muc ~ \")  # define a lower and upper simulation space # let muc vary between 2 and 6, but in incomp conditions, let it vary # between 1 and 4 lower <- list(   default_values = c(     muc = 2, b = 0.4, non_dec = 0.1,     sd_non_dec = 0.01, tau = 0.02, A = 0.05,     alpha = 3   ),   incomp = c(muc = 1) ) upper <- list(   default_values = c(     muc = 6, b = 0.9, non_dec = 0.4,     sd_non_dec = 0.15, tau = 0.15, A = 0.15,     alpha = 7   ),   incomp = c(muc = 4) )  data_prms <- simulate_data(a_model,   n = 100, k = 5, lower = lower,   upper = upper, seed = 1, progress = 0 ) range(data_prms$prms$muc.comp) #> [1] 2.806728 5.632831 range(data_prms$prms$muc.incomp) #> [1] 1.185359 3.834026"},{"path":"https://bucky2177.github.io/dRiftDM/reference/simulate_one_data_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate one data set — simulate_one_data_set","title":"Simulate one data set — simulate_one_data_set","text":"Function simulates single data based model (using prms set","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/simulate_one_data_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate one data set — simulate_one_data_set","text":"","code":"simulate_one_data_set(drift_dm_obj, n, conds = NULL, round_to = NULL)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/simulate_one_data_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate one data set — simulate_one_data_set","text":"drift_dm_obj drift_dm object n numeric, specifying number trials per condition. Can single numeric, (named) numeric vector length conds conds character vector, specifying conditions sample . Default NULL equivalent conds(drift_dm_obj) round_to integer, specifying number decimal places simulated RTs . Default 3L.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/simulate_one_data_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate one data set — simulate_one_data_set","text":"data.frame columns \"RT\", \"<b_column>\", \"Cond\"; n rows.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/simulate_traces.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Trajectories/Traces of a Model — simulate_traces","title":"Simulate Trajectories/Traces of a Model — simulate_traces","text":"Simulates single trajectories/traces model (.e., evidence accumulation processes) using forward Euler. Might come handy exploring model's behavior creating figures (see also plot.traces_dm_list)","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/simulate_traces.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Trajectories/Traces of a Model — simulate_traces","text":"","code":"simulate_traces(object, k, ...)  # S3 method for class 'drift_dm' simulate_traces(   object,   k,   ...,   conds = NULL,   add_x = FALSE,   sigma = NULL,   seed = NULL,   unpack = FALSE )  # S3 method for class 'fits_ids_dm' simulate_traces(object, k, ...)  # S3 method for class 'fits_agg_dm' simulate_traces(object, k, ...)  # S3 method for class 'traces_dm_list' print(x, ..., round_digits = drift_dm_default_rounding(), print_steps = 5)  # S3 method for class 'traces_dm' print(   x,   ...,   round_digits = drift_dm_default_rounding(),   print_steps = 5,   print_k = 4 )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/simulate_traces.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Trajectories/Traces of a Model — simulate_traces","text":"object object type drift_dm, fits_ids_dm, fits_agg_dm (see estimate_dm()). k numeric, number traces simulate per condition. Can named numeric vector, specify different number traces per condition. ... additional arguments passed forward respective method. conds optional character vector, conditions traces shall simulated. NULL, traces conditions simulated. add_x logical, indicating whether traces contain variable starting point. TRUE, samples x_fun (see comp_vals) added trace. Default FALSE. sigma optional numeric, providing value >= 0 diffusion constant \"sigma\" temporally override prms_solve. Useful exploring model without noise. seed optional numerical, seed reproducible sampling unpack logical, indicating traces shall \"unpacked\" (see also unpack_obj return value ). x object type traces_dm_list traces_dm, resulting call simulate_traces. round_digits integer, indicating number decimal places (round) used printing traces (default 3). print_steps integer, indicating number steps show printing traces (default 5). print_k integer, indicating many traces shall shown printing traces (default 4).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/simulate_traces.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Trajectories/Traces of a Model — simulate_traces","text":"simulate_traces() returns either object type traces_dm_list, directly list matrices across conditions, containing traces (unpack = TRUE). model one condition (unpack = TRUE), matrix traces one condition directly returned. returned list many entries conditions requested. example, one condition requested via conds argument, list length 1 (unpack = FALSE). conds set NULL (default), list many entries conditions specified supplied object (see also conds). unpack = FALSE, list contains additional attribute time space. matrix traces k rows nt + 1 columns, stored array size (k, nt + 1). Note nt number steps discretization time; see drift_dm. unpack = FALSE, array type traces_dm. contains additional attributes time space, drift rate, boundary, added starting values, starting values added, original model class parameters, boundary coding, solver settings. print methods print.traces_dm_list() print.traces_dm() invisibly return supplied object x.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/simulate_traces.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate Trajectories/Traces of a Model — simulate_traces","text":"simulate_traces() generic function, applicable objects type drift_dm fits_ids_dm (see load_fits_ids). drift_dm objects, simulate_traces() performs simulation parameter values currently set (see coef.drift_dm()). fits_ids_dm objects, simulate_traces() first extracts model parameter values IDs (see coef.fits_ids_dm()). Subsequently, simulations based averaged parameter values. algorithm simulating traces forward euler. See Richter et al. (2023)  Ulrich et al. (2015)  (Appendix ) information.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/simulate_traces.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Simulate Trajectories/Traces of a Model — simulate_traces","text":"Evidence values traces beyond boundary model set NA passing back. reason simulate_traces passes back object type traces_dm_list (instead simply list arrays) provide plot.traces_dm_list print.traces_dm_list function. Users can unpack traces even calling simulate_traces() using unpack_obj().","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/simulate_traces.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Trajectories/Traces of a Model — simulate_traces","text":"","code":"# get a pre-built model to demonstrate the function my_model <- dmc_dm() some_traces <- simulate_traces(my_model, k = 1, seed = 1) print(some_traces) #> Class(es): traces_dm_list #>  #> Time space: #> 0.000, 0.007, 0.015, 0.022 ... 3.000  #>  #> Condition: comp  #> ~>  0.000,  0.027,  0.107,  0.086 ...  0.677  #>  #> Condition: incomp  #> ~>  0.000,  0.143,  0.087,  0.061 ...  0.676   # a method is also available for fits_ids_dm objects # (see estimate_model_ids) # get an exemplary fits_ids_dm object fits <- get_example_fits(\"fits_ids_dm\") some_traces <- simulate_traces(fits, k = 1, seed = 1) print(some_traces) #> Class(es): traces_dm_list #>  #> Time space: #> 0.000, 0.010, 0.020, 0.030 ... 3.000  #>  #> Condition: comp  #> ~>  0.000,  0.032,  0.135,  0.128 ...  0.538  #>  #> Condition: incomp  #> ~>  0.000, -0.097,  0.118,  0.106 ...  0.493   # we can also print only the traces of one condition print(some_traces$comp) #> ~>  0.000,  0.032,  0.135,  0.128 ...  0.538"},{"path":"https://bucky2177.github.io/dRiftDM/reference/simulate_traces_one_cond.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Traces for One Conditions — simulate_traces_one_cond","title":"Simulate Traces for One Conditions — simulate_traces_one_cond","text":"function simulates traces forward Euler. backend function simulate_traces.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/simulate_traces_one_cond.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Traces for One Conditions — simulate_traces_one_cond","text":"","code":"simulate_traces_one_cond(drift_dm_obj, k, one_cond, add_x, sigma)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/simulate_traces_one_cond.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Traces for One Conditions — simulate_traces_one_cond","text":"drift_dm_obj model type drift_dm k single numeric, number traces simulate one_cond single character string, specifying condition shall simulated add_x single logical, indicating starting values shall added . Sometimes, visualizing model, one want starting values. sigma single numeric, override \"sigma\" prms_solve","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/simulate_traces_one_cond.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Traces for One Conditions — simulate_traces_one_cond","text":"array size k times nt + 1. array becomes object type traces_dm, allows easier printing print.traces_dm. Furthermore, object additional attributes: \"t_vec\" -> time space 0 t_max \"mu_vals\" -> drift rate values mu_fun \"b_vals\" -> boundary values b_fun \"samp_x\" -> values starting points (always added traces array. \"add_x\" -> boolean, indicating starting values added \"orig_model_class\" -> class label original model \"orig_prms\" -> parameters traces simulated (respective condition) \"b_coding\" -> boundary coding \"prms_solve\" -> solver settings traces simulated","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/simulate_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Values — simulate_values","title":"Simulate Values — simulate_values","text":"Draw values, likely model parameters.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/simulate_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Values — simulate_values","text":"","code":"simulate_values(   lower,   upper,   k,   distr = NULL,   cast_to_data_frame = TRUE,   add_id_column = \"numeric\",   seed = NULL,   ... )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/simulate_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Values — simulate_values","text":"lower, upper Numeric vectors, indicating lower/upper boundary drawn values. k Numeric, number values drawn value pair lower/upper. named numeric, labels used column names returned object distr Character, indicating distribution draw . Currently available : \"unif\" uniform distribution \"tnorm\" truncated normal distribution. NUll lead \"unif\" (default). cast_to_data_frame Logical, controls whether returned object type data.frame (TRUE) matrix (FALSE). Default TRUE add_id_column Character, controls whether ID column added. Options \"numeric\", \"character\", \"none\". \"numeric\" \"character\" column ID provides values 1 k respective type. none, column added. Note \"character\" casts simulated values character argument cast_to_data_frame set FALSE. seed Numeric, optional seed making simulation reproducable (see details) ... arguments relevant distribution draw ","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/simulate_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Values — simulate_values","text":"cast_to_data_frame TRUE, data.frame k rows least length(lower);length(upper) columns. Otherwise matrix number rows columns. Columns labeled either V1 Vk case lower upper named numeric vectors using labels vectors. add_id_column \"none\", ID column provided respective data type. data type parameters numeric, unless add_id_column \"character\" cast_to_data_frame FALSE. case returned matrix type character.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/simulate_values.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate Values — simulate_values","text":"drawing truncated normal distribution, users must provide values arguments means sds. numeric vectors size lower upper, indicate mean standard deviation normal distributions.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/simulate_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Values — simulate_values","text":"","code":"# Example 1: Draw from uniform distributions ------------------------------ lower <- c(a = 1, b = 1, c = 1) upper <- c(a = 3, b = 4, c = 5) values <- simulate_values(   lower = lower,   upper = upper,   k = 50,   add_id_column = \"none\" ) summary(values) #>        a               b               c         #>  Min.   :1.010   Min.   :1.336   Min.   :1.073   #>  1st Qu.:1.310   1st Qu.:2.063   1st Qu.:2.196   #>  Median :1.890   Median :2.673   Median :2.688   #>  Mean   :1.907   Mean   :2.706   Mean   :2.832   #>  3rd Qu.:2.555   3rd Qu.:3.287   3rd Qu.:3.543   #>  Max.   :2.985   Max.   :3.982   Max.   :4.977    # Example 2: Draw from truncated normal distributions --------------------- lower <- c(a = 1, b = 1, c = 1) upper <- c(a = 3, b = 4, c = 5) means <- c(a = 2, b = 2.5, c = 3) sds <- c(a = 0.5, b = 0.5, c = 0.5) values <- simulate_values(   lower = lower,   upper = upper,   distr = \"tnorm\",   k = 5000,   add_id_column = \"none\",   means = means,   sds = sds ) quantile(values$a, probs = c(0.025, 0.5, 0.975)) #>     2.5%      50%    97.5%  #> 1.165065 1.999474 2.847122  quantile(values$b, probs = c(0.025, 0.5, 0.975)) #>     2.5%      50%    97.5%  #> 1.554678 2.487269 3.451515  quantile(values$c, probs = c(0.025, 0.5, 0.975)) #>     2.5%      50%    97.5%  #> 2.018759 3.006145 3.966381"},{"path":"https://bucky2177.github.io/dRiftDM/reference/solver.html","id":null,"dir":"Reference","previous_headings":"","what":"The Solver for Deriving Model Predictions — solver<-","title":"The Solver for Deriving Model Predictions — solver<-","text":"Functions get set \"solver\" object. \"solver\" controls method deriving model's first passage time (.e., predicted PDFs).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/solver.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Solver for Deriving Model Predictions — solver<-","text":"","code":"solver(object, ...) <- value  # S3 method for class 'drift_dm' solver(object, ..., eval_model = FALSE) <- value  solver(object, ...)  # S3 method for class 'drift_dm' solver(object, ...)  # S3 method for class 'fits_ids_dm' solver(object, ...)  # S3 method for class 'fits_agg_dm' solver(object, ...)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/solver.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Solver for Deriving Model Predictions — solver<-","text":"object object type drift_dm, fits_ids_dm, fits_agg_dm (see estimate_dm()). ... additional arguments (.e., eval_model). value single character string, providing new \"solver\" (.e., approach derive first passage time; see drift_dm()). eval_model logical, indicating model re-evaluated updating solver (see re_evaluate_model). Default FALSE.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/solver.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Solver for Deriving Model Predictions — solver<-","text":"solve() string solver (see drift_dm()). solver<-() updated drift_dm object.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/solver.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Solver for Deriving Model Predictions — solver<-","text":"solver() generic accessor function, solver<-() generic replacement function. default methods get set \"solver\". \"solver\" indicates approach PDFs model calculated. Supported options \"kfe\" \"im_zero\" (method based Kolmogorov-Forward-Equation integral equations, respectively). Note \"im_zero\" supported models assume fixed starting point 0.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/solver.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"The Solver for Deriving Model Predictions — solver<-","text":"replacement function drift_dm objects. replacing approach deriving PDFs model fitted (.e., fits_ids_dm object) make sense.","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/solver.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Solver for Deriving Model Predictions — solver<-","text":"","code":"# get some default model to demonstrate the solver() functions my_model <- ratcliff_dm() solver(my_model) #> [1] \"kfe\" # change to the integral approach solver(my_model) <- \"im_zero\" #> Warning: When solver = 'im_zero', use a small 'dt'; 'im_zero' does not yet support dynamic time stepping. It will usually run slower than the 'kfe' solver. solver(my_model) #> [1] \"im_zero\"  # accessor method also available for fits_ids_dm objects # (see estimate_model_ids) # get an exemplary fits_ids_dm object fits <- get_example_fits(\"fits_ids_dm\") solver(fits) #> [1] \"kfe\""},{"path":"https://bucky2177.github.io/dRiftDM/reference/sort_one_internal_entry.html","id":null,"dir":"Reference","previous_headings":"","what":"Sorts the numbers in ascending order — sort_one_internal_entry","title":"Sorts the numbers in ascending order — sort_one_internal_entry","text":".... within one entry (.e., one prm across conditions, calling internal_list[[\"\"]]); list. Used ensure parameter ordering remains logical","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/sort_one_internal_entry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sorts the numbers in ascending order — sort_one_internal_entry","text":"","code":"sort_one_internal_entry(one_internal_entry)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/sort_one_internal_entry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sorts the numbers in ascending order — sort_one_internal_entry","text":"one_internal_entry one entry (linearized) internal_list, must named","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/sort_one_internal_entry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sorts the numbers in ascending order — sort_one_internal_entry","text":"newly sorted entry list","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/sort_one_internal_entry.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sorts the numbers in ascending order — sort_one_internal_entry","text":"entries internal list either digits (0-x) expressions.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/ssp_dm.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the Shrinking Spotlight Model — ssp_dm","title":"Create the Shrinking Spotlight Model — ssp_dm","text":"function creates drift_dm object corresponds simple version shrinking spotlight model White et al. (2011) .","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/ssp_dm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the Shrinking Spotlight Model — ssp_dm","text":"","code":"ssp_dm(   var_non_dec = TRUE,   var_start = FALSE,   instr = NULL,   obs_data = NULL,   sigma = 1,   t_max = 3,   dt = 0.005,   dx = 0.02,   b_coding = NULL )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/ssp_dm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the Shrinking Spotlight Model — ssp_dm","text":"var_non_dec, var_start logical, indicating whether model variable non-decision time starting point (see also nt_uniform x_uniform component_shelf instr optional string \"instructions\", see modify_flex_prms(). obs_data data.frame, optional data.frame observed data. See obs_data. sigma, t_max, dt, dx numeric, providing settings diffusion constant discretization (see drift_dm) b_coding list, optional list boundary encoding (see b_coding)","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/ssp_dm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the Shrinking Spotlight Model — ssp_dm","text":"object type drift_dm (parent class) ssp_dm (child class), created function drift_dm().","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/ssp_dm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create the Shrinking Spotlight Model — ssp_dm","text":"shrinking spotlight model model developed flanker task. following properties (see component_shelf): constant boundary (parameter b) constant starting point decision boundaries evidence accumulation process driven attention spotlight covers flankers target. area covers flankers target modeled normal distribution mean 0: beginning trial attention wide-spread, width t=0 standard deviation sd_0 trial progresses time, attention spotlight narrows, reflected linear decline standard deviation rate r (minimum 0.001). attention attributed flankers target scaled p controls strength evidence accumulation non-decision time follows truncated normal distribution mean non_dec standard deviation sd_non_dec. model also contains auxiliary parameter sign, used control influence flankers across conditions. really parameter estimated! Per default, parameter r assumed fixed (.e., estimated freely). model also contains custom parameter interf_t, quantifying interference time (sd_0 / r).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/ssp_dm.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create the Shrinking Spotlight Model — ssp_dm","text":"parameters SSP dRiftDM differ size original publication White et al. (2011) . dRiftDM uses symmetrical boundaries around zero diffusion constant 1. original publication, SSP parameterized boundaries ranging zero diffusion constant 0.1. Thus, dRiftDM, boundary b corresponds \\(b = /2 \\cdot 10\\). Additionally, p dRiftDM 10 times larger p original publication. Finally, r expressed seconds, thus r 1000 times larger dRiftDM original publication.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/ssp_dm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create the Shrinking Spotlight Model — ssp_dm","text":"White CN, Ratcliff R, Starns JJ (2011). “Diffusion models flanker task: Discrete versus gradual attentional selection.” Cognitive psychology, 63(4), 210–238. doi:10.1016/j.cogpsych.2011.08.001 .","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/ssp_dm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create the Shrinking Spotlight Model — ssp_dm","text":"","code":"# the model with default settings my_model <- ssp_dm()  # the model with a finer discretization my_model <- ssp_dm(dt = .0025, dx = .01)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/ssp_synth_data.html","id":null,"dir":"Reference","previous_headings":"","what":"A synthetic data set with two conditions — ssp_synth_data","title":"A synthetic data set with two conditions — ssp_synth_data","text":"dataset simulated using Shrinking Spotlight Model (see ssp_dm()) parameter settings typical Flanker task.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/ssp_synth_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A synthetic data set with two conditions — ssp_synth_data","text":"","code":"ssp_synth_data"},{"path":"https://bucky2177.github.io/dRiftDM/reference/ssp_synth_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A synthetic data set with two conditions — ssp_synth_data","text":"data frame 600 rows 3 columns: RT Response Times Error Error Coding (Error Response = 1; Correct Response = 0) Cond Condition ('comp' 'incomp')","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/stats.options.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper to get, set, or reset package-global options for statistics — stats.options","title":"Helper to get, set, or reset package-global options for statistics — stats.options","text":"Internal utility manage global options package via \"stats.dRiftDM\" option slot.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/stats.options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper to get, set, or reset package-global options for statistics — stats.options","text":"","code":"stats.options(...)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/stats.options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper to get, set, or reset package-global options for statistics — stats.options","text":"... input, see Details ","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/stats.options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper to get, set, or reset package-global options for statistics — stats.options","text":"Depending usage: Full list options (input), specific option value (string input), Invisibly NULL (setting resetting options).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/stats.options.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Helper to get, set, or reset package-global options for statistics — stats.options","text":"Usage patterns: stats.options(): Returns full list currently stored options. stats.options(name): Returns value specific option (must single unnamed string). stats.options(name = value, ...): Sets (updates) named option(s). stats.options(NULL): Resets (clears) entire option list. function intended internal use . behaves similarly options() keeps package-specific options single named list getOption(\"stats.dRiftDM\"). Setting argument can done function, additional attempts modify option work (unless argument explicitly set NULL).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/stats_from_pdfs_agg_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Quantiles/CAFs from PDFs and stats_agg_info — stats_from_pdfs_agg_info","title":"Get Quantiles/CAFs from PDFs and stats_agg_info — stats_from_pdfs_agg_info","text":"Internal helper compute predicted summary statistics condition-wise PDFs, following condition order. Calculates summary statistics according information stats_agg_info. Currently supports either quantiles conditional accuracy functions (CAFs).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/stats_from_pdfs_agg_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Quantiles/CAFs from PDFs and stats_agg_info — stats_from_pdfs_agg_info","text":"","code":"stats_from_pdfs_agg_info(pdfs, t_vec, dt, stats_agg_info = NULL, what)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/stats_from_pdfs_agg_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Quantiles/CAFs from PDFs and stats_agg_info — stats_from_pdfs_agg_info","text":"pdfs named list PDFs per condition, containing elements pdf_u pdf_l. t_vec numeric time vector. dt numeric time step. stats_agg_info list information needed compute summaries (e.g., quantile probabilities CAF bin counts; optional). character, one \"quantiles\" \"cafs\", selecting statistic compute.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/stats_from_pdfs_agg_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Quantiles/CAFs from PDFs and stats_agg_info — stats_from_pdfs_agg_info","text":"list numeric vectors, one per condition, containing predicted quantiles CAFs. case failure, NA_real_ values returned.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/stats_resample_dm.html","id":null,"dir":"Reference","previous_headings":"","what":"Resample Observed and Predicted Statistics for Interval Estimation — stats_resample_dm","title":"Resample Observed and Predicted Statistics for Interval Estimation — stats_resample_dm","text":"Internal methods generate bootstrap-like intervals descriptive statistics derived either observed data model predictions. methods support drift_dm objects data.frames containing single participant's observed data.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/stats_resample_dm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resample Observed and Predicted Statistics for Interval Estimation — stats_resample_dm","text":"","code":"stats_resample_dm(object, conds, type, b_coding, ..., R, interval_level)  # S3 method for class 'drift_dm' stats_resample_dm(   object,   conds,   type,   b_coding,   ...,   R = 100,   interval_level = 0.95,   n_sim = NULL )  # S3 method for class 'data.frame' stats_resample_dm(   object,   conds,   type,   b_coding,   ...,   R = 100,   interval_level = 0.95,   progress = 0,   level )  # S3 method for class 'fits_ids_dm' stats_resample_dm(   object,   conds,   type,   b_coding,   ...,   R = 100,   interval_level = 0.95,   progress = 0,   level )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/stats_resample_dm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resample Observed and Predicted Statistics for Interval Estimation — stats_resample_dm","text":"object drift_dm object (model-based resampling) data.frame observed data single participant. drift_dm_stats_types(\"sum_dists\"), \"quantiles\" \"cafs\". conds character vector indicating condition(s) statistics resampled. type character string, specifying type statistic calculate b_coding list, specifying boundary coding, required calculating statistics. ... additional arguments passed stats_resample_wrapper() simulate_data(). Must contain type b_coding R integer, number replications (default 100). interval_level numeric 0 1, controlling width interval (default 0.95). n_sim optional vector, providing trial numbers simulating synthetic data model. relevant observed data attached model via obs_data entry model. progress integer, specifying progress bar shall displayed (1) (0). level character string, specifying level resampling shall take place. \"individual\" lead resampling individual's data. \"group\" lead resampling entire participant.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/stats_resample_dm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resample Observed and Predicted Statistics for Interval Estimation — stats_resample_dm","text":"stats_dm object added column Estimate indicating whether row represents lower interval bound, original value (\"orig\"), upper interval bound. interval level can controlled via interval_level argument.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/stats_resample_dm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Resample Observed and Predicted Statistics for Interval Estimation — stats_resample_dm","text":"stats_resample_dm() generic dispatches class-specific methods. drift_dm objects, generates synthetic data sets model. raw data, resamples observations replacement (.e, performs bootstrap). cases, statistics resampled/generated data used compute intervals requested statistic. Resampling done condition separately. function stats_resample_dm() called within calc_stats().","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/summarize_drift_dm_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads Info file — summarize_drift_dm_info","title":"Reads Info file — summarize_drift_dm_info","text":"Requires path info file fit procedure (see estimate_model_ids) turns main information string","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/summarize_drift_dm_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads Info file — summarize_drift_dm_info","text":"","code":"summarize_drift_dm_info(full_name_to_file, detailed_info)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/summarize_drift_dm_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads Info file — summarize_drift_dm_info","text":"full_name_to_file path info file (.RDS) detailed_info logical, detailed info shall provided ","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/summarize_drift_dm_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads Info file — summarize_drift_dm_info","text":"string infos fit procedure name, last call, , detailed_info = TRUE, model, individuals, lower/upper, seed.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.coefs_dm.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary for coefs_dm Objects — summary.coefs_dm","title":"Summary for coefs_dm Objects — summary.coefs_dm","text":"Summary corresponding printing methods coefs_dm objects. objects result call coef.fits_ids_dm() (.e., calling coef() object type fits_ids_dm).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.coefs_dm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary for coefs_dm Objects — summary.coefs_dm","text":"","code":"# S3 method for class 'coefs_dm' summary(object, ..., round_digits = drift_dm_default_rounding())  # S3 method for class 'summary.coefs_dm' print(x, ..., show_header = TRUE)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.coefs_dm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary for coefs_dm Objects — summary.coefs_dm","text":"object object type coefs_dm. ... additional arguments passed forward. round_digits integer, specifying number decimal places rounding summary underlying data.frame. Default 3. x object class summary.coefs_dm. show_header logical. TRUE, header specifying type statistic displayed.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.coefs_dm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary for coefs_dm Objects — summary.coefs_dm","text":"summary.coefs_dm() summary object class summary.coefs_dm. print.summary.coefs_dm(), supplied object returned invisibly.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.coefs_dm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summary for coefs_dm Objects — summary.coefs_dm","text":"summary.coefs_dm() summarizes coefs_dm objects, returning type, summary underlying data.frame (summary_dataframe), number unique IDs (n_ids).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.coefs_dm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary for coefs_dm Objects — summary.coefs_dm","text":"","code":"# get a fits_ids object for demonstration purpose fits_ids <- get_example_fits(\"fits_ids_dm\") coefs <- coef(fits_ids) summary(coefs) #> Object Type: coefs_dm #>  #> Parameters: #>       muc             b            non_dec        sd_non_dec     #>  Min.   :4.70   Min.   :0.391   Min.   :0.297   Min.   :0.0120   #>  1st Qu.:4.70   1st Qu.:0.418   1st Qu.:0.307   1st Qu.:0.0221   #>  Median :4.70   Median :0.446   Median :0.318   Median :0.0323   #>  Mean   :5.12   Mean   :0.488   Mean   :0.319   Mean   :0.0285   #>  3rd Qu.:5.33   3rd Qu.:0.536   3rd Qu.:0.330   3rd Qu.:0.0368   #>  Max.   :5.96   Max.   :0.626   Max.   :0.341   Max.   :0.0413   #>       tau               A              alpha      #>  Min.   :0.0322   Min.   :0.0893   Min.   :3.33   #>  1st Qu.:0.0667   1st Qu.:0.0956   1st Qu.:4.19   #>  Median :0.1012   Median :0.1019   Median :5.04   #>  Mean   :0.0812   Mean   :0.1286   Mean   :4.99   #>  3rd Qu.:0.1056   3rd Qu.:0.1483   3rd Qu.:5.82   #>  Max.   :0.1101   Max.   :0.1947   Max.   :6.61   #>  #> N IDs: 3"},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.drift_dm.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary for drift_dm objects — summary.drift_dm","title":"Summary for drift_dm objects — summary.drift_dm","text":"summary corresponding printing methods objects class drift_dm, created call drift_dm().","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.drift_dm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary for drift_dm objects — summary.drift_dm","text":"","code":"# S3 method for class 'drift_dm' summary(object, ...)  # S3 method for class 'summary.drift_dm' print(x, ..., round_digits = drift_dm_default_rounding())"},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.drift_dm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary for drift_dm objects — summary.drift_dm","text":"object object class drift_dm. ... additional arguments passed forward (currently used). x object class summary.drift_dm. round_digits integer, specifying number decimal places rounding printed summary. Default 3.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.drift_dm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary for drift_dm objects — summary.drift_dm","text":"summary.drift_dm() returns list class summary.drift_dm (see details entries). print.summary.drift_dm() returns invisibly summary.drift_dm object.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.drift_dm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summary for drift_dm objects — summary.drift_dm","text":"summary.drift_dm() constructs summary list information drift_dm object. returned list class summary.drift_dm can include following entries: class: Class vector drift_dm object. summary_flex_prms: Summary flex_prms object model (see summary.flex_prms). prms_solve: Parameters used solving model (see prms_solve). solver: Solver used generating model predictions. b_coding: Boundary coding model (see b_coding). obs_data: Summary table observed response time data, available, response type (upper/lower boundary). rows correspond upper first lower responses; row names prefixed boundary names b_coding. columns (lower-case) : min, 1st qu., median, mean, 3rd qu., max, n. cost_function: Name (descriptor) cost function used estimation. fit_stats: Fit statistics, available. return named atomic vector created via unlist(unpack_obj(calc_stats(..., type = \"fit_stats\"))). estimate_info: Additional information estimation procedure. print.summary.drift_dm() displays summary formatted way.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.drift_dm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary for drift_dm objects — summary.drift_dm","text":"","code":"# get a pre-built model for demonstration a_model <- dmc_dm(t_max = 1.5, dx = .01, dt = .005) sum_obj <- summary(a_model) print(sum_obj, round_digits = 2) #> Class(es) dmc_dm, drift_dm #>  #> Parameter Values: #>        muc   b non_dec sd_non_dec  tau a    A alpha #> comp     4 0.6     0.3       0.02 0.04 2  0.1     4 #> incomp   4 0.6     0.3       0.02 0.04 2 -0.1     4 #>  #> Parameter Settings: #>        muc b non_dec sd_non_dec tau a A alpha #> comp   1   2 3       4          5   0 6 7     #> incomp 1   2 3       4          5   0 d 7     #>  #> Special Dependencies: #> A ~ incomp == -(A ~ comp) #>  #> Custom Parameters: #>        peak_l #> comp     0.04 #> incomp   0.04 #>  #> Observed Data: #> NULL #>  #> Fit Indices: #>     Log_Like Neg_Log_Like          AIC          BIC       RMSE_s      RMSE_ms  #>           NA           NA           NA           NA           NA           NA  #>  #> ------- #> Deriving PDFS: #>   solver: kfe #>   values: sigma=1, t_max=1.5, dt=0.005, dx=0.01, nt=300, nx=200 #>  #> Boundary Coding: #>   upper: corr  #>   lower: err  #>   expected data column: Error (corr = 0; err = 1)   # more information is provided when we add data to the model obs_data(a_model) <- dmc_synth_data  # (data set comes with dRiftDM) summary(a_model) #> Class(es) dmc_dm, drift_dm #>  #> Parameter Values: #>        muc   b non_dec sd_non_dec  tau a    A alpha #> comp     4 0.6     0.3       0.02 0.04 2  0.1     4 #> incomp   4 0.6     0.3       0.02 0.04 2 -0.1     4 #>  #> Parameter Settings: #>        muc b non_dec sd_non_dec tau a A alpha #> comp   1   2 3       4          5   0 6 7     #> incomp 1   2 3       4          5   0 d 7     #>  #> Special Dependencies: #> A ~ incomp == -(A ~ comp) #>  #> Custom Parameters: #>        peak_l #> comp     0.04 #> incomp   0.04 #>  #> Observed Data: #>              min. 1st qu. median  mean 3rd qu.  max.   n #> corr comp   0.331   0.436  0.479 0.507   0.549 1.075 292 #> corr incomp 0.313   0.474  0.528 0.543   0.592 0.879 268 #> err comp    0.428   0.458  0.526 0.564   0.621 0.871   8 #> err incomp  0.302   0.398  0.452 0.458   0.498 0.771  32 #>  #> Fit Indices: #>     Log_Like Neg_Log_Like          AIC          BIC       RMSE_s      RMSE_ms  #>      124.996     -124.996     -235.992     -205.213        0.082       81.791  #>  #> ------- #> Deriving PDFS: #>   solver: kfe #>   values: sigma=1, t_max=1.5, dt=0.005, dx=0.01, nt=300, nx=200 #>  #> Boundary Coding: #>   upper: corr  #>   lower: err  #>   expected data column: Error (corr = 0; err = 1)   # fit indices are added once we evaluate the model a_model <- re_evaluate_model(a_model) summary(a_model) #> Class(es) dmc_dm, drift_dm #>  #> Parameter Values: #>        muc   b non_dec sd_non_dec  tau a    A alpha #> comp     4 0.6     0.3       0.02 0.04 2  0.1     4 #> incomp   4 0.6     0.3       0.02 0.04 2 -0.1     4 #>  #> Parameter Settings: #>        muc b non_dec sd_non_dec tau a A alpha #> comp   1   2 3       4          5   0 6 7     #> incomp 1   2 3       4          5   0 d 7     #>  #> Special Dependencies: #> A ~ incomp == -(A ~ comp) #>  #> Custom Parameters: #>        peak_l #> comp     0.04 #> incomp   0.04 #>  #> Observed Data: #>              min. 1st qu. median  mean 3rd qu.  max.   n #> corr comp   0.331   0.436  0.479 0.507   0.549 1.075 292 #> corr incomp 0.313   0.474  0.528 0.543   0.592 0.879 268 #> err comp    0.428   0.458  0.526 0.564   0.621 0.871   8 #> err incomp  0.302   0.398  0.452 0.458   0.498 0.771  32 #>  #> Fit Indices: #>     Log_Like Neg_Log_Like          AIC          BIC       RMSE_s      RMSE_ms  #>      124.996     -124.996     -235.992     -205.213        0.082       81.791  #>  #> ------- #> Deriving PDFS: #>   solver: kfe #>   values: sigma=1, t_max=1.5, dt=0.005, dx=0.01, nt=300, nx=200 #>  #> Boundary Coding: #>   upper: corr  #>   lower: err  #>   expected data column: Error (corr = 0; err = 1)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.fits_agg_dm.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary and Printing for fits_agg_dm Objects — print.summary.fits_agg_dm","title":"Summary and Printing for fits_agg_dm Objects — print.summary.fits_agg_dm","text":"Methods summarizing printing objects class fits_agg_dm, contain model fits based aggregated data across participants.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.fits_agg_dm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary and Printing for fits_agg_dm Objects — print.summary.fits_agg_dm","text":"","code":"# S3 method for class 'summary.fits_agg_dm' print(x, ..., just_header = FALSE, round_digits = drift_dm_default_rounding())  # S3 method for class 'fits_agg_dm' summary(object, ..., select_unique = FALSE)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.fits_agg_dm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary and Printing for fits_agg_dm Objects — print.summary.fits_agg_dm","text":"x object class summary.fits_agg_dm. ... additional arguments (currently unused). just_header logical, TRUE print header information without details. Default FALSE. round_digits integer, specifying number decimal places rounding printed summary. Default 3. object object class fits_agg_dm, typically generated call estimate_dm. select_unique logical, passed coef.drift_dm().","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.fits_agg_dm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary and Printing for fits_agg_dm Objects — print.summary.fits_agg_dm","text":"summary.fits_agg_dm() returns list class summary.fits_agg_dm (see Details structure). print.summary.fits_agg_dm() returns input object invisibly.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.fits_agg_dm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summary and Printing for fits_agg_dm Objects — print.summary.fits_agg_dm","text":"summary.fits_agg_dm function creates structured summary fits_agg_dm object, containing: summary_drift_dm_obj: list information underlying drift diffusion model (returned summary.drift_dm()). prms: Parameter estimates obtained model fit. equivalent call coef.drift_dm() stored model object. obs_data: list providing number individual participants average number trials per condition across participants. print.summary.fits_agg_dm function formats prints summary human-readable form.","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.fits_agg_dm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary and Printing for fits_agg_dm Objects — print.summary.fits_agg_dm","text":"","code":"# Load example fit object fits_agg <- get_example_fits(\"fits_agg\") sum_obj <- summary(fits_agg) print(sum_obj, round_digits = 2) #> Fit approach: aggregated - classical #> Fitted model type: ratcliff_dm, drift_dm #> Optimizer: nmkb #> Convergence: TRUE #> N Individuals: 3  #> Average Trial Numbers: #>  100 trials null #>  #> Parameters: #>       muc    b non_dec #> null 2.89 0.53    0.29 #>  #> Cost Function: rmse #>  #> Fit Indices: #>     Log_Like Neg_Log_Like          AIC          BIC       RMSE_s      RMSE_ms  #>           NA           NA           NA           NA         0.01         9.38  #>  #> ------- #> Deriving PDFS: #>   solver: kfe #>   values: sigma=1, t_max=3, dt=0.005, dx=0.005, nt=600, nx=400"},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.fits_ids_dm.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary and Printing for fits_ids_dm Objects — print.summary.fits_ids_dm","title":"Summary and Printing for fits_ids_dm Objects — print.summary.fits_ids_dm","text":"Methods summarizing printing objects class fits_ids_dm, contain multiple fits across individuals.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.fits_ids_dm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary and Printing for fits_ids_dm Objects — print.summary.fits_ids_dm","text":"","code":"# S3 method for class 'summary.fits_ids_dm' print(x, ..., just_header = FALSE, round_digits = drift_dm_default_rounding())  # S3 method for class 'fits_ids_dm' summary(object, ..., select_unique = FALSE)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.fits_ids_dm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary and Printing for fits_ids_dm Objects — print.summary.fits_ids_dm","text":"x object class summary.fits_ids_dm. ... additional arguments (currently unused). just_header logical, TRUE print header information without details. Default FALSE. round_digits integer, specifying number decimal places rounding printed summary. Default 3. object object class fits_ids_dm, generated call load_fits_ids. select_unique logical, passed coef.drift_dm().","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.fits_ids_dm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary and Printing for fits_ids_dm Objects — print.summary.fits_ids_dm","text":"summary.fits_ids_dm() returns list class summary.fits_ids_dm (see Details section summarizing entry list). print.summary.fits_ids_dm() returns invisibly summary.fits_ids_dm object.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.fits_ids_dm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summary and Printing for fits_ids_dm Objects — print.summary.fits_ids_dm","text":"summary.fits_ids_dm function creates summary object. contents summary object depends whether user supplies fits_ids_dm object created estimate_dm() deprecated function load_fits_ids(). first case, object contains: summary_drift_dm_obj: list information underlying drift diffusion model (returned summary.drift_dm()). prms: parameter values across conditions (essentially call coef() argument select_unique = FALSE). stats: named list matrices condition, including mean standard error parameter. obs_data: list providing number individual participants average number trials per condition across participants. optimizer: string optimizer used conv_info: list providing summary convergance messages IDs second case, object contains: lower upper: Lower upper bounds search space. model_type: Description model type, based class information. prms: parameter values across conditions (essentially call coef() argument select_unique = FALSE). stats: named list matrices condition, including mean standard error parameter. N: number individuals. print.summary.fits_ids_dm function displays summary object formatted manner.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.fits_ids_dm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary and Printing for fits_ids_dm Objects — print.summary.fits_ids_dm","text":"","code":"# get an auxiliary object of type fits_ids_dm for demonstration purpose all_fits <- get_example_fits(\"fits_ids_dm\") sum_obj <- summary(all_fits) print(sum_obj, round_digits = 2) #> Fit approach: separately - classical #> Fitted model type: dmc_dm, drift_dm #> Optimizer: nmkb  #> Convergence: TRUE  #> N Individuals: 3  #> Average Trial Numbers: #>  168 trials comp; 168 trials incomp #> Cost Function: neg_log_like #>  #> Parameter Summary: comp  #>          muc    b non_dec sd_non_dec  tau a    A alpha peak_l #> mean    5.12 0.49    0.32       0.03 0.08 2 0.13  4.99   0.08 #> std_err 0.42 0.07    0.01       0.01 0.02 0 0.03  0.94   0.02 #>  #> Parameter Summary: incomp  #>          muc    b non_dec sd_non_dec  tau a     A alpha peak_l #> mean    5.12 0.49    0.32       0.03 0.08 2 -0.13  4.99   0.08 #> std_err 0.42 0.07    0.01       0.01 0.02 0  0.03  0.94   0.02 #>  #> ------- #> Deriving PDFS: #>   solver: kfe #>   values: sigma=1, t_max=3, dt=0.01, dx=0.01, nt=300, nx=200"},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.flex_prms.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarizing Flex Parameters — summary.flex_prms","title":"Summarizing Flex Parameters — summary.flex_prms","text":"summary method class \"flex_prms\".","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.flex_prms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarizing Flex Parameters — summary.flex_prms","text":"","code":"# S3 method for class 'flex_prms' summary(object, ...)  # S3 method for class 'summary.flex_prms' print(   x,   ...,   round_digits = drift_dm_default_rounding(),   dependencies = TRUE,   cust_parameters = TRUE )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.flex_prms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarizing Flex Parameters — summary.flex_prms","text":"object object class flex_prms, resulting call flex_prms. ... additional arguments passed forward respective method x object class summary.flex_prms; result call summary.flex_prms(). round_digits integer, indicating number decimal places (round) used (default 3). dependencies logical, controlling summary special dependencies shall printed (see \"special dependency instruction\" details flex_prms) cust_parameters logical, controlling summary custom parameters shall printed (see \"additional/custom parameter instruction\" details flex_prms)","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.flex_prms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarizing Flex Parameters — summary.flex_prms","text":"summary.flex_prms() returns list class summary.flex_prms (see Details section summarizing entry list). print.summary.flex_prms() returns invisibly summary.flex_prms object.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.flex_prms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarizing Flex Parameters — summary.flex_prms","text":"summary.flex_prms() function creates summary object containing: prms_matrix: parameter values across conditions. unique_matrix: character matrix, showing parameters relate across conditions. depend_strings: Special Dependencies, formatted string. cust_prms_matrix: (exist), matrix containing custom parameters. print.summary.flex_prms() function displays summary object formatted manner.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.flex_prms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarizing Flex Parameters — summary.flex_prms","text":"","code":"# create a flex_prms object flex_obj <- flex_prms(c(a = 1, b = 2), conds = c(\"foo\", \"bar\"))  sum_obj <- summary(flex_obj) print(sum_obj) #> Parameter Values: #>     a b #> foo 1 2 #> bar 1 2 #>  #> Parameter Settings: #>     a b #> foo 1 2 #> bar 1 2 #>   # the print function for the summary object is identical to the print # function of the flex_prms object print(flex_obj) #> Parameter Values: #>     a b #> foo 1 2 #> bar 1 2 #>  #> Parameter Settings: #>     a b #> foo 1 2 #> bar 1 2 #>"},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.mcmc_dm.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary for mcmc_dm Objects — summary.mcmc_dm","title":"Summary for mcmc_dm Objects — summary.mcmc_dm","text":"Summary corresponding print methods objects class mcmc_dm, resulting call estimate_bayesian(). mcmc_dm objects contain MCMC samples Bayesian parameter estimation drift_dm() objects. summary includes basic parameter statistics, quantiles, Gelman-Rubin diagnostics, effective sample sizes.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.mcmc_dm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary for mcmc_dm Objects — summary.mcmc_dm","text":"","code":"# S3 method for class 'mcmc_dm' summary(object, ..., id = NULL)  # S3 method for class 'summary.mcmc_dm' print(   x,   ...,   round_digits = drift_dm_default_rounding(),   show_statistics = TRUE,   show_quantiles = FALSE,   show_gr = TRUE,   show_eff_n = TRUE )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.mcmc_dm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary for mcmc_dm Objects — summary.mcmc_dm","text":"object object class mcmc_dm, returned estimate_bayesian() ... additional arguments passed forward coda::summary.mcmc.list(). id optional single numeric character, specifying one participant IDs subset object hierarchical case. Note id converted character, dimension names chains stored object character. NULL, function applied group-level parameters. x object class summary.mcmc_dm, returned summary.mcmc_dm(). round_digits integer, defining number digits rounding output. show_statistics logical, TRUE, print basic parameter statistics (means, SDs, standard errors). show_quantiles logical, TRUE, print quantile summary. show_gr logical; TRUE, print Gelman-Rubin convergence diagnostics parameter. show_eff_n logical, TRUE, print effective sample sizes parameter.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.mcmc_dm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary for mcmc_dm Objects — summary.mcmc_dm","text":"summary.mcmc_dm() returns object class summary.mcmc_dm, list following entries: general: General information MCMC run. statistics: Basic parameter summary statistics. quantiles: Quantiles parameter. gr: Gelman-Rubin diagnostics. eff_n: Effective sample sizes. print.summary.mcmc_dm() prints selected summary components returns input object invisibly.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.mcmc_dm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summary for mcmc_dm Objects — summary.mcmc_dm","text":"summary diagnostic statistics MCMC chains obtained using R package coda.","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.mcmc_dm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary for mcmc_dm Objects — summary.mcmc_dm","text":"","code":"mcmc_obj <- get_example_fits(\"mcmc_dm\") print(mcmc_obj) #> Sampler: DE-MCMC  #> Hierarchical: FALSE  #> No. Parameters: 3  #> No. Chains: 10  #> Iterations Per Chain: 200  summary(mcmc_obj) #> Sampler: DE-MCMC  #> Hierarchical: FALSE  #> No. Parameters: 3  #> No. Chains: 10  #> Iterations Per Chain: 200  #>  #> ------- #> Parameter Summary: Basic Statistics #>          Mean    SD Naive SE Time-series SE #> muc     3.059 0.204    0.005          0.018 #> b       0.411 0.013    0.000          0.001 #> non_dec 0.299 0.004    0.000          0.000 #>  #> Gelman-Rubin Statistics #>     muc       b non_dec  #>   1.102   1.182   1.190  #>  #> Effective Sample Size #>     muc       b non_dec  #> 191.578 205.012 179.752"},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.stats_dm.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary for stats_dm Objects — summary.stats_dm","title":"Summary for stats_dm Objects — summary.stats_dm","text":"Summary corresponding printing methods objects classes stats_dm, basic_stats, cafs, quantiles, delta_funs, fit_stats, sum_dist, stats_dm_list. object types result call calc_stats().","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.stats_dm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary for stats_dm Objects — summary.stats_dm","text":"","code":"# S3 method for class 'stats_dm' summary(object, ..., round_digits = drift_dm_default_rounding())  # S3 method for class 'basic_stats' summary(object, ...)  # S3 method for class 'cafs' summary(object, ...)  # S3 method for class 'quantiles' summary(object, ...)  # S3 method for class 'delta_funs' summary(object, ...)  # S3 method for class 'fit_stats' summary(object, ...)  # S3 method for class 'sum_dist' summary(object, ...)  # S3 method for class 'stats_dm_list' summary(object, ...)  # S3 method for class 'summary.stats_dm' print(x, ..., show_header = TRUE, drop_cols = NULL)  # S3 method for class 'summary.basic_stats' print(x, ...)  # S3 method for class 'summary.cafs' print(x, ...)  # S3 method for class 'summary.quantiles' print(x, ...)  # S3 method for class 'summary.delta_funs' print(x, ...)  # S3 method for class 'summary.fit_stats' print(x, ...)  # S3 method for class 'summary.sum_dist' print(x, ...)  # S3 method for class 'summary.stats_dm_list' print(x, ...)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.stats_dm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary for stats_dm Objects — summary.stats_dm","text":"object object respective class ... additional arguments passed forward. round_digits integer, specifying number decimal places rounding summary underlying data.frame. Default 3. x object respective class. show_header logical. TRUE, header specifying type statistic displayed. drop_cols character vector, specifying columns table summarizing underlying data.frame displayed.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.stats_dm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary for stats_dm Objects — summary.stats_dm","text":"summary.*() methods, summary object class corresponding input class. print.*() methods, respective object returned invisibly","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.stats_dm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summary for stats_dm Objects — summary.stats_dm","text":"summary.stats_dm(): Summarizes stats_dm objects, returning type, summary underlying data.frame (summary_dataframe), , possible, number unique IDs (n_ids). summary.sum_dist(): Extends summary.stats_dm() additional information source (source). summary.basic_stats(): Extends summary.sum_dist() additional information conditions (conds). summary.cafs(): Extends summary.sum_dist() additional information bins (bins) conditions (conds). summary.quantiles(): Extends summary.sum_dist() additional information quantile levels (probs) conditions (conds). summary.delta_funs(): Extends summary.sum_dist() additional information quantile levels (probs). summary.fit_stats(): Identical summary.stats_dm. summary.stats_dm_list(): Applies summary function element list returns list respective summary objects. Note following class relationships properties: basic_stats, cafs, quantiles, delta_funs inheriting sum_dist. sum_dist fit_stats objects inheriting stats_dm. stats_dm_list object just list containing instances stats_dm.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.stats_dm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary for stats_dm Objects — summary.stats_dm","text":"","code":"# get a model with data for demonstration purpose a_model <- dmc_dm(t_max = 2.0, dx = .01, dt = .005) obs_data(a_model) <- dmc_synth_data  # now get some statistics and call the summary functions some_stats <- calc_stats(a_model, type = c(\"quantiles\", \"fit_stats\")) summary(some_stats) # summary.stats_dm_list #> Summary of Element 1: quantiles #>  #> Dependent Variables: #>    Quant_corr      Quant_err     #>  Min.   :0.325   Min.   :0.301   #>  1st Qu.:0.411   1st Qu.:0.361   #>  Median :0.465   Median :0.431   #>  Mean   :0.475   Mean   :0.438   #>  3rd Qu.:0.530   3rd Qu.:0.491   #>  Max.   :0.672   Max.   :0.698   #>  #> Sources: obs, pred  #> Conditions: comp, incomp  #> Probs: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9  #> ------- #>  #> Summary of Element 2: fit_stats #>  #> Dependent Variables: #>     Log_Like    Neg_Log_Like       AIC            BIC           RMSE_s       #>  Min.   :125   Min.   :-125   Min.   :-236   Min.   :-205   Min.   :0.0818   #>  1st Qu.:125   1st Qu.:-125   1st Qu.:-236   1st Qu.:-205   1st Qu.:0.0818   #>  Median :125   Median :-125   Median :-236   Median :-205   Median :0.0818   #>  Mean   :125   Mean   :-125   Mean   :-236   Mean   :-205   Mean   :0.0818   #>  3rd Qu.:125   3rd Qu.:-125   3rd Qu.:-236   3rd Qu.:-205   3rd Qu.:0.0818   #>  Max.   :125   Max.   :-125   Max.   :-236   Max.   :-205   Max.   :0.0818   #>     RMSE_ms     #>  Min.   :81.8   #>  1st Qu.:81.8   #>  Median :81.8   #>  Mean   :81.8   #>  3rd Qu.:81.8   #>  Max.   :81.8   #>  #> ------- summary(some_stats$quantiles) # summary.quantiles #> Type of Statistic: quantiles #>  #> Dependent Variables: #>    Quant_corr      Quant_err     #>  Min.   :0.325   Min.   :0.301   #>  1st Qu.:0.411   1st Qu.:0.361   #>  Median :0.465   Median :0.431   #>  Mean   :0.475   Mean   :0.438   #>  3rd Qu.:0.530   3rd Qu.:0.491   #>  Max.   :0.672   Max.   :0.698   #>  #> Sources: obs, pred  #> Conditions: comp, incomp  #> Probs: 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9"},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.traces_dm.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary for traces_dm and traces_dm_list Objects — summary.traces_dm","title":"Summary for traces_dm and traces_dm_list Objects — summary.traces_dm","text":"Summary corresponding printing methods traces_dm traces_dm_list objects, resulting call simulate_traces(). , traces_dm objects entries returned list.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.traces_dm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary for traces_dm and traces_dm_list Objects — summary.traces_dm","text":"","code":"# S3 method for class 'traces_dm' summary(object, ...)  # S3 method for class 'summary.traces_dm' print(x, ..., round_digits = drift_dm_default_rounding())  # S3 method for class 'traces_dm_list' summary(object, ...)  # S3 method for class 'summary.traces_dm_list' print(x, ..., round_digits = drift_dm_default_rounding())"},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.traces_dm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary for traces_dm and traces_dm_list Objects — summary.traces_dm","text":"object object class traces_dm traces_dm_list. ... additional arguments passed forward. x object type summary.traces_dm summary.traces_dm_list. round_digits integer, specifying number decimal places rounding printed summary. Default 3.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.traces_dm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary for traces_dm and traces_dm_list Objects — summary.traces_dm","text":"summary.traces_dm() returns list class summary.traces_dm (see Details section summarizing entry list). summary.traces_dm_list() returns list class summary.traces_dm_list (see Details section summarizing entry list). print.summary.traces_dm() returns summary.traces_dm object invisibly. print.summary.traces_dm_list() returns summary.traces_dm_list object invisibly.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.traces_dm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summary for traces_dm and traces_dm_list Objects — summary.traces_dm","text":"summary.traces_dm() function constructs summary list information traces_dm object, including: k: number traces object. add_x: logical, indicating whether starting values added. orig_model_class: class label original model. orig_prms: parameters traces simulated (respective condition) prms_solve: solver settings traces simulated. fpt_desc: summary first passage times, including mean, standard deviation, response probabilities upper lower boundaries. summary.traces_dm_list() function constructs summary list information traces_dm_list object, including: k: numeric vector, providing number traces per condition. add_x: logical vector, indicating whether starting values added condition. orig_prms: matrix, containing original parameter values per condition, traces simulated. orig_model_class: class label original model prms_solve: matrix solver settings per condition. fpt_desc: summary first passage times per condition, including mean, standard deviation, response probabilities upper lower boundary. print.summary.traces_dm()  print.summary.traces_dm_list() functions display summary formatted way.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/summary.traces_dm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary for traces_dm and traces_dm_list Objects — summary.traces_dm","text":"","code":"# get a couple of traces a cross conditions traces <- simulate_traces(dmc_dm(), k = c(5, 10)) summary(traces) #> Starting Points Added: #>   comp incomp  #>     no     no  #>  #>  #> Number of Traces: #>   comp incomp  #>      5     10  #>  #>  #> Summary of First Passage Times: #>         mean    sd p_corr p_err #> comp   0.102 0.109      1     0 #> incomp 0.177 0.117      1     0 #>  #>  #> Orginal Parameter Values: #>        muc   b non_dec sd_non_dec  tau a    A alpha #> comp     4 0.6     0.3       0.02 0.04 2  0.1     4 #> incomp   4 0.6     0.3       0.02 0.04 2 -0.1     4 #>  #> ------- #> Original Model Class(es): dmc_dm, drift_dm #>  #> Settings: #>        sigma t_max    dt   dx  nt  nx #> comp       1     3 0.007 0.02 400 100 #> incomp     1     3 0.007 0.02 400 100 #>   # get a single traces object one_traces_obj <- traces[[1]] summary(one_traces_obj) #> Starting Points Added: no #>  #> Number of Traces: 5 #>  #> Summary of First Passage Times: #>   mean     sd p_corr  p_err  #>  0.102  0.109  1.000  0.000  #>  #>  #> Orginal Parameter Values: #>        muc          b    non_dec sd_non_dec        tau          a          A  #>       4.00       0.60       0.30       0.02       0.04       2.00       0.10  #>      alpha  #>       4.00  #>  #> ------- #> Original Model Class(es): dmc_dm, drift_dm #> Settings: sigma=1, t_max=3, dt=0.007, dx=0.02, nt=400, nx=100"},{"path":"https://bucky2177.github.io/dRiftDM/reference/trapz.html","id":null,"dir":"Reference","previous_headings":"","what":"Numerical integration using the trapezoidal rule — internal_trapz","title":"Numerical integration using the trapezoidal rule — internal_trapz","text":"internal helper functions perform numerical integration via trapezoidal rule. workhorse internal_trapz(), computes full integral returns cumulative integral.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/trapz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Numerical integration using the trapezoidal rule — internal_trapz","text":"","code":"internal_trapz(x, y, return_cumsum = FALSE)  cumtrapz(x, y)  trapz(x, y)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/trapz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Numerical integration using the trapezoidal rule — internal_trapz","text":"x numeric vector strictly increasing x-values. y numeric vector function values x. return_cumsum logical, TRUE return cumulative integral point x (starting 0), FALSE return total integral.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/trapz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Numerical integration using the trapezoidal rule — internal_trapz","text":"trapz(): single numeric value cumtrapz(): numeric vector cumulative integrals (starting 0) internal_trapz(): either , depending return_cumsum","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/trapz.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Numerical integration using the trapezoidal rule — internal_trapz","text":"internal_trapz(x, y, return_cumsum = FALSE): core implementation trapz(x, y) wrapper internal_trapz(x, y, FALSE), returns total integral. cumtrapz(x, y) wrapper internal_trapz(x, y, TRUE), returns cumulative integral.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/try_cast_integer.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Character Digits to Numeric Digits — try_cast_integer","title":"Convert Character Digits to Numeric Digits — try_cast_integer","text":"internal function casts character vector integer, character vector contains digits entries. input vector type character entry contains non-digit, vector returned unmodified.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/try_cast_integer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Character Digits to Numeric Digits — try_cast_integer","text":"","code":"try_cast_integer(values)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/try_cast_integer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Character Digits to Numeric Digits — try_cast_integer","text":"values vector values attempt conversion integer.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/try_cast_integer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Character Digits to Numeric Digits — try_cast_integer","text":"integer vector conversion succeeds; otherwise, original vector.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/ulrich_flanker_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Exemplary Flanker Data — ulrich_flanker_data","title":"Exemplary Flanker Data — ulrich_flanker_data","text":"Data Flanker task collected course study Ulrich et al. (2015) .","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/ulrich_flanker_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exemplary Flanker Data — ulrich_flanker_data","text":"","code":"ulrich_flanker_data"},{"path":"https://bucky2177.github.io/dRiftDM/reference/ulrich_flanker_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Exemplary Flanker Data — ulrich_flanker_data","text":"data.frame 16 individuals following columns: ID Individual IDs RT Response Times Error Error Coding (Error Response = 1; Correct Response = 0) Cond Condition ('comp' 'incomp')","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/ulrich_simon_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Exemplary Simon Data — ulrich_simon_data","title":"Exemplary Simon Data — ulrich_simon_data","text":"Data Simon task collected course study Ulrich et al. (2015) .","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/ulrich_simon_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exemplary Simon Data — ulrich_simon_data","text":"","code":"ulrich_simon_data"},{"path":"https://bucky2177.github.io/dRiftDM/reference/ulrich_simon_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Exemplary Simon Data — ulrich_simon_data","text":"data.frame 16 individuals following columns: ID Individual IDs RT Response Times Error Error Coding (Error Response = 1; Correct Response = 0) Cond Condition ('comp' 'incomp')","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/unpack_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Unpack/Destroy dRiftDM Objects — unpack_obj","title":"Unpack/Destroy dRiftDM Objects — unpack_obj","text":"calling simulate_traces(), calc_stats, coef.fits_ids_dm returned objects custom objects (e.g., subclasses list data.frame). respective subclasses created provide convenient plotting printing, really provide additional functionality. goal unpack_obj() provide convenient way strip away attributes respective objects (revealing standard arrays, data.frames, lists).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/unpack_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unpack/Destroy dRiftDM Objects — unpack_obj","text":"","code":"unpack_obj(object, ...)  # S3 method for class 'traces_dm' unpack_obj(object, ..., unpack_elements = TRUE)  # S3 method for class 'traces_dm_list' unpack_obj(object, ..., unpack_elements = TRUE, conds = NULL)  # S3 method for class 'stats_dm' unpack_obj(object, ..., unpack_elements = TRUE)  # S3 method for class 'stats_dm_list' unpack_obj(object, ..., unpack_elements = TRUE, type = NULL)  # S3 method for class 'coefs_dm' unpack_obj(object, ..., unpack_elements = TRUE)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/unpack_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unpack/Destroy dRiftDM Objects — unpack_obj","text":"object object type stats_dm, stats_dm_list, traces_dm, traces_dm_list, coefs_dm ... arguments passed respective method. unpack_elements logical, indicating traces_dm, stats_dm, coefs_dm objects shall unpacked. Default TRUE. conds optional character vector, indicating specific condition(s). default NULL lead conds = conds(object). Thus, per default conditions addressed type optional character vector, indicating specific type(s) statistics. default NULL access types statics.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/unpack_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unpack/Destroy dRiftDM Objects — unpack_obj","text":"traces_dm_list, returned value list, conds specifies one condition. example, conds = c(\"foo\", \"bar\"), returned value list two (named) entries \"foo\" \"bar\". returned list one entry (either traces_dm_list one condition, see conds, user explicitly requested one condition), underlying array traces_dm object returned directly. stats_dm_list, returned value list, type specifies one condition. returned list one entry, underlying data.frame stats_dm object returned directly. traces_dm, unpack_obj() returns array traces, unpack=TRUE. unpack=FALSE, unmodified object returned. stats_dm, unpack_obj() returns data.frame respective statistic, unpack=TRUE. unpack=FALSE, unmodified object returned. coefs_dm, unpack_obj() returns data.frame parameters, unpack=TRUE. unpack=FALSE, unmodified object returned.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/unpack_obj.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Unpack/Destroy dRiftDM Objects — unpack_obj","text":"unpack_obj() generic function strip away custom information class labels stats_dm, stats_dm_list, traces_dm, traces_dm_list, coefs_dm objects. objects created calling simulate_traces(), calc_stats, coef.fits_ids_dm. traces_dm_list, unpack_obj() returns requested conditions (see argument conds). result contains objects type traces_dm unpack_elements = FALSE. unpack_elements = TRUE, result contains plain arrays traces. stats_dm_list, unpack_obj() returns requested statistics (see argument type). result contains objects type stats_dm unpack_elements = FALSE. unpack_elements = TRUE, result contains plain data.frames statistics.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/unpack_obj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unpack/Destroy dRiftDM Objects — unpack_obj","text":"","code":"# get a pre-built model to demonstrate the function my_model <- dmc_dm()  # get some traces ... some_traces <- simulate_traces(my_model, k = 2, seed = 1) some_traces <- some_traces$comp class(some_traces) #> [1] \"traces_dm\" # ... unpack them to get the underlying arrays class(unpack_obj(some_traces)) #> [1] \"matrix\" \"array\"   # get some statistics ... some_stats <- calc_stats(my_model, type = \"cafs\") class(some_stats) #> [1] \"cafs\"       \"sum_dist\"   \"stats_dm\"   \"data.frame\" class(unpack_obj(some_stats)) #> [1] \"data.frame\"  # get some parameters ... some_coefs <- coef(get_example_fits(\"fits_ids_dm\")) class(some_coefs) #> [1] \"coefs_dm\"   \"data.frame\" class(unpack_obj(some_coefs)) #> [1] \"data.frame\""},{"path":"https://bucky2177.github.io/dRiftDM/reference/unpack_traces.html","id":null,"dir":"Reference","previous_headings":"","what":"Unpack/Destroy Traces Objects — unpack_traces","title":"Unpack/Destroy Traces Objects — unpack_traces","text":"unpack_traces() deprecated. Please use general unpack_obj() function.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/unpack_traces.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unpack/Destroy Traces Objects — unpack_traces","text":"","code":"unpack_traces(object, ...)  # S3 method for class 'traces_dm' unpack_traces(object, ..., unpack = TRUE)  # S3 method for class 'traces_dm_list' unpack_traces(object, ..., unpack = TRUE, conds = NULL)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/unpack_traces.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unpack/Destroy Traces Objects — unpack_traces","text":"object object type traces_dm traces_dm_list (see simulate_traces()) ... arguments passed respective method. unpack logical, indicating traces_dm objects shall unpacked. Default TRUE. conds optional character, indicating specific condition(s). default NULL lead conds = conds(object). Thus, per default conditions accessed.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/unpack_traces.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unpack/Destroy Traces Objects — unpack_traces","text":"traces_dm_list, returned value list, conds specifies one condition. example, conds = c(\"foo\", \"bar\"), returned value list two (named) entries \"foo\" \"bar\". returned list one entry (either traces_dm_list one condition, see conds, user explicitly requested one condition), underlying array traces_dm object returned directly. traces_dm, unpack_traces() returns array traces, unpack=TRUE. unpack=FALSE, unmodified object returned.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/unpack_traces.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Unpack/Destroy Traces Objects — unpack_traces","text":"unpack_traces() generic function strip away \"unnecessary\" information traces_dm_list traces_dm objects. objects created calling simulate_traces(). traces_dm_list, unpack_traces() returns requested conditions (see argument conds). result contains objects type traces_dm unpack = FALSE. unpack = TRUE, result contains plain arrays traces.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/update_special_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Update all prms — update_special_values","title":"Update all prms — update_special_values","text":"function takes flex_prms object updates prms_matrix according special instructions internal_list custom parameters cust_prms","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/update_special_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update all prms — update_special_values","text":"","code":"update_special_values(flex_prms_obj)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/update_special_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update all prms — update_special_values","text":"flex_prms_obj flex_prms object","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/update_special_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update all prms — update_special_values","text":"modified flex_prms_obj (.e,. updated prms_matrix updated cust_prms$values)","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/update_stats_agg.html","id":null,"dir":"Reference","previous_headings":"","what":"Update aggregated statistics in a drift_dm object — update_stats_agg","title":"Update aggregated statistics in a drift_dm object — update_stats_agg","text":"Internal function creates updates aggregated statistics (stats_agg stats_agg_info) drift_dm object, depending specified cost function. maximum likelihood estimation (\"neg_log_like\"), aggregated statistics removed, raw RTs used directly.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/update_stats_agg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update aggregated statistics in a drift_dm object — update_stats_agg","text":"","code":"update_stats_agg(   drift_dm_obj,   which_cost_function,   probs = NULL,   n_bins = NULL )"},{"path":"https://bucky2177.github.io/dRiftDM/reference/update_stats_agg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update aggregated statistics in a drift_dm object — update_stats_agg","text":"drift_dm_obj drift_dm object. which_cost_function character string, indicating cost function used. Must one drift_dm_cost_functions(). probs optional numeric vector probabilities quantile calculation. NULL, defaults taken drift_dm_default_probs(). n_bins optional integer, giving number bins CAFs. NULL, defaults taken drift_dm_default_n_bins().","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/update_stats_agg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update aggregated statistics in a drift_dm object — update_stats_agg","text":"input drift_dm_obj, stats_agg stats_agg_info entries updated removed, depending cost function availability observed data","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/update_stats_agg.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Update aggregated statistics in a drift_dm object — update_stats_agg","text":"function called obs_data() cost_function()","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/reference/validate_drift_dm.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate a DDM object — validate_drift_dm","title":"Validate a DDM object — validate_drift_dm","text":"Performs basic checks ensure everything expected model. function called whenever modifying ddm object!","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/validate_drift_dm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate a DDM object — validate_drift_dm","text":"","code":"validate_drift_dm(drift_dm_obj)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/validate_drift_dm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate a DDM object — validate_drift_dm","text":"drift_dm_obj ddm object","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/validate_drift_dm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate a DDM object — validate_drift_dm","text":"ddm object, passed checks. Usually, unmodified. exception observed RTs larger t_max. , returned ddm object new t_maxthat covers largest RTs.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/validate_drift_dm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate a DDM object — validate_drift_dm","text":"Checks: flex_prms_object via validate_flex_prms() prms_solve (named numeric vector check_if_named_numeric_vector() expected entries) nt, nx make sense. may adjust t_max t_max smaller max(RT) observed data solver string (single string refers something actually implemented). im_zero, check dirac delta 0. cost_function string (single string refers something actually implemented). cost_function summary statistic, objects stats_agg exists correct structure. list comp_funs contains functions function provides expected arguments PDFs exist, names, lengths data type cost_val exists, single numeric obs_data exists, data type, names, structure b_coding (column, u_name_value l_name_value).","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/validate_fits_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate a an Object of Type fits_ids_dm — validate_fits_ids","title":"Validate a an Object of Type fits_ids_dm — validate_fits_ids","text":"checks information fits_ids_dm (see estimate_model_ids) object ensures nothing obviously fishy going individual model fits.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/validate_fits_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate a an Object of Type fits_ids_dm — validate_fits_ids","text":"","code":"validate_fits_ids(fits_ids, progress)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/validate_fits_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate a an Object of Type fits_ids_dm — validate_fits_ids","text":"fits_ids object type fits_ids_dm progress numeric, 0, progress, 1 basic output, 2 progress bars","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/validate_fits_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate a an Object of Type fits_ids_dm — validate_fits_ids","text":"unmodified fits_ids objects passing tests.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/validate_fits_ids.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate a an Object of Type fits_ids_dm — validate_fits_ids","text":"Checks: names info file respective entries make sense flex_prms object saved models overall model (except differences prm values). class, prms_solve solver saved models overall model estimated parameters parameter space  b_coding functions number fits matches number individuals info file data fitted model matches observed data info file","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/validate_flex_prms.html","id":null,"dir":"Reference","previous_headings":"","what":"checks if a flex_prms_object is parameterized in a reasonable way — validate_flex_prms","title":"checks if a flex_prms_object is parameterized in a reasonable way — validate_flex_prms","text":"checks internal_list checks liner_internal_list checks parameter matrix","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/validate_flex_prms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"checks if a flex_prms_object is parameterized in a reasonable way — validate_flex_prms","text":"","code":"validate_flex_prms(flex_prms_obj)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/validate_flex_prms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"checks if a flex_prms_object is parameterized in a reasonable way — validate_flex_prms","text":"flex_prms_obj object type flex_prms","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/validate_flex_prms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"checks if a flex_prms_object is parameterized in a reasonable way — validate_flex_prms","text":"unmodified flex_prms_obj object; stop/warning statements","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/validate_stats_dm.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate a stats_dm Object — validate_stats_dm","title":"Validate a stats_dm Object — validate_stats_dm","text":"validate_stats_dm internal (.e., exported) generic function ensure stats_dm objects, well specific subclasses (basic_stats, cafs, quantiles, delta_funs, sum_dist, fit_stats), meet necessary structural column requirements. method performs class-specific validation checks.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/validate_stats_dm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate a stats_dm Object — validate_stats_dm","text":"","code":"validate_stats_dm(stat_df)  # S3 method for class 'basic_stats' validate_stats_dm(stat_df)  # S3 method for class 'cafs' validate_stats_dm(stat_df)  # S3 method for class 'quantiles' validate_stats_dm(stat_df)  # S3 method for class 'delta_funs' validate_stats_dm(stat_df)  # S3 method for class 'densities' validate_stats_dm(stat_df)  # S3 method for class 'sum_dist' validate_stats_dm(stat_df)  # S3 method for class 'fit_stats' validate_stats_dm(stat_df)  # S3 method for class 'stats_dm' validate_stats_dm(stat_df)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/validate_stats_dm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate a stats_dm Object — validate_stats_dm","text":"stat_df data.frame class stats_dm, basic_stats, cafs, quantiles, delta_funs, sum_dist, fit_stats containing calculated statistics validated.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/validate_stats_dm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate a stats_dm Object — validate_stats_dm","text":"Returns unmodified stat_df convenience.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/validate_stats_dm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate a stats_dm Object — validate_stats_dm","text":"validation process checks required columns structure based class stat_df. class specific requirements: validate_stats_dm.stats_dm: Ensures stat_df data.frame. validate_stats_dm.basic_stats: Checks presence \"Cond\", exactly two columns prefix \"Mean_, exactly one column prefixed \"P_\" validate_stats_dm.cafs: Checks presence \"Bin\", \"Cond\", exactly one column prefixed \"P_\" validate_stats_dm.quantiles: Requires \"Prob\", \"Cond\", exactly two columns prefixed \"Quant_\" validate_stats_dm.delta_funs: Ensures \"Prob\" exists, least two columns prefixed \"Quant_\", least one column  Avg_ Delta_ validate_stats_dm.delta_funs: Ensures \"Cond\", \"Time\", \"Stat\" exists, least two column \"Dens_\". validate_stats_dm.sum_dist: Checks \"Source\" column. , also checked whether cell combinations appear equally often. validate_stats_dm.fit_stats: Checks fit statistics summarize log-likelihood cost function RMSE statistic. former case, columns \"Log_Like\", \"Neg_Log_Like\", \"AIC\", \"BIC\" expected. latter case, columns \"RMSE_ms\" \"RMSE_s\" expected.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/x2prms_vals.html","id":null,"dir":"Reference","previous_headings":"","what":"Update the parameter matrix for vector inputs (internal docu) — x2prms_vals","title":"Update the parameter matrix for vector inputs (internal docu) — x2prms_vals","text":"function takes numeric vector maps values parameter matrix using linearized internal list. also lead update values special dependencies set","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/x2prms_vals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update the parameter matrix for vector inputs (internal docu) — x2prms_vals","text":"","code":"x2prms_vals(x, flex_prms_obj)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/x2prms_vals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update the parameter matrix for vector inputs (internal docu) — x2prms_vals","text":"x numeric vector new values set flex_prms_obj flex_prms (linearized) internal list parameter matrix","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/x2prms_vals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update the parameter matrix for vector inputs (internal docu) — x2prms_vals","text":"flex_prms_obj updated parameter matrix","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/x2prms_vals.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update the parameter matrix for vector inputs (internal docu) — x2prms_vals","text":"perform input checks!","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/x_beta.html","id":null,"dir":"Reference","previous_headings":"","what":"Beta-Shaped Starting Point Distribution Centered Around Zero — x_beta","title":"Beta-Shaped Starting Point Distribution Centered Around Zero — x_beta","text":"Beta-Shaped Starting Point Distribution Centered Around Zero","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/x_beta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Beta-Shaped Starting Point Distribution Centered Around Zero — x_beta","text":"","code":"x_beta(prms_model, prms_solve, x_vec, one_cond, ddm_opts)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/x_beta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Beta-Shaped Starting Point Distribution Centered Around Zero — x_beta","text":"prms_model model parameters; prm name \"alpha\" required prms_solve solver settings x_vec evidence space one_cond one condition ddm_opts optional arguments attached object","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/x_beta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Beta-Shaped Starting Point Distribution Centered Around Zero — x_beta","text":"returns PDF beta-shaped distribution x_vec, centered around zero shape parameter \"alpha\".","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/x_dirac_0.html","id":null,"dir":"Reference","previous_headings":"","what":"Constant Starting Point at Zero — x_dirac_0","title":"Constant Starting Point at Zero — x_dirac_0","text":"dirac delta zero, provide bias constant starting point","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/x_dirac_0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constant Starting Point at Zero — x_dirac_0","text":"","code":"x_dirac_0(prms_model, prms_solve, x_vec, one_cond, ddm_opts)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/x_dirac_0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constant Starting Point at Zero — x_dirac_0","text":"prms_model model parameters; prm name required prms_solve solver settings x_vec evidence space one_cond one condition ddm_opts optional arguments attached object","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/x_dirac_0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constant Starting Point at Zero — x_dirac_0","text":"vector length x_vec zeros, except element middle vector","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/x_uniform.html","id":null,"dir":"Reference","previous_headings":"","what":"Uniform Starting Point Distribution Centered Around Zero — x_uniform","title":"Uniform Starting Point Distribution Centered Around Zero — x_uniform","text":"Uniform Starting Point Distribution Centered Around Zero","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/x_uniform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uniform Starting Point Distribution Centered Around Zero — x_uniform","text":"","code":"x_uniform(prms_model, prms_solve, x_vec, one_cond, ddm_opts)"},{"path":"https://bucky2177.github.io/dRiftDM/reference/x_uniform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uniform Starting Point Distribution Centered Around Zero — x_uniform","text":"prms_model model parameters; prm name \"range_start\" required prms_solve solver settings x_vec evidence space one_cond one condition ddm_opts optional arguments attached object","code":""},{"path":"https://bucky2177.github.io/dRiftDM/reference/x_uniform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uniform Starting Point Distribution Centered Around Zero — x_uniform","text":"returns PDF uniform distribution x_vec, centered around zero range \"range_start\".","code":""},{"path":[]},{"path":"https://bucky2177.github.io/dRiftDM/news/index.html","id":"important-notes-for-users-0-3-0","dir":"Changelog","previous_headings":"","what":"Important notes for users","title":"dRiftDM 0.3.0","text":"workflow estimating model changed introduction estimate_dm(). version onward, fits automatically saved file system reloaded later. Instead, estimate_dm() returns fitted objects directly, save results .","code":""},{"path":"https://bucky2177.github.io/dRiftDM/news/index.html","id":"major-and-new-features-0-3-0","dir":"Changelog","previous_headings":"","what":"Major and new features","title":"dRiftDM 0.3.0","text":"dRiftDM now uses adaptive time-stepping scheme deriving PDFs — substantially increasing speed. now support variability drift rate constant drift-rate component (Ratcliff DDM). plot() methods redesigned avoid argument clashes provide customization options. drift_dm() objects gain new entry cost_function. lets us use \"rmse\" statistic full-range maximum likelihood, enables fitting aggregated data via \"rmse\". neg_log_like entry drift_dm object replaced general cost_value. cost_function() accessor replacement methods introduced. cost_value() accessor replacement methods introduced. estimate_dm() introduced. estimate_model() deprecated superseded estimate_dm(). estimate_model_ids() deprecated. Use estimate_dm(), save individual fits file system — ensuring consistent behavior across fitting modes. get_lower_upper() introduced. provides default upper lower parameter ranges pre-built models components. Hierarchical non-hierarchical Bayesian parameter estimation now possible via estimate_dm()! still experimental, returned mcmc_dm type fully integrated yet (currently: diagnostic checks parameter extraction supported). calc_stats() gains basic_stats densities options type. basic_stats returns means, standard deviations, choice proportions; densities returns density values. calc_stats() gains resample option quantify variability model predictions. can resample given model single individual, bootstrap entire sample. calc_stats() arguments split_by_ID average superseded general level argument. simulate_data() longer returns RTs restricted time grid (step size dt). PDFs linearly interpolated inverse transform sampling. can control RT decimal places via round_to. simulate_data() now supports conds argument. ssp_dm() gains var_non_dec var_start toggle variability non-decision time starting point. ssp_dm() now uses uniform variability non-decision time, aligning closely original publication. ssp_dm() default dx dt increase computation speed balancing numerical error many parameter values. dmc_dm() default dx dt increase computation speed balancing numerical error many parameter values. ratcliff_dm() default dx dt increase computation speed balancing numerical error many parameter values. coef() plot() now support mcmc_dm object type. check_discretization() introduced. function helps us assess loss precision increasing dt dx. get_example_fits_ids() removed. get_example_fits() introduced obtain fits_ids_dm, fits_agg_dm, mcmc_dm objects.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/news/index.html","id":"minor-0-3-0","dir":"Changelog","previous_headings":"","what":"Minor","title":"dRiftDM 0.3.0","text":"nt_constant() now uses round() instead .integer() locate Dirac delta index, reducing bias non-decision time estimates. pdfs() now also returns vector time domain. coef() plot() method now supports mcmc_dm objects. progress argument replaces verbose calc_stats (default: 1). \"fit_stats\" option calc_stats() now returns multiple fit statistics, including log-likelihood, AIC, BIC, root-mean-squared error. simulate_traces now properly considers trial--trial variability drift rate.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/news/index.html","id":"bug-and-code-fixes-0-3-0","dir":"Changelog","previous_headings":"","what":"Bug and code fixes","title":"dRiftDM 0.3.0","text":"calc_stats() now precise due proper numerical integration.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/news/index.html","id":"driftdm-022","dir":"Changelog","previous_headings":"","what":"dRiftDM 0.2.2","title":"dRiftDM 0.2.2","text":"CRAN release: 2025-03-04","code":""},{"path":"https://bucky2177.github.io/dRiftDM/news/index.html","id":"new-features-0-2-2","dir":"Changelog","previous_headings":"","what":"New features:","title":"dRiftDM 0.2.2","text":"print() summary() methods now available traces_dm, traces_dm_list, stats_dm, stats_dm_list, coefs_dm objects. New unpack_obj() makes easy strip away attributes class labels objects created dRiftDM. specific predecessor function unpack_traces() now deprecated unpack_traces(). New pdfs() provides access model’s predicted probability density function.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/news/index.html","id":"minor-improvements-and-changes-0-2-2","dir":"Changelog","previous_headings":"","what":"Minor improvements and changes:","title":"dRiftDM 0.2.2","text":"coef.drift_dm() gains select_custom_prms argument. list_stats_dm objects now called stats_dm_list name consistency. traces_dm objects now additional attributes (required appropriate print summary methods). consistent capitalization print.summary.*() methods.","code":""},{"path":"https://bucky2177.github.io/dRiftDM/news/index.html","id":"driftdm-021","dir":"Changelog","previous_headings":"","what":"dRiftDM 0.2.1","title":"dRiftDM 0.2.1","text":"CRAN release: 2025-01-08 Initial CRAN submission.","code":""}]
