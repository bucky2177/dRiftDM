% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/core_dm.R
\name{set_mu_fun}
\alias{set_mu_fun}
\alias{set_mu_int_fun}
\alias{set_x_fun}
\alias{set_b_fun}
\alias{set_dt_b_fun}
\alias{set_nt_fun}
\title{Setting components of a drift_dm model}
\usage{
set_mu_fun(drift_dm_obj, mu_fun)

set_mu_int_fun(drift_dm_obj, mu_int_fun)

set_x_fun(drift_dm_obj, x_fun)

set_b_fun(drift_dm_obj, b_fun)

set_dt_b_fun(drift_dm_obj, dt_b_fun)

set_nt_fun(drift_dm_obj, nt_fun)
}
\arguments{
\item{drift_dm_obj}{an object inheriting from \link{drift_dm}}

\item{mu_fun, mu_int_fun, x_fun, b_fun, dt_b_fun, nt_fun}{functions defining
the respective components. See below for more details}
}
\value{
Returns the modified \code{drift_dm_obj} object.
}
\description{
Functions starting with \verb{set_*} provide ways for modifying the
list underlying every object inheriting from \code{drift_dm}. Using the setter
methods is the highly recommended way of changing the attributes of a model
(see \link{drift_dm} for a list of the built-in attributes).
\itemize{
\item \code{set_mu_fun} can be used to set the function defining the drift rate
\item \code{set_mu_int_fun} can be used to set the function defining the integral
of the drift rate
\item \code{set_x_fun} can be used to set the function defining the pdf of the
starting condition
\item \code{set_b_fun} can be used to set the function defining the boundary
\item \code{set_dt_b_fun} can be used to set the first derivative of the function
defining the boundary
\item \code{set_nt_fun} can be used to set the function providing the pdf of the
non-decision time
}
}
\details{
Please visit the \code{vignette("use_ddm_models", "dRiftDM")} for more in-depth
information on how to modify an object of type drift_dm.

\code{mu_fun} and \code{mu_int_fun} provide the drift rate and its integral,
respectively, across the time space in a condition.

\code{x_fun} provides a distribution of the starting point across the evidence
space.

\code{b_fun} and \code{dt_b_fun} provide the values of the (symmetric) boundary and its
derivative, respectively, across the time space in a condition.

\code{nt_fun} provides a distribution of the non-decision component across the
time space in one condition.

All of the listed functions are stored in the list \code{comp_funs} of the
respective model.

Each component function must take the model itself, the time or evidence
space, and a condition as arguments. These arguments are provided with values
when dRiftDM internally calls them (e.g., when calculating the pdfs, see
\link{calc_pdfs})

In order to work with \code{dRiftDM}, \code{mu_fun},
\code{mu_int_fun}, \code{b_fun}, \code{dt_b_fun}, \code{nt_fun} must have the following
declaration: \verb{my_fun = function(drift_dm_obj, t_vec, one_cond}). Here,
\code{drift_dm_obj} is an object inheriting from type drift_dm, \code{t_vec} is
the time space, going from 0 to \code{t_max} with length \code{nt + 1} (see
\link{drift_dm}), and \code{one_cond} is of type character, indicating the
current condition. Each function must return a numeric vector
of the same length as \code{t_vec}. For \code{mu_fun},
\code{mu_int_fun}, \code{b_fun}, \code{dt_b_fun} the returned values provide the
respective boundary/drift rate (and their derivative/integral) at every time
step \eqn{t}. For \code{nt_fun} the returned values provide the density of the
non-decision time across the time space (which get convoluted with the
pdfs when solving the model, see \link{calc_pdfs})

In order to work with \code{dRiftDM}, \code{x_fun} must have the following
declaration: \verb{my_fun = function(drift_dm_obj, x_vec, one_cond}). Here,
\code{drift_dm_obj} is an object inheriting from type drift_dm, \code{x_vec} is
the evidence space, going from -1 to 1 with length \code{nx + 1} (see
\link{drift_dm}), and \code{one_cond} is of type character, indicating the
current condition. Each function must return a numeric vector
of the same length as \code{x_vec}, providing the density values of the
starting points across the evidence space.
\subsection{Drift rate and its integral:}{

The drift rate is the first derivative of the expected time-course
of the diffusion process. For instance, if we assume that the diffusion
process \eqn{X} is linear with a slope of \eqn{v}...
\deqn{E(X) = v \cdot t}
...then the drift rate at every time step \eqn{t} is the constant \eqn{v},
obtained by taking the derivative of the expected time-course with respect
to \eqn{t}:
\deqn{\mu(t) = v}
Conversely, the integral of the drift rate is identical to the expected
time-course:
\deqn{\mu_{int}(t) = v \cdot t}

For the drift rate \code{mu_fun}, the default function when calling \code{drift_dm()}
is a numeric vector containing the number \eqn{3}. Its integral counterpart
\code{mu_int_fun} will return a numeric vector containing the values \code{t_vec*3}.
}

\subsection{Starting Point Distribution:}{

The starting point of a diffusion model refers to the initial value taken
by the evidence accumulation process at time \eqn{t=0}. This is a pdf
over the evidence space.

The default function when calling \code{drift_dm()} will be a function
returning a dirac delta on zero, meaning that every potential diffusion
process starts at 0.
}

\subsection{Boundary:}{

The Boundary refers to the values of the absorbing boundaries at every time
step \eqn{t} in a diffusion model. In most cases, this will be a constant.
For instance:
\deqn{b(t) = b}
In this case, its derivative with respect to \eqn{t} is 0.

The default function when calling \code{drift_dm()} will be function for \code{b_fun}
returning a  numeric vector of length \code{length(t_vec)} containing the number
\eqn{0.5}. Its counterpart \code{dt_b} will return a numeric vector of the same
length containing its derivative, namely, \code{0}.
}

\subsection{Non-Decision Time:}{

The non-decision time refers to an additional time-requirement. Its
distribution across the time space will be convoluted with the pdfs derived
from the diffusion process.

In psychology, the non-decision time captures time-requirements outside the
central decision process, such as stimulus perception and motor execution.

The default function when calling \code{drift_dm()} returns a dirac
delta, shifted to \eqn{t = 0.3}.
}
}
